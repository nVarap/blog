{
  
    
        "post0": {
            "title": "Big Idea Quiz 2",
            "content": "Score . . Questions Incorrect: . None! I actually didn’t get any . Reflection: . It was fun, I really enjoyed taking this quiz .",
            "url": "https://nvarap.github.io/blog/work/2037/03/17/BigIdea2.html",
            "relUrl": "/work/2037/03/17/BigIdea2.html",
            "date": " • Mar 17, 2037"
        }
        
    
  
    
        ,"post1": {
            "title": "Data Structures- Hashmaps, Sets, Hash Tables, Hashing and Collisions",
            "content": "What is a Hashtable/Hashmap? . A hashtable is a data structure that with a collection of key-value pairs, where each key maps to a value, and the keys must be unique and hashable. . In Python there is a built in hashtable known as a ___. | . The primary purpose of a hashtable is to provide efficient lookup, insertion, and deletion operations. When an element is to be inserted into the hashtable, a hash function is used to map the key to a specific index in the underlying array that is used to store the key-value pairs. The value is then stored at that index. When searching for a value, the hash function is used again to find the index where the value is stored. . The key advantage of a hashtable over other data structures like arrays and linked lists is its average-case time complexity for lookup, insertion, and deletion operations. . The typical time complexity of a hashtable is ___. | . What is Hashing and Collision? . Hashing is the process of mapping a given key to a value in a hash table or hashmap, using a hash function. The hash function takes the key as input and produces a hash value or hash code, which is then used to determine the index in the underlying array where the value is stored. The purpose of hashing is to provide a quick and efficient way to access data, by eliminating the need to search through an entire data structure to find a value. . However, it is possible for two different keys to map to the same hash value, resulting in a collision. When a collision occurs, there are different ways to resolve it, depending on the collision resolution strategy used. . Python&#39;s dictionary implementation is optimized to handle collisions efficiently, and the performance of the dictionary is generally very good, even in the presence of collisions. However, if the number of collisions is very high, the performance of the dictionary can degrade, so it is important to choose a good hash function that minimizes collisions when designing a Python dictionary. . What is a Set? . my_set = set([1, 2, 3, 2, 1]) print(my_set) # What do you notice in the output? # # # Why do you think Sets are in the same tech talk as Hashmaps/Hashtables? # # . Dictionary Example . Below are just some basic features of a dictionary. As always, documentation is always the main source for all the full capablilties. . lover_album = { &quot;title&quot;: &quot;Lover&quot;, &quot;artist&quot;: &quot;Taylor Swift&quot;, &quot;year&quot;: 2019, &quot;genre&quot;: [&quot;Pop&quot;, &quot;Synth-pop&quot;], &quot;tracks&quot;: { 1: &quot;I Forgot That You Existed&quot;, 2: &quot;Cruel Summer&quot;, 3: &quot;Lover&quot;, 4: &quot;The Man&quot;, 5: &quot;The Archer&quot;, 6: &quot;I Think He Knows&quot;, 7: &quot;Miss Americana &amp; The Heartbreak Prince&quot;, 8: &quot;Paper Rings&quot;, 9: &quot;Cornelia Street&quot;, 10: &quot;Death By A Thousand Cuts&quot;, 11: &quot;London Boy&quot;, 12: &quot;Soon You&#39;ll Get Better (feat. Dixie Chicks)&quot;, 13: &quot;False God&quot;, 14: &quot;You Need To Calm Down&quot;, 15: &quot;Afterglow&quot;, 16: &quot;Me! (feat. Brendon Urie of Panic! At The Disco)&quot;, 17: &quot;It&#39;s Nice To Have A Friend&quot;, 18: &quot;Daylight&quot; } } # What data structures do you see? # # # Printing the dictionary print(lover_album) . print(lover_album.get(&#39;tracks&#39;)) # or print(lover_album[&#39;tracks&#39;]) . print(lover_album.get(&#39;tracks&#39;)[4]) # or print(lover_album[&#39;tracks&#39;][4]) . lover_album[&quot;producer&quot;] = [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;] # What can you change to make sure there are no duplicate producers? # # # Printing the dictionary print(lover_album) . lover_album[&quot;tracks&quot;].update({19: &quot;All Of The Girls You Loved Before&quot;}) # How would add an additional genre to the dictionary, like electropop? # # # Printing the dictionary print(lover_album) . for k,v in lover_album.items(): # iterate using a for loop for key and value print(str(k) + &quot;: &quot; + str(v)) # Write your own code to print tracks in readable format # # . def search(): search = input(&quot;What would you like to know about the album?&quot;) if lover_album.get(search.lower()) == None: print(&quot;Invalid Search&quot;) else: print(lover_album.get(search.lower())) search() # This is a very basic code segment, how can you improve upon this code? # # . Hacks . Answer ALL questions in the code segments | Create a diagram or comparison illustration (Canva). What are the pro and cons of using this data structure? | Dictionary vs List | . | Expand upon the code given to you, possible improvements in comments | Build your own album showing features of a python dictionary . | For Mr. Yeung&#39;s class: Justify your favorite Taylor Swift song, answer may effect seed . | .",
            "url": "https://nvarap.github.io/blog/2023/03/29/DS-hashmaps.html",
            "relUrl": "/2023/03/29/DS-hashmaps.html",
            "date": " • Mar 29, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "UPDQ",
            "content": "My Score . Questions and Explanations . Question 1 . . An employee wants to count the number of books that meet all of the following criteria. . Is a mystery book Costs less than $10.00 Has at least one copy in stock . For a given row in the spreadsheet, suppose genre contains the genre as a string, num contains the number of copies in stock as a number, and cost contains the cost as a number. Which of the following expressions will evaluate to true if the book should be counted and evaluates to false otherwise? . A: (genre = &quot;mystery&quot;) AND ((1 ≤ num) AND (cost &lt; 10.00)) . B: (genre = &quot;mystery&quot;) AND ((1 &lt; num) AND (cost &lt; 10.00)) . C: (genre = &quot;mystery&quot;) OR ((1 ≤ num) OR (cost &lt; 10.00)) . D: (genre = &quot;mystery&quot;) OR ((1 &lt; num) OR (cost &lt; 10.00)) . Correct Answer: A. For a book to be counted, the value of genre must be “mystery” so that only mystery books are counted. The value of num must be greater than or equal to 1 so that only books that have at least one copy in stock are counted. The value of cost must be less than 10.00 so that only books that cost less than $10 are counted. All three conditions must be true, so the AND operator is used between them. . Question 2 . The owner of a clothing store records the following information for each transaction made at the store during a 7-day period. . The date of the transaction The method of payment used in the transaction The number of items purchased in the transaction The total amount of the transaction, in dollars Customers can pay for purchases using cash, check, a debit card, or a credit card. . Using only the data collected during the 7-day period, which of the following statements is true? . A: The average amount spent per day during the 7-day period can be determined by sorting the data by the total transaction amount, then adding the 7 greatest amounts, and then dividing the sum by 7. . B: The method of payment that was used in the greatest number of transactions during the 7-day period can be determined by sorting the data by the method of payment, then adding the number of items purchased for each type of payment method, and then finding the maximum sum. . C: The most expensive item purchased on a given date can be determined by searching the data for all items purchased on the given date and then sorting the matching items by item price. . D: The total number of items purchased on a given date can be determined by searching the data for all transactions that occurred on the given date and then adding the number of items purchased for each matching transaction. . Correct Answer: D. For each transaction, the data includes the date of the transaction and the number of items purchased in the transaction. By searching the data to find all transactions that occurred on the given date, and then adding the number of items purchased in each of those transactions, the total number of items purchased on a given date can be determined. . Question 3 . . A new rechargeable battery pack is available for products that use AA batteries. Which of the following best explains how the data files in the table can be used to send a targeted e-mail to only those customers who have purchased products that use AA batteries to let them know about the new accessory? . A: Use the customer IDs in the purchases file to search the customers file to generate a list of e-mail addresses . B: Use the product IDs in the purchases file to search the products file to generate a list of product names that use AA batteries . C: Use the customers file to generate a list of customer IDs, then use the list of customer IDs to search the products file to generate a list of product names that use AA batteries . D: Use the products file to generate a list of product IDs that use AA batteries, then use the list of product IDs to search the purchases file to generate a list of customer IDs, then use the list of customer IDs to search the customers file to generate a list of e-mail addresses . Correct Answer: D. The information in the products list can be used to create a list of the product IDs of all products that use AA batteries. Since the products list and the purchases list have the product ID information in common, the list of product IDs can be used in the purchases list to create a list of customer IDs of all the customers who purchased products that use AA batteries. Finally, since the purchases list and the customers list have the customer ID in common, the list of customer IDs can be used to generate a list of e-mail addresses of the customers who purchased products that use AA batteries. . Question 4 . . In column A, each unknown photographer is set to “(unknown)”. In column C, each unknown year is set to -1. . A student is developing an algorithm to determine the name of the photographer who took the oldest photograph in the collection. Photographs whose photographer or year are unknown are to be ignored. . Once the algorithm is complete, the desired entry will appear in the first row of the spreadsheet. If there are multiple entries that meet the desired criteria, then any of them can appear in the first row. . The student has the following actions available. . Which of the following sequences of steps can be used to identify the desired entry? . Select two answers. A: Filter by photographer, then filter by year, then sort by subject B: Filter by photographer, then filter by year, then sort by year C: Sort by subject, then sort by year, then filter by photographer D: Sort by year, then filter by year, then filter by photographer . Correct answers: B &amp; D. Filtering by photographer will remove any entries with unknown photographers. Filtering by year will remove any entries with unknown years. Sorting by year will sort the remaining entries in column C from least to greatest, putting the photograph with the lowest year value in the first row of the spreadsheet. For answer D, sorting by year will sort the spreadsheet on column C from least to greatest. Filtering by year will remove any entries with unknown years. Filtering by photographer will remove any entries with unknown photographers. Since the order of the entries is not affected by the filters, the photograph with the lowest year value will be in the first row of the spreadsheet. . Question 5 . A student wants to count the number of shows that meet both of the following criteria. . Is a talk show Is on Saturday or Sunday . For a given row in the spreadsheet, suppose genre contains the genre as a string and day contains the day as a string. Which of the following expressions will evaluate to true if the show should be counted and evaluates to false otherwise? A: (genre = &quot;talk&quot;) AND ((day = &quot;Saturday&quot;) AND (day = &quot;Sunday&quot;)) B: (genre = &quot;talk&quot;) AND ((day = &quot;Saturday&quot;) OR (day = &quot;Sunday&quot;)) C: (genre = &quot;talk&quot;) OR ((day = &quot;Saturday&quot;) AND (day = &quot;Sunday&quot;)) D: (genre = &quot;talk&quot;) OR ((day = &quot;Saturday&quot;) OR (day = &quot;Sunday&quot;)) . Correct Answer: B. For a show to be counted, the value of genre must be “talk” and the value of day must be “Saturday” or “Sunday”. . Question 6 . A wildlife preserve is developing an interactive exhibit for its guests. The exhibit is intended to allow guests to select the name of an animal on a touch screen and display various facts about the selected animal. . For example, if a guest selects the animal name “wolf,” the exhibit is intended to display the following information. . Classification: mammal Skin type: fur Thermoregulation: warm-blooded Lifestyle: pack Average life span: 10–12 years Top speed: 75 kilometers/hour . The preserve has two databases of information available to use for the exhibit. The first database contains information for each animal’s name, classification, skin type, and thermoregulation. The second database contains information for each animal’s name, lifestyle, average life span, and top speed. . Which of the following explains how the two databases can be used to develop the interactive exhibit? A: Only the first database is needed. It can be searched by animal name to find all the information to be displayed. . B: Only the second database is needed. It can be searched by animal name to find all the information to be displayed. . C: Both databases are needed. Each database can be searched by animal name to find all information to be displayed. . D: The two databases are not sufficient to display all the necessary information because the intended display information does not include the animal name. . Correct Answer: C. The information to be displayed comes from both databases. The animal name can be used search the first database to find the classification, skin type, and thermoregulation information. The animal name can be used search the second database to find the lifestyle, average life span, and top speed information. .",
            "url": "https://nvarap.github.io/blog/work/2023/03/17/machlearn.html",
            "relUrl": "/work/2023/03/17/machlearn.html",
            "date": " • Mar 17, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "Unit 2.4b Using Programs with Data, SQL",
            "content": "Database Programming is Program with Data . Each Tri 2 Final Project should be an example of a Program with Data. . Prepare to use SQLite in common Imperative Technique . Explore SQLite Connect object to establish database connection- Explore SQLite Cursor Object to fetch data from a table within a database | . Schema of Users table in Sqlite.db . Uses PRAGMA statement to read schema. . Describe Schema, here is resource Resource- What is a database schema? . Database schema are the constraints placed on the data that is going to be inputted in to the sqlite database. What is the purpose of identity Column in SQL database? | . | The purpose of the ID column is to differentiate each user from one another. This is because each individual user is unique in terms of ID, thus they can be differed. What is the purpose of a primary key in SQL database? | . | The purpose of the primary key is similar to the identity column, it is to differ each user from one another, allowing code to affect the intended object. What are the Data Types in SQL table? | . | Some data types in an SQL table are floats, integers, strings, dates, etc. | . import sqlite3 database = &#39;instance/sqlite.db&#39; # this is location of database def schema(): # Connect to the database file conn = sqlite3.connect(database) #connection to db # Create a cursor object to execute SQL queries cursor = conn.cursor() # executes queries # Fetch results of Schema # query to DB results = cursor.execute(&quot;PRAGMA table_info(&#39;users&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # Close the database connection conn.close() # prevents data leaks schema() # run fnction . (0, &#39;id&#39;, &#39;INTEGER&#39;, 1, None, 1) (1, &#39;_name&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (2, &#39;_uid&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (3, &#39;_password&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (4, &#39;_dob&#39;, &#39;DATE&#39;, 0, None, 0) . from PIL import Image print(&quot;Debugging Example&quot;) emaad = Image.open(&#39;images/one.png&#39;) display(emaad) . Debugging Example . Reading Users table in Sqlite.db . Uses SQL SELECT statement to read data . What is a connection object? After you google it, what do you think it does? The connection object is the connection to the database. I think it provides a reference to a database in a different area, allowing the user to manipulate the table | . | Same for cursor object? Cursors are probably a cursor to a sqlite terminal like object, allowing you to execute specific commands to the database, allowing for usage within the table. Both of these need to be closed to not leak data. | . | Look at conn object and cursor object in VSCode debugger. What attributes are in the object? Conn and cursor have function and class variables, each which are initialized when the cursor itself is initialized. Abstraction of stuff | . | Is &quot;results&quot; an object? How do you know? Results is an object, because it appears in the debug menu. | . | . import sqlite3 def read(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Execute a SELECT statement to retrieve data from a table results = cursor.execute(&#39;SELECT * FROM users&#39;).fetchall() # * unpacks everything, returning everything # Print the results if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) # Close the cursor and connection objects cursor.close() conn.close() read() # runs functions . (1, &#39;Thomas Edison&#39;, &#39;toby&#39;, &#39;sha256$WqaDvFFbhYBxbBR4$0886888133baa3c459561686aa8c774ca1196201cb65dd1176a7e4c66091eed6&#39;, &#39;1847-02-11&#39;) (2, &#39;Nikola Tesla&#39;, &#39;niko&#39;, &#39;sha256$hBpDO0JscEBogcxG$13b5ef51dfdcce40e54a210343ddb6c7775084e22d296826de805e47acc74402&#39;, &#39;2023-03-16&#39;) (3, &#39;Alexander Graham Bell&#39;, &#39;lex&#39;, &#39;sha256$O1M6MUCHhKg104gA$ac3e08bf2c877a8a8ea4cb0a66202b2464c0d43d37d0968eae8311dfd3061777&#39;, &#39;2023-03-16&#39;) (4, &#39;Eli Whitney&#39;, &#39;whit&#39;, &#39;sha256$KC4EmhmBlem1mFq6$f70b33498e75187ecd87507e9742ea7850c5ba1b34dbe50d4b2e11ed5cb08941&#39;, &#39;2023-03-16&#39;) (5, &#39;Indiana Jones&#39;, &#39;indi&#39;, &#39;sha256$pKGCVPuolxykqMbj$ad5f7e8e69d64ddea2a99d25820b9b116116cc9dad9b046d34017b0c43c2aeca&#39;, &#39;1920-10-21&#39;) (6, &#39;Marion Ravenwood&#39;, &#39;raven&#39;, &#39;sha256$yjPYWViwfkhMlAYz$4be32ae11c0ede89a425df7c3a2e4252faa520a2030e7ee7ccc00f3476171b0b&#39;, &#39;1921-10-21&#39;) (7, &#39;id&#39;, &#39;usder&#39;, &#39;sha256$vOBA8yrMXp13fQ1P$998dddedc4da0516a8b1ed80aa8bd0d8bd09d7772ecbe4472386acf0ed86be34&#39;, &#39;1776-07-04&#39;) (8, &#39;name&#39;, &#39;no&#39;, &#39;fukcerrr&#39;, &#39;177-6-09-12&#39;) . from PIL import Image print(&quot;Debugging Example&quot;) emaad = Image.open(&#39;images/two.png&#39;) display(emaad) . Debugging Example . Create a new User in table in Sqlite.db . Uses SQL INSERT to add row . Compore create() in both SQL lessons. What is better or worse in the two implementations? the create function from an OOP paradigm must be called on the object, which is good if you are creating objects. However, an imperative paradigm results in you having to create the user every single time and hand input it. Less error prone in imperative, less efficient in create(). Does not censor password | . | Explain purpose of SQL INSERT. Is this the same as User init? This inserts stuff into the table. This creates the user, like init. | . | . import sqlite3 # creates baiyyah def create(): name = input(&quot;Enter your name:&quot;) uid = input(&quot;Enter your user id:&quot;) password = input(&quot;Enter your password&quot;) dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) # gets data # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to insert data into a table cursor.execute(&quot;INSERT INTO users (_name, _uid, _password, _dob) VALUES (?, ?, ?, ?)&quot;, (name, uid, password, dob)) # this is creation of a user # Commit the changes to the database conn.commit() print(f&quot;A new user record {uid} has been created&quot;) except sqlite3.Error as error: # ensures errors do not occur print(&quot;Error while executing the INSERT:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() create() # run function . A new user record place has been created . from PIL import Image print(&quot;Debugging Example&quot;) emaad = Image.open(&#39;images/three.png&#39;) display(emaad) . Debugging Example . Updating a User in table in Sqlite.db . Uses SQL UPDATE to modify password . What does the hacked part do? The hacked portion checks in order to make sure that the password is of ample length, in order to ensure that you would not be hacked | . | Explain try/except, when would except occur? Except would occur when there is an error in the code, specifically if an sqlite error occurs or an error occurs when updating | . | What code seems to be repeated in each of these examples to point, why is it repeated? The closing of the cursor seems to be repeated, ensures that data is not leaking. | . | . import sqlite3 def update(): uid = input(&quot;Enter user id to update&quot;) password = input(&quot;Enter updated password&quot;) if len(password) &lt; 2: # prevents bad passwords message = &quot;hacked&quot; password = &#39;gothackednewpassword123&#39; # sets a new password (unethical? maybe ask first) else: message = &quot;successfully updated&quot; # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to update data in a table cursor.execute(&quot;UPDATE users SET _password = ? WHERE _uid = ?&quot;, (password, uid)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: print(f&quot;The row with user id {uid} the password has been {message}&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the UPDATE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() update() . The row with user id raven the password has been hacked . from PIL import Image print(&quot;Debugging Example&quot;) emaad = Image.open(&#39;images/four.png&#39;) display(emaad) . Debugging Example . Delete a User in table in Sqlite.db . Uses a delete function to remove a user based on a user input of the id. . Is DELETE a dangerous operation? Why? DELETE is a dangerous operation because it results in the permanent removal of data, and unless you can remember it, there&#39;s no way to purposefully remove it. | . | In the print statemements, what is the &quot;f&quot; and what does {uid} do? f is an f string, where you can place variables into a string using {} and have them return their string counterparts. for example:pythoninteger = 3 print(f&quot;hello world, my number is {integer}&quot;) return value: hello world, my number is 3 | . | . import sqlite3 def delete(): uid = input(&quot;Enter user id to delete&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM users WHERE _uid = ?&quot;, (uid,)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: # The uid was found in the table and the row was deleted print(f&quot;The row with uid {uid} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: # checks for errors print(&quot;Error while executing the DELETE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() # literally just deletes delete() . No uid no was not found in the table . from PIL import Image print(&quot;Debugging Example&quot;) emaad = Image.open(&#39;images/five.png&#39;) display(emaad) . Debugging Example . Menu Interface to CRUD operations . CRUD and Schema interactions from one location by running menu. Observe input at the top of VSCode, observe output underneath code cell. . Why does the menu repeat? Repeats as a result of recursion, the function calls itself | . | Could you refactor this menu? Make it work with a List? Yea, we could take multiple inputs, get multiple queries, and return every query at once. We could also check to see if the input is within a list to see if it can be selected | . | . def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) if operation.lower() == &#39;c&#39;: # checks each for input create() elif operation.lower() == &#39;r&#39;: read() elif operation.lower() == &#39;u&#39;: update() elif operation.lower() == &#39;d&#39;: delete() # makes sure to see if everything can be called elif operation.lower() == &#39;s&#39;: schema() elif len(operation)==0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) . def menuList(): valid = [&#39;c&#39;, &#39;r&#39;, &#39;u&#39;, &#39;d&#39;] # lit of valid input inp = input(&quot;Enter a letter&quot;) if inp == &quot;&quot;: # checks input print(&quot;nothing will happen&quot;) elif inp in valid: # checks if in list print(&quot;Input is validated! Do something!&quot;) else: print(&quot;Input invalid, enter valid input&quot;) for i in range(3): menuList() . Input is validated! Do something! Input invalid, enter valid input nothing will happen . # functions def create(): print(&#39;create&#39;) def read(): print(&#39;read&#39;) def update(): print(&#39;update&#39;) def delete(): print(&#39;delete&#39;) def nothing(): print(&quot;nothing to do&quot;) def menuDic(): valid = {&#39;c&#39;:create, &#39;r&#39;:read, &quot;u&quot;:update, &#39;d&#39;:delete, &quot;&quot;:nothing} # map of letter to function inp = input(&quot;Enter a letter!&quot;) # gets input if inp in list(valid.keys()): # checks to see if it is a key in a list valid[inp]() # runs function (calls) from dictionary # can also be used to eliminate escape else: print(&quot;please enter valid input&quot;) for i in range(3): # runs menu three times to test menuDic() . create nothing to do please enter valid input . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In this implementation, do you see procedural abstraction? I saw procedural abstraction through the abstracting of various components, such as the sqlite tables and the cursor to the table. These abstractions also occured in functions which abstracted functions such as creating and reading to the database | . | In 2.4a or 2.4b lecture Do you see data abstraction? Complement this with Debugging example. I see data abstraction in the abstraction of the table and the cursor into objects. I also saw the results abstracted into an object that was later called and we accessed this object to return data. | . | Use Imperative or OOP style to Create a new Table or do something that applies to your CPT project. See previous | . | . | . Reference... sqlite documentation . from PIL import Image print(&quot;Debugging Example&quot;) emaad = Image.open(&#39;images/debugging.png&#39;) display(emaad) . Debugging Example .",
            "url": "https://nvarap.github.io/blog/2023/03/16/AP-unit2-4b.html",
            "relUrl": "/2023/03/16/AP-unit2-4b.html",
            "date": " • Mar 16, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "Unit 2.4a Answers",
            "content": "Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. Use Debugging through these examples to examine Objects created in Code. . College Board talks about ideas like . Program Usage. &quot;iterative and interactive way when processing information&quot; | Managing Data. &quot;classifying data are part of the process in using programs&quot;, &quot;data files in a Table&quot; | Insight &quot;insight and knowledge can be obtained from ... digitally represented information&quot; | Filter systems. &#39;tools for finding information and recognizing patterns&quot; | Application. &quot;the preserve has two databases&quot;, &quot;an employee wants to count the number of book&quot; | . | PBL, Databases, Iterative/OOP . Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved | OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic | SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data | . | . Imports and Flask Objects . Defines and key object creations . Comment on where you have observed these working? Provide a defintion of purpose. Flask app object | SQLAlchemy db object | | . &quot;&quot;&quot; These imports define the key objects &quot;&quot;&quot; from flask import Flask from flask_sqlalchemy import SQLAlchemy &quot;&quot;&quot; These object and definitions are used throughout the Jupyter Notebook. &quot;&quot;&quot; # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///files/sqlite.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() # This belongs in place where it runs once per project db.init_app(app) . Questions . I&#39;ve seen the flask object operate in the AWS backend on my localhost in order to run a flask app and flask code. | The SQLAlchemy class has also been seen with AWS backend, in order to protect the SQLite database and operate with it. | . Model Definition . Define columns, initialization, and CRUD methods for users table in sqlite.db . Comment on these items in the class, purpose and defintion. class User | db.Model inheritance | init method | @property, @&lt;column&gt;.setter | create, read, update, delete methods | . | . &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; import datetime from datetime import datetime import json import uuid from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into a Python shell and follow along &#39;&#39;&#39; class Animal(db.Model): # inherited, we can use what db.Model has # uses the methods and class variable (need to call .super()) __tablename__ = &#39;monke&#39; id = db.Column(db.Integer, primary_key=True) _lbs_food = db.Column(db.Integer) _animal_type = db.Column(db.String(255), unique=False, nullable=False) _uid = db.Column(db.String(255), unique=True, nullable=False) _name = db.Column(db.String(255), unique=False, nullable=False) _dob = db.Column(db.Date) # constructor of a User object # __init__ initializes an attribute and makes a class item def __init__(self, name, animal, uid, food, dob=datetime.today()): self._name = name self._uid = uid self._lbs_food = food self._animal_type = animal if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob ### # getters and setters # Getters get, setters set # @ used for get. @name.set are setters # These are decorator functions, which &quot;decorate&quot; the function when it is called # this is done when it is actively set. ### # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts uid from object @property def uid(self): return self._uid # a setter function, allows uid to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def animal_type(self): return self._animal_type # because of security only show 1st characters # dob property is returned as string, a string represents date outside object @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob setter, verifies date type before it is set or default to today @dob.setter def dob(self, dob): if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # age is calculated field, age is returned according to date of birth @property def age(self): today = datetime.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) # output content using str(object) is in human readable form # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): return { &quot;id&quot;: self.id, &quot;name&quot;: self.name, &quot;uid&quot;: self.uid, &quot;lbs&quot; : self._lbs_food, &quot;animal&quot; : self._animal_type, &quot;dob&quot;: self.dob, &quot;age&quot;: self.age, } # CRUD update: updates user name, password, phone # returns self def update(self, name=&quot;&quot;, uid=&quot;&quot;, lbs=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(name) &gt; 0: self.name = name if len(uid) &gt; 0: self.uid = uid if len(lbs) &gt; 0: self._lbs_food = int(lbs) db.session.commit() return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return ### # db.Session.commit used to commit changes. # Wonder what would happen if that didn&#39;t happen ;) # you can actually directly edit the object # This would be an object oriented paradigm ### . Initial Data . Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? Create All Tables from db Object | User Object Constructors | Try / Except | | . &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initUsers(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; u1 = Animal(name=&#39;Emaad&#39;, uid=&#39;emu&#39;, animal=&quot;emu&quot;, dob=datetime(1847, 2, 11), food=1000) u2 = Animal(name=&#39;Ryan&#39;, uid=&#39;mcwe&#39;, animal=&quot;bison&quot;, food=9000) u3 = Animal(name=&#39;Harsha&#39;, uid=&#39;harsh&#39;, animal=&quot;sloth&quot;, food=1000000) u4 = Animal(name=&#39;Lucas&#39;, uid=&#39;luke&#39;, animal=&quot;sparrow&quot;, food=4) u5 = Animal(name=&#39;Steven&#39;, uid=&#39;stevey&#39;, animal=&quot;Elephant&quot;, dob=datetime(1920, 10, 21), food=330) u6 = Animal(name=&#39;Varalu&#39;, uid=&#39;vlu&#39;, animal=&quot;Goose&quot;, dob=datetime(1921, 10, 21), food=10) # initializes classes and class variables. # password not required, assigned a default value otherwise # in function definition users = [u1, u2, u3, u4, u5, u6] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for user in users: # intializes the stuff try: &#39;&#39;&#39;add user to table&#39;&#39;&#39; object = user.create() print(f&quot;Created new uid {object.uid}&quot;) except: # error raised if object nit created &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; print(f&quot;Records exist uid {user.uid}, or error.&quot;) initUsers() # actually calling function, tf breakpoint called first . Created new uid emu Created new uid mcwe Created new uid harsh Created new uid luke Created new uid stevey Created new uid vlu . Check for given Credentials in users table in sqlite.db . Use of ORM Query object and custom methods to identify user to credentials uid and password . Comment on purpose of following User.query.filter_by | user.password | | . def find_by_uid(uid): with app.app_context(): user = Animal.query.filter_by(_uid=uid).first() # User is table, asks for query which is filtered by UID, and then it gets the first. return user # returns user object # Check credentials by finding user and verify password def check_credentials(uid, password): # query email and return user record user = find_by_uid(uid) if user == None: return False # checks to see if everything works return False #check_credentials(&quot;indi&quot;, &quot;123qwerty&quot;) . Create a new User in table in Sqlite.db . Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following user.find_by_uid() and try/except | user = User(...) | user.dob and try/except | user.create() and try/except | | . def create(): # optimize user time to see if uid exists uid = input(&quot;Enter your user id:&quot;) user = find_by_uid(uid) try: print(&quot;Found n&quot;, user.read()) return except: pass # keep going # request value that ensure creating valid object name = input(&quot;Enter your name:&quot;) nanimal = input(&quot;Enter animal type: &quot;) lbs = input(&quot;Enter pounds of food to eat (per day in pounds): &quot;) # Initialize User object before date user = Animal(name=name, uid=uid, animal=nanimal, food=lbs ) # create user.dob, fail with today as dob dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) try: user.dob = datetime.strptime(dob, &#39;%Y-%m-%d&#39;).date() except ValueError: user.dob = datetime.today() print(f&quot;Invalid date {dob} require YYYY-mm-dd, date defaulted to {user.dob}&quot;) # write object to database with app.app_context(): try: object = user.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error uid {uid}&quot;) create() . Created {&#39;id&#39;: 7, &#39;name&#39;: &#39;Fuck&#39;, &#39;uid&#39;: &#39;No&#39;, &#39;lbs&#39;: 12321428391208, &#39;animal&#39;: &#39;You&#39;, &#39;dob&#39;: &#39;01-01-0101&#39;, &#39;age&#39;: 1922} . Reading users table in sqlite.db . Uses SQLALchemy query.all method to read data . Comment on purpose of following User.query.all | json_ready assignment, google List Comprehension | | . # SQLAlchemy extracts all users from database, turns each user into JSON def read(): with app.app_context(): table = Animal.query.all() json_ready = [user.read() for user in table] # &quot;List Comprehensions&quot;, for each user add user.read() to list return json_ready read() . [{&#39;id&#39;: 1, &#39;name&#39;: &#39;Emaad&#39;, &#39;uid&#39;: &#39;emu&#39;, &#39;lbs&#39;: 1000, &#39;animal&#39;: &#39;emu&#39;, &#39;dob&#39;: &#39;02-11-1847&#39;, &#39;age&#39;: 176}, {&#39;id&#39;: 2, &#39;name&#39;: &#39;Ryan&#39;, &#39;uid&#39;: &#39;mcwe&#39;, &#39;lbs&#39;: 9000, &#39;animal&#39;: &#39;bison&#39;, &#39;dob&#39;: &#39;03-15-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 3, &#39;name&#39;: &#39;Harsha&#39;, &#39;uid&#39;: &#39;harsh&#39;, &#39;lbs&#39;: 1000000, &#39;animal&#39;: &#39;sloth&#39;, &#39;dob&#39;: &#39;03-15-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 4, &#39;name&#39;: &#39;Lucas&#39;, &#39;uid&#39;: &#39;luke&#39;, &#39;lbs&#39;: 4, &#39;animal&#39;: &#39;sparrow&#39;, &#39;dob&#39;: &#39;03-15-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 5, &#39;name&#39;: &#39;Steven&#39;, &#39;uid&#39;: &#39;stevey&#39;, &#39;lbs&#39;: 330, &#39;animal&#39;: &#39;Elephant&#39;, &#39;dob&#39;: &#39;10-21-1920&#39;, &#39;age&#39;: 102}, {&#39;id&#39;: 6, &#39;name&#39;: &#39;Varalu&#39;, &#39;uid&#39;: &#39;vlu&#39;, &#39;lbs&#39;: 10, &#39;animal&#39;: &#39;Goose&#39;, &#39;dob&#39;: &#39;10-21-1921&#39;, &#39;age&#39;: 101}, {&#39;id&#39;: 7, &#39;name&#39;: &#39;Fuck&#39;, &#39;uid&#39;: &#39;No&#39;, &#39;lbs&#39;: 12321428391208, &#39;animal&#39;: &#39;You&#39;, &#39;dob&#39;: &#39;01-01-0101&#39;, &#39;age&#39;: 1922}] . def update(): currid = input(&quot;ID of user to update: &quot;) if currid == &quot;&quot;: print(&quot;not updating!&quot;) return user = find_by_uid(currid) print(&quot;user before: &quot; + str(user)) nUid = input(&quot;New UID? (Leave blank if no change): &quot;) nName = input(&quot;New name? (Leave blank if no change): &quot;) nFood = input(&quot;New food category? (Leave blank if no change): &quot;) with app.app_context(): user.update(nUid, nName, nFood) print(&quot;user after: &quot; + str(user)) update() . not updating! . def delete(): uid = input(&quot;Username of person to delete: &quot;) if uid == &quot;&quot;: print(&quot;Not deleting anyone!&quot;) return user = find_by_uid(uid) with app.app_context(): user.delete() print(&quot;Deleted!&quot;) return None delete() . Deleted! . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Change blog to your own database. | Add additional CRUD Add Update functionality to this blog. | Add Delete functionality to this blog. | . | .",
            "url": "https://nvarap.github.io/blog/2023/03/13/nein.html",
            "relUrl": "/2023/03/13/nein.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Unit 2.4a Using Programs with Data, SQLAlchemy",
            "content": "Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. Use Debugging through these examples to examine Objects created in Code. . College Board talks about ideas like . Program Usage. &quot;iterative and interactive way when processing information&quot; | Managing Data. &quot;classifying data are part of the process in using programs&quot;, &quot;data files in a Table&quot; | Insight &quot;insight and knowledge can be obtained from ... digitally represented information&quot; | Filter systems. &#39;tools for finding information and recognizing patterns&quot; | Application. &quot;the preserve has two databases&quot;, &quot;an employee wants to count the number of book&quot; | . | PBL, Databases, Iterative/OOP . Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved | OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic | SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data | . | . Imports and Flask Objects . Defines and key object creations . Comment on where you have observed these working? Provide a defintion of purpose. Flask app object | SQLAlchemy db object | | . &quot;&quot;&quot; These imports define the key objects &quot;&quot;&quot; from flask import Flask from flask_sqlalchemy import SQLAlchemy &quot;&quot;&quot; These object and definitions are used throughout the Jupyter Notebook. &quot;&quot;&quot; # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///instance/sqlite.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() # This belongs in place where it runs once per project db.init_app(app) . Model Definition . Define columns, initialization, and CRUD methods for users table in sqlite.db . Comment on these items in the class, purpose and defintion. class User | db.Model inheritance | init method | @property, @&lt;column&gt;.setter | create, read, update, delete methods | . | . &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; import datetime from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into a Python shell and follow along &#39;&#39;&#39; # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class User(db.Model): __tablename__ = &#39;users&#39; # table name is plural, class name is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _name = db.Column(db.String(255), unique=False, nullable=False) _uid = db.Column(db.String(255), unique=True, nullable=False) _password = db.Column(db.String(255), unique=False, nullable=False) _dob = db.Column(db.Date) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password=&quot;123qwerty&quot;, dob=datetime.today()): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts uid from object @property def uid(self): return self._uid # a setter function, allows uid to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional method used for setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter against stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # dob property is returned as string, a string represents date outside object @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob setter, verifies date type before it is set or default to today @dob.setter def dob(self, dob): if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # age is calculated field, age is returned according to date of birth @property def age(self): today = datetime.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) # output content using str(object) is in human readable form # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): return { &quot;id&quot;: self.id, &quot;name&quot;: self.name, &quot;uid&quot;: self.uid, &quot;dob&quot;: self.dob, &quot;age&quot;: self.age, } # CRUD update: updates user name, password, phone # returns self def update(self, name=&quot;&quot;, uid=&quot;&quot;, password=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(name) &gt; 0: self.name = name if len(uid) &gt; 0: self.uid = uid if len(password) &gt; 0: self.set_password(password) db.session.commit() return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return None . Initial Data . Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? Create All Tables from db Object | User Object Constructors | Try / Except | | . &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initUsers(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=datetime(1847, 2, 11)) u2 = User(name=&#39;Nikola Tesla&#39;, uid=&#39;niko&#39;, password=&#39;123niko&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;whit&#39;, password=&#39;123whit&#39;) u5 = User(name=&#39;Indiana Jones&#39;, uid=&#39;indi&#39;, dob=datetime(1920, 10, 21)) u6 = User(name=&#39;Marion Ravenwood&#39;, uid=&#39;raven&#39;, dob=datetime(1921, 10, 21)) users = [u1, u2, u3, u4, u5, u6] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for user in users: try: &#39;&#39;&#39;add user to table&#39;&#39;&#39; object = user.create() print(f&quot;Created new uid {object.uid}&quot;) except: # error raised if object nit created &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; print(f&quot;Records exist uid {user.uid}, or error.&quot;) initUsers() . Created new uid toby Created new uid niko Created new uid lex Created new uid whit Created new uid indi Created new uid raven . Check for given Credentials in users table in sqlite.db . Use of ORM Query object and custom methods to identify user to credentials uid and password . Comment on purpose of following User.query.filter_by | user.password | | . def find_by_uid(uid): with app.app_context(): user = User.query.filter_by(_uid=uid).first() return user # returns user object # Check credentials by finding user and verify password def check_credentials(uid, password): # query email and return user record user = find_by_uid(uid) if user == None: return False if (user.is_password(password)): return True return False #check_credentials(&quot;indi&quot;, &quot;123qwerty&quot;) . Create a new User in table in Sqlite.db . Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following user.find_by_uid() and try/except | user = User(...) | user.dob and try/except | user.create() and try/except | | . def create(): # optimize user time to see if uid exists uid = input(&quot;Enter your user id:&quot;) user = find_by_uid(uid) try: print(&quot;Found n&quot;, user.read()) return except: pass # keep going # request value that ensure creating valid object name = input(&quot;Enter your name:&quot;) password = input(&quot;Enter your password&quot;) # Initialize User object before date user = User(name=name, uid=uid, password=password ) # create user.dob, fail with today as dob dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) try: user.dob = datetime.strptime(dob, &#39;%Y-%m-%d&#39;).date() except ValueError: user.dob = datetime.today() print(f&quot;Invalid date {dob} require YYYY-mm-dd, date defaulted to {user.dob}&quot;) # write object to database with app.app_context(): try: object = user.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error uid {uid}&quot;) create() . Created {&#39;id&#39;: 7, &#39;name&#39;: &#39;id&#39;, &#39;uid&#39;: &#39;usder&#39;, &#39;dob&#39;: &#39;07-04-1776&#39;, &#39;age&#39;: 246} . Reading users table in sqlite.db . Uses SQLALchemy query.all method to read data . Comment on purpose of following User.query.all | json_ready assignment, google List Comprehension | | . # SQLAlchemy extracts all users from database, turns each user into JSON def read(): with app.app_context(): table = User.query.all() json_ready = [user.read() for user in table] # &quot;List Comprehensions&quot;, for each user add user.read() to list return json_ready read() . [{&#39;id&#39;: 1, &#39;name&#39;: &#39;Thomas Edison&#39;, &#39;uid&#39;: &#39;toby&#39;, &#39;dob&#39;: &#39;02-11-1847&#39;, &#39;age&#39;: 176}, {&#39;id&#39;: 2, &#39;name&#39;: &#39;Nikola Tesla&#39;, &#39;uid&#39;: &#39;niko&#39;, &#39;dob&#39;: &#39;03-16-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 3, &#39;name&#39;: &#39;Alexander Graham Bell&#39;, &#39;uid&#39;: &#39;lex&#39;, &#39;dob&#39;: &#39;03-16-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 4, &#39;name&#39;: &#39;Eli Whitney&#39;, &#39;uid&#39;: &#39;whit&#39;, &#39;dob&#39;: &#39;03-16-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 5, &#39;name&#39;: &#39;Indiana Jones&#39;, &#39;uid&#39;: &#39;indi&#39;, &#39;dob&#39;: &#39;10-21-1920&#39;, &#39;age&#39;: 102}, {&#39;id&#39;: 6, &#39;name&#39;: &#39;Marion Ravenwood&#39;, &#39;uid&#39;: &#39;raven&#39;, &#39;dob&#39;: &#39;10-21-1921&#39;, &#39;age&#39;: 101}, {&#39;id&#39;: 7, &#39;name&#39;: &#39;id&#39;, &#39;uid&#39;: &#39;usder&#39;, &#39;dob&#39;: &#39;07-04-1776&#39;, &#39;age&#39;: 246}] . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Change blog to your own database. | Add additional CRUD Add Update functionality to this blog. | Add Delete functionality to this blog. | . | .",
            "url": "https://nvarap.github.io/blog/2023/03/13/AP-unit2-4a.html",
            "relUrl": "/2023/03/13/AP-unit2-4a.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Unit 2.3 Extracting Information from Data, Pandas",
            "content": "Files To Get . Save this file to your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/2023-03-06-AP-unit2_3.ipynb . Save these files into a subfolder named files in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/data.csv . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/grade.json . Save this image into a subfolder named images in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/images/table_dataframe.png . Pandas and DataFrames . In this lesson we will be exploring data analysis using Pandas. . College Board talks about ideas like Tools. &quot;the ability to process data depends on users capabilities and their tools&quot; | Combining Data. &quot;combine county data sets&quot; | Status on Data&quot;determining the artist with the greatest attendance during a particular month&quot; | Data poses challenge. &quot;the need to clean data&quot;, &quot;incomplete data&quot; | . | . From Pandas Overview -- When working with tabular data, such as data stored in spreadsheets or databases, pandas is the right tool for you. pandas will help you to explore, clean, and process your data. In pandas, a data table is called a DataFrame. | . . &#39;&#39;&#39;Pandas is used to gather data sets through its DataFrames implementation&#39;&#39;&#39; import pandas as pd . Cleaning Data . When looking at a data set, check to see what data needs to be cleaned. Examples include: . Missing Data Points | Invalid Data | Inaccurate Data | . Run the following code to see what needs to be cleaned . df = pd.read_json(&#39;files/grade.json&#39;) print(df) # What part of the data set needs to be cleaned? # From PBL learning, what is a good time to clean data? Hint, remember Garbage in, Garbage out? . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 2 578 12 2.78 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 6 145 12 2.95 7 167 10 3.90 8 235 9th Grade 3.15 9 nil 9 2.80 10 469 11 3.45 11 456 10 2.75 . Extracting Info . Take a look at some features that the Pandas library has that extracts info from the dataset . DataFrame Extract Column . print(df[[&#39;GPA&#39;]]) print() #try two columns and remove the index from print statement print(df[[&#39;Student ID&#39;,&#39;GPA&#39;]].to_string(index=False)) . GPA 0 3.57 1 4.00 2 2.78 3 3.45 4 4.75 5 3.33 6 2.95 7 3.90 8 3.15 9 2.80 10 3.45 11 2.75 Student ID GPA 123 3.57 246 4.00 578 2.78 469 3.45 324 4.75 313 3.33 145 2.95 167 3.90 235 3.15 nil 2.80 469 3.45 456 2.75 . DataFrame Sort . print(df.sort_values(by=[&#39;GPA&#39;])) print() #sort the values in reverse order print(df.sort_values(by=[&#39;GPA&#39;], ascending=False)) . Student ID Year in School GPA 11 456 10 2.75 2 578 12 2.78 9 nil 9 2.80 6 145 12 2.95 8 235 9th Grade 3.15 5 313 20 3.33 3 469 11 3.45 10 469 11 3.45 0 123 12 3.57 7 167 10 3.90 1 246 10 4.00 4 324 Junior 4.75 Student ID Year in School GPA 4 324 Junior 4.75 1 246 10 4.00 7 167 10 3.90 0 123 12 3.57 3 469 11 3.45 10 469 11 3.45 5 313 20 3.33 8 235 9th Grade 3.15 6 145 12 2.95 9 nil 9 2.80 2 578 12 2.78 11 456 10 2.75 . DataFrame Selection or Filter . print(df[df.GPA &gt; 3.00]) . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 7 167 10 3.90 8 235 9th Grade 3.15 10 469 11 3.45 . DataFrame Selection Max and Min . print(df[df.GPA == df.GPA.max()]) print() print(df[df.GPA == df.GPA.min()]) . Student ID Year in School GPA 4 324 Junior 4.75 Student ID Year in School GPA 11 456 10 2.75 . Create your own DataFrame . Using Pandas allows you to create your own DataFrame in Python. . Python Dictionary to Pandas DataFrame . import pandas as pd #the data can be stored as a python dictionary dict = { &quot;calories&quot;: [420, 380, 390], &quot;duration&quot;: [50, 40, 45] } #stores the data in a data frame print(&quot;-Dict_to_DF&quot;) df = pd.DataFrame(dict) print(df) print(&quot;-Dict_to_DF_labels--&quot;) #or with the index argument, you can label rows. df = pd.DataFrame(dict, index = [&quot;day1&quot;, &quot;day2&quot;, &quot;day3&quot;]) print(df) . -Dict_to_DF calories duration 0 420 50 1 380 40 2 390 45 -Dict_to_DF_labels-- calories duration day1 420 50 day2 380 40 day3 390 45 . Examine DataFrame Rows . print(&quot;-Examine Selected Rows&quot;) #use a list for multiple labels: print(df.loc[[&quot;day1&quot;, &quot;day3&quot;]]) #refer to the row index: print(&quot;--Examine Single Row--&quot;) print(df.loc[&quot;day1&quot;]) . -Examine Selected Rows calories duration day1 420 50 day3 390 45 --Examine Single Row-- calories 420 duration 50 Name: day1, dtype: int64 . Pandas DataFrame Information . print(df.info()) . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; Index: 3 entries, day1 to day3 Data columns (total 2 columns): # Column Non-Null Count Dtype -- -- 0 calories 3 non-null int64 1 duration 3 non-null int64 dtypes: int64(2) memory usage: 180.0+ bytes None . Example of larger data set . Pandas can read CSV and many other types of files, run the following code to see more features with a larger data set . import pandas as pd #read csv and sort &#39;Duration&#39; largest to smallest df = pd.read_csv(&#39;files/data.csv&#39;).sort_values(by=[&#39;Duration&#39;], ascending=False) print(&quot;--Duration Top 10&quot;) print(df.head(10)) print(&quot;--Duration Bottom 10&quot;) print(df.tail(10)) . --Duration Top 10 Duration Pulse Maxpulse Calories 69 300 108 143 1500.2 79 270 100 131 1729.0 109 210 137 184 1860.4 60 210 108 160 1376.0 106 180 90 120 800.3 90 180 101 127 600.1 65 180 90 130 800.4 61 160 110 137 1034.4 62 160 109 135 853.0 67 150 107 130 816.0 --Duration Bottom 10 Duration Pulse Maxpulse Calories 68 20 106 136 110.4 100 20 95 112 77.7 89 20 83 107 50.3 135 20 136 156 189.0 94 20 150 171 127.4 95 20 151 168 229.4 139 20 141 162 222.4 64 20 110 130 131.4 112 15 124 139 124.2 93 15 80 100 50.5 . APIs are a Source for Writing Programs with Data . 3rd Party APIs are a great source for creating Pandas Data Frames. . Data can be fetched and resulting json can be placed into a Data Frame | Observe output, this looks very similar to a Database | . &#39;&#39;&#39;Pandas can be used to analyze data&#39;&#39;&#39; import pandas as pd import requests def fetch(): &#39;&#39;&#39;Obtain data from an endpoint&#39;&#39;&#39; url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot; fetch = requests.get(url) json = fetch.json() # filter data for requirement df = pd.DataFrame(json[&#39;countries_stat&#39;]) # filter endpoint for country stats print(df.loc[0:5, &#39;country_name&#39;:&#39;deaths&#39;]) # show row 0 through 5 and columns country_name through deaths fetch() . country_name cases deaths 0 USA 82,649,779 1,018,316 1 India 43,057,545 522,193 2 Brazil 30,345,654 662,663 3 France 28,244,977 145,020 4 Germany 24,109,433 134,624 5 UK 21,933,206 173,352 . Hacks . AP Prep . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In blog add College Board practice problems for 2.3. | . The next 4 weeks, Teachers want you to improve your understanding of data. Look at the blog and others on Unit 2. Your intention is to find some things to differentiate your individual College Board project. . Create or Find your own dataset. The suggestion is to use a JSON file, integrating with your PBL project would be Fambulous. | . When choosing a data set, think about the following:- Does it have a good sample size? - Is there bias in the data? - Does the data set need to be cleaned? - What is the purpose of the data set? - ... . Continue this Blog using Pandas extract info from that dataset (ex. max, min, mean, median, mode, etc.) | . Hack Helpers . Here is how Mort started on this assignment by asking ChatGPT ... Regarding Python Pandas, what are some data sets that would be good for learning Pandas? . There are many data sets that are suitable for learning pandas, depending on your interests and the skills you want to develop. Here are some suggestions:- Titanic Dataset: This is a classic dataset for data analysis and machine learning, and is often used as an introduction to pandas. The dataset contains information about passengers on the Titanic, including their demographics, ticket class, and survival status. . Iris Dataset: This is another classic dataset that is often used in machine learning and data analysis courses. The dataset contains information about iris flowers, including their sepal length, sepal width, petal length, and petal width. . | NBA Player Stats: This dataset contains information about NBA players, including their stats for various games, their positions, and their salaries. It is a great dataset for learning how to clean and manipulate data using pandas. . | Housing Prices Dataset: This dataset contains information about housing prices in a particular city or region, including variables such as the number of bedrooms, square footage, and price. It is a great dataset for learning how to manipulate and analyze numerical data using pandas. . | COVID-19 Dataset: This dataset contains information about the COVID-19 pandemic, including the number of cases, deaths, and recoveries in various countries and regions. It is a great dataset for learning how to manipulate and analyze time-series data using pandas. . | World Bank Dataset: This dataset contains information about economic indicators from various countries, such as GDP, population, and poverty rates. It is a great dataset for learning how to manipulate and analyze large datasets using pandas. . | . | These are just a few examples of the many datasets that are suitable for learning pandas. The best dataset for you will depend on your interests and the specific skills you want to develop. . Follow up question, &quot;where can I find Titanic data set?&quot; . | The Titanic dataset is a popular dataset for data analysis and machine learning, and it can be found on various websites and data repositories. Here are a few places where you can find the Titanic dataset:- Kaggle: The Titanic dataset is available on Kaggle, which is a popular platform for data scientists and machine learning enthusiasts. You can download the dataset from the Kaggle website after creating an account. . UCI Machine Learning Repository: The Titanic dataset is also available on the UCI Machine Learning Repository, which is a collection of datasets that are commonly used for machine learning research. You can download the dataset from the UCI Machine Learning Repository website. . | Seaborn library: If you have the Seaborn library installed in your Python environment, you can load the Titanic dataset directly from the library using the following code: . import seaborn as sns titanic_data = sns.load_dataset(&#39;titanic&#39;) . | . | . Titanic Data . Look at a sample of data. . import seaborn as sns # Load the titanic dataset titanic_data = sns.load_dataset(&#39;titanic&#39;) print(&quot;Titanic Data&quot;) print(titanic_data.columns) # titanic data set print(titanic_data[[&#39;survived&#39;,&#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;class&#39;, &#39;fare&#39;, &#39;embark_town&#39;]]) # look at selected columns . Titanic Data Index([&#39;survived&#39;, &#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;fare&#39;, &#39;embarked&#39;, &#39;class&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;deck&#39;, &#39;embark_town&#39;, &#39;alive&#39;, &#39;alone&#39;], dtype=&#39;object&#39;) survived pclass sex age sibsp parch class fare 0 0 3 male 22.0 1 0 Third 7.2500 1 1 1 female 38.0 1 0 First 71.2833 2 1 3 female 26.0 0 0 Third 7.9250 3 1 1 female 35.0 1 0 First 53.1000 4 0 3 male 35.0 0 0 Third 8.0500 .. ... ... ... ... ... ... ... ... 886 0 2 male 27.0 0 0 Second 13.0000 887 1 1 female 19.0 0 0 First 30.0000 888 0 3 female NaN 1 2 Third 23.4500 889 1 1 male 26.0 0 0 First 30.0000 890 0 3 male 32.0 0 0 Third 7.7500 embark_town 0 Southampton 1 Cherbourg 2 Southampton 3 Southampton 4 Southampton .. ... 886 Southampton 887 Southampton 888 Southampton 889 Cherbourg 890 Queenstown [891 rows x 9 columns] . Use Pandas to clean the data. Most analysis, like Machine Learning or even Pandas in general like data to be in standardized format. This is called &#39;Training&#39; or &#39;Cleaning&#39; data. . # Preprocess the data from sklearn.preprocessing import OneHotEncoder td = titanic_data td.drop([&#39;alive&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;class&#39;, &#39;embark_town&#39;, &#39;deck&#39;], axis=1, inplace=True) td.dropna(inplace=True) td[&#39;sex&#39;] = td[&#39;sex&#39;].apply(lambda x: 1 if x == &#39;male&#39; else 0) td[&#39;alone&#39;] = td[&#39;alone&#39;].apply(lambda x: 1 if x == True else 0) # Encode categorical variables enc = OneHotEncoder(handle_unknown=&#39;ignore&#39;) enc.fit(td[[&#39;embarked&#39;]]) onehot = enc.transform(td[[&#39;embarked&#39;]]).toarray() cols = [&#39;embarked_&#39; + val for val in enc.categories_[0]] td[cols] = pd.DataFrame(onehot) td.drop([&#39;embarked&#39;], axis=1, inplace=True) td.dropna(inplace=True) print(td) . survived pclass sex age sibsp parch fare alone embarked_C 0 0 3 1 22.0 1 0 7.2500 0 0.0 1 1 1 0 38.0 1 0 71.2833 0 1.0 2 1 3 0 26.0 0 0 7.9250 1 0.0 3 1 1 0 35.0 1 0 53.1000 0 0.0 4 0 3 1 35.0 0 0 8.0500 1 0.0 .. ... ... ... ... ... ... ... ... ... 705 0 2 1 39.0 0 0 26.0000 1 0.0 706 1 2 0 45.0 0 0 13.5000 1 0.0 707 1 1 1 42.0 0 0 26.2875 1 0.0 708 1 1 0 22.0 0 0 151.5500 1 0.0 710 1 1 0 24.0 0 0 49.5042 1 1.0 embarked_Q embarked_S 0 0.0 1.0 1 0.0 0.0 2 0.0 1.0 3 0.0 1.0 4 0.0 1.0 .. ... ... 705 0.0 1.0 706 0.0 1.0 707 1.0 0.0 708 0.0 1.0 710 0.0 0.0 [564 rows x 11 columns] . The result of &#39;Training&#39; data is making it easier to analyze or make conclusions. In looking at the Titanic, as you clean you would probably want to make assumptions on likely chance of survival. . This would involve analyzing various factors (such as age, gender, class, etc.) that may have affected a person&#39;s chances of survival, and using that information to make predictions about whether an individual would have survived or not. . Data description:- Survival - Survival (0 = No; 1 = Yes). Not included in test.csv file. - Pclass - Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd) . Name - Name | Sex - Sex | Age - Age | Sibsp - Number of Siblings/Spouses Aboard | Parch - Number of Parents/Children Aboard | Ticket - Ticket Number | Fare - Passenger Fare | Cabin - Cabin | Embarked - Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton) | . | Perished Mean/Average . | . print(titanic_data.query(&quot;survived == 0&quot;).mean()) . survived 0.000000 pclass 2.464072 sex 0.844311 age 31.073353 sibsp 0.562874 parch 0.398204 fare 24.835902 alone 0.616766 embarked_C 0.185629 embarked_Q 0.038922 embarked_S 0.775449 dtype: float64 . Survived Mean/Average | . print(td.query(&quot;survived == 1&quot;).mean()) . survived 1.000000 pclass 1.878261 sex 0.326087 age 28.481522 sibsp 0.504348 parch 0.508696 fare 50.188806 alone 0.456522 embarked_C 0.152174 embarked_Q 0.034783 embarked_S 0.813043 dtype: float64 . Survived Max and Min Stats . print(td.query(&quot;survived == 1&quot;).max()) print(td.query(&quot;survived == 1&quot;).min()) . survived 1.0000 pclass 3.0000 sex 1.0000 age 80.0000 sibsp 4.0000 parch 5.0000 fare 512.3292 alone 1.0000 embarked_C 1.0000 embarked_Q 1.0000 embarked_S 1.0000 dtype: float64 survived 1.00 pclass 1.00 sex 0.00 age 0.75 sibsp 0.00 parch 0.00 fare 0.00 alone 0.00 embarked_C 0.00 embarked_Q 0.00 embarked_S 0.00 dtype: float64 . Machine Learning . From Tutorials Point%20is,a%20consistence%20interface%20in%20Python). Scikit-learn (Sklearn) is the most useful and robust library for machine learning in Python. It provides a selection of efficient tools for machine learning and statistical modeling including classification, regression, clustering and dimensionality reduction via a consistence interface in Python.&gt; Description from ChatGPT. The Titanic dataset is a popular dataset for data analysis and machine learning. In the context of machine learning, accuracy refers to the percentage of correctly classified instances in a set of predictions. In this case, the testing data is a subset of the original Titanic dataset that the decision tree model has not seen during training......After training the decision tree model on the training data, we can evaluate its performance on the testing data by making predictions on the testing data and comparing them to the actual outcomes. The accuracy of the decision tree classifier on the testing data tells us how well the model generalizes to new data that it hasn&#39;t seen before......For example, if the accuracy of the decision tree classifier on the testing data is 0.8 (or 80%), this means that 80% of the predictions made by the model on the testing data were correct....Chance of survival could be done using various machine learning techniques, including decision trees, logistic regression, or support vector machines, among others. . Code Below prepares data for further analysis and provides an Accuracy. IMO, you would insert a new passenger and predict survival. Datasets could be used on various factors like prediction if a player will hit a Home Run, or a Stock will go up or down. Decision Trees, prediction by a piecewise constant approximation. - Logistic Regression, the probabilities describing the possible outcomes. | . | . from sklearn.model_selection import train_test_split from sklearn.tree import DecisionTreeClassifier from sklearn.linear_model import LogisticRegression from sklearn.metrics import accuracy_score # Split arrays or matrices into random train and test subsets. X = td.drop(&#39;survived&#39;, axis=1) y = td[&#39;survived&#39;] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42) # Train a decision tree classifier dt = DecisionTreeClassifier() dt.fit(X_train, y_train) # Test the model y_pred = dt.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;DecisionTreeClassifier Accuracy:&#39;, accuracy) # Train a logistic regression model logreg = LogisticRegression() logreg.fit(X_train, y_train) # Test the model y_pred = logreg.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;LogisticRegression Accuracy:&#39;, accuracy) . DecisionTreeClassifier Accuracy: 0.7411764705882353 LogisticRegression Accuracy: 0.788235294117647 . /Users/vn1/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1): STOP: TOTAL NO. of ITERATIONS REACHED LIMIT. Increase the number of iterations (max_iter) or scale the data as shown in: https://scikit-learn.org/stable/modules/preprocessing.html Please also refer to the documentation for alternative solver options: https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression n_iter_i = _check_optimize_result( .",
            "url": "https://nvarap.github.io/blog/2023/03/09/AP-unit2-3.html",
            "relUrl": "/2023/03/09/AP-unit2-3.html",
            "date": " • Mar 9, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Unit 2.2 Blog Point Answers",
            "content": "Mid-Section Questions . pathlib . What are commands you use in terminal to access files? to access files, we use ls, cd, code (to open files in vscode) and text editors such as vi and nano | . | What are the command you use in Windows terminal to access files? cd, dir, rd, ( to remove files as opposed to rm) are some commands used to access files | . | What are some of the major differences? the names are different, and so are the storage methods (directories as opposed to simply paths) | . | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? Images can be very big or very small, not standardized to what you want, you also need to access them | . | How does the meta data source and label relate to Unit 5 topics? Metadata data allows you to track images an find the source | . | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? IPython allows for the easy manipulation and accessing of images. | . | . base64 . How is Base64 similar or different to Binary and Hexadecimal? | Translate first 3 letters of your name to Base64. | . io, BytesIO . Where have you been a consumer of buffering? Often on youtube videos, it buffers if the video is long or the internet is bad | . | From your consumer experience, what effects have you experienced from buffering? Slower internet, worse overall quality of product | . | How do these effects apply to images? Large images may cause buffering with the client&#39;s computer | . | . Data Structures, Imperative Programming Style, and working with Images . Does this code seem like a series of steps are being performed? Yes, this code seems to be iterating over a set of steps, in sequence, and then intreating and selecting, and manipulating the data in a specific pattern | . | Describe Grey Scale algorithm in English or Pseudo code? Grey scale algorithms get each pixel, and set the pixel where both RG and B are the average value. For example, if the RGB value was (10, 20, 30), each pixel would be 60/3 = 20. (make sure this is an integer) | . | Describe scale image? What is before and after on pixels in three images? Scale image scales the image down, but uses a constant base to ensure the scale factor does not mess up the image quality. There are less pixels when scaled down, more when scaled up. | . | Is scale image a type of compression? If so, line it up with College Board terms described? Scaling would be a form of compression, because you are lowering the amount of pixels, thus lowering the space the images take up. Thus, it would be easier to display the image. This does line up with the college board terms described so far. | . | . 2.3 Data Compression Quiz . (1) Which of the following is an advantage of a lossless compression algorithm over a lossy compression algorithm? . Possible Answers: . (A) A lossless compression algorithm can guarantee that compressed information is kept secure, while a lossy compression algorithm cannot. . (B) A lossless compression algorithm can guarantee reconstruction of original data, while a lossy compression algorithm cannot. . (C) A lossless compression algorithm typically allows for faster transmission speeds than does a lossy compression algorithm. . (D) A lossless compression algorithm typically provides a greater reduction in the number of bits stored or transmitted than does a lossy compression algorithm. . Correct answer: B . (2) A user wants to save a data file on an online storage site. The user wants to reduce the size of the file, if possible, and wants to be able to completely restore the file to its original version. Which of the following actions best supports the user’s needs? . Possible Answers: . (A) Compressing the file using a lossless compression algorithm before uploading it . (B) Compressing the file using a lossy compression algorithm before uploading it . (C) Compressing the file using both lossy and lossless compression algorithms before uploading it . (D) Uploading the original file without using any compression algorithm . Correct answer: A . (3) A programmer is developing software for a social media platform. The programmer is planning to use compression when users send attachments to other users. Which of the following is a true statement about the use of compression? . Possible Answers: . (A) Lossless compression of video files will generally save more space than lossy compression of video files. . (B) Lossless compression of an image file will generally result in a file that is equal in size to the original file. . (C) Lossy compression of an image file generally provides a greater reduction in transmission time than lossless compression does. . (D) Sound clips compressed with lossy compression for storage on the platform can be restored to their original quality when they are played. . Correct answer: C . Reflection I got a 3/3 on my college board Data Compression quiz. I felt very confident both going into it and of my score being 100%. I felt that I understood lossy and lossless compression very well, and tht my understanding was displayed here. I believe that these questions and topics are very applicable to every day life. Coding is a skill that can be used in everyday activities, and thus image compression as well. Learning about these topics interested me greatly, and I found the research exhilarating and implementation fulfilling. I enjoyed greatly this college board quiz. Especially because I got a good score. I also enjoyed helping others with their issues during the quiz. I did not give anybody answers; in fact helping them was just asking them to read the problem again. Often doing this would allow the person themselves to come up with the solution on their own. Thus, I enjoyed this unit and understanding of image compression. Also to note, Python, my favorite language, is used extensively, and I have used pillow, tesseract, and kraken before, thus I was also locked in when it came to this unit. . from PIL import Image print(&quot;SCORE!&quot;) emaad = Image.open(&#39;images/DATACOMPRESSION.png&#39;) display(emaad) . SCORE! . Extra: Red/Blue/Green Scale using numpy . METHOD . By researching that greyscaling an image and then maximizing the red value I can redscale an image, I decided to implement this. | One thing (and issue I have with this class) is that the images mutate the main image. I understand why this could be necessary, but having a store of the image in greyscale and returning that rather than mutating the image would help. | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() self.html_red = self.redScale() self.html_blue = self.blueScale() self.html_green = self.greenScale() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img.copy() numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) def redScale(self): # added redscale img_grey = self._img.copy() numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ redPix = int(pixel[0]*2)# average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((redPix, pixel[1], pixel[2], pixel[3])) # PNG format else: grey_data.append((redPix, pixel[1], pixel[2])) img_grey.putdata(grey_data) return self.image_to_html(img_grey) def blueScale(self): # added bluescale img_grey = self._img.copy() numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ bluePix = int(pixel[1]*2)# average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((pixel[0], pixel[1], bluePix, pixel[3])) # PNG format else: grey_data.append((pixel[0], pixel[1], bluePix)) img_grey.putdata(grey_data) return self.image_to_html(img_grey) def greenScale(self): # added greenscale img_grey = self._img.copy() numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ greenPix = int(pixel[2]*2)# average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((pixel[0], greenPix, pixel[2], pixel[3])) # PNG format else: grey_data.append((pixel[0], greenPix, pixel[2])) img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}, {&#39;source&#39;: &quot;Mychild&quot;, &#39;label&#39;: &quot;My Child&quot;, &#39;file&#39;: &quot;mychild.png&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print(&quot; red image &quot;) display(HTML(ido.html_red)) print(&quot; green image &quot;) display(HTML(ido.html_green)) print(&quot; blue image &quot;) display(HTML(ido.html_blue)) print() . - meta data -- Clouds Impression Peter Carolin clouds-impression.png PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- scaled image -- . grey image . red image . green image . blue image . - meta data -- Lassen Volcano Peter Carolin lassen-volcano.jpg JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- scaled image -- . grey image . red image . green image . blue image . - meta data -- My Child Mychild mychild.png PNG RGBA Original size: (998, 716) Scaled size: (320, 229) -- scaled image -- . grey image . red image . green image . blue image . .",
            "url": "https://nvarap.github.io/blog/2023/03/07/DS1Hacks.html",
            "relUrl": "/2023/03/07/DS1Hacks.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "Unit 2.2 Data Compression, Images (Mr.Mortensen Copy for Extra Seed)",
            "content": "Vocab and Key Terms . Lossy compression: Compression that loses some data | Lossless compression: compression that does not lose data; preserves all of it. | . Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. - Clouds Impression . Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab | Size, height and width, number of pixels | Visual perception, lossy compression | . Python Libraries and Concepts used for Jupyter and Files/Directories . Introduction to displaying images in Jupyter notebook . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? | What are the command you use in Windows terminal to access files? | What are some of the major differences? | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? | How does the meta data source and label relate to Unit 5 topics? | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}, {&#39;source&#39;: &quot;Amongus&quot;, &#39;label&#39;: &quot;This world&quot;, &#39;file&#39;: &quot;sadge.jpeg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS.- How is Base64 similar or different to Binary and Hexadecimal? . Translate first 3 letters of your name to Base64. | . numpy . Numpy is described as &quot;The fundamental package for scientific computing with Python&quot;. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering? | From your consumer experience, what effects have you experienced from buffering? | How do these effects apply to images? | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? | Describe Grey Scale algorithm in English or Pseudo code? | Describe scale image? What is before and after on pixels in three images? | Is scale image a type of compression? If so, line it up with College Board terms described? | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}, {&#39;source&#39;: &quot;Amongus&quot;, &#39;label&#39;: &quot;This world&quot;, &#39;file&#39;: &quot;sadge.jpeg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale count = 0 # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: count += 1 image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print() . - meta data -- Green Square Internet PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- original image -- . grey image - 102400 . - meta data -- Clouds Impression Peter Carolin PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- original image -- . grey image - 74880 . - meta data -- Lassen Volcano Peter Carolin JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- original image -- . grey image - 0 . - meta data -- This world Amongus JPEG RGB Original size: (225, 225) Scaled size: (320, 320) -- original image -- . grey image - 0 . . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL | numpy | base64 | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}, {&#39;source&#39;: &quot;Amongus&quot;, &#39;label&#39;: &quot;This world&quot;, &#39;file&#39;: &quot;sadge.jpeg&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . - meta data -- Green Square Internet green-square-16.png PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- scaled image -- . grey image . - meta data -- Clouds Impression Peter Carolin clouds-impression.png PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- scaled image -- . grey image . - meta data -- Lassen Volcano Peter Carolin lassen-volcano.jpg JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- scaled image -- . grey image . - meta data -- This world Amongus sadge.jpeg JPEG RGB Original size: (225, 225) Scaled size: (320, 320) -- scaled image -- . grey image . . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | . from PIL import Image im2 = Image.open(&#39;../images/sadge.jpeg&#39;) display(im2) .",
            "url": "https://nvarap.github.io/blog/2023/03/07/AP-unit2-2.html",
            "relUrl": "/2023/03/07/AP-unit2-2.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "Tri Two Final!",
            "content": "Reflection . I got a 45/50 on the tri 2 final, a perfect 90%. This means I got 0.9 on the final . Question 21 . My Answer: A Correct Answer: C Explanation: I got this wrong because I wasn’t aware of how an error would form. It looked to run correctly, but looking at it right now I do see the error. I also should have noted that we probably need more cases to truly test if the code would work. . Question 28 . . My Answer: D Correct Answer: A&amp;C Explanation: I got this wrong because I didn’t understand what was occurring very well. I didn’t understand how substring worked, and probably should have looked that up to understand how it worked. I also did not note that the second variable was necessary, believing it was. . Question 40 . . My Answer: A Correct Answer: B Explanation: Mainly because I did not understand the directions that it would turn. I neglected the fast that the course is a completely mirrored. Thus no change is necessary. . Question 41 . . My Answer: A Correct Answer: B Explanation: Honestly this was me being very dumb, I was thinking at first that it had to be sorted, but thought that a computer-based algorithm may not know how to work on binary (neglecting that’s basically how all computers run). this was a real screw up on my part . Question 50 . . My Answer: D Correct Answer: A&amp;C Explanation: I got this one wrong because I flat out forgot what reasonable timings for algorithms were, and neglected to check online to see if I was correct. Regardless, I now know why I was wrong, as I see which algorithms run on factorial and exponential growth, which are not a reasonable time frame. . Reflection: . For a certain amount of time, I looked online to answer some of the questions I did not understand, but later I chose not to, to test myself. I eventually got a lot more than I thought I did, however I could have gotten a much larger score if I was more careful. For the future, I plan to change my style when it comes to taking these test, focusing more on my personal growth (minimizing the time I look online for answers). .",
            "url": "https://nvarap.github.io/blog/work/2023/03/03/Final.html",
            "relUrl": "/work/2023/03/03/Final.html",
            "date": " • Mar 3, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "CPT Writeup for "Don't Leave Me"",
            "content": "3a. 3a.i - This program was made to provide people with possible romantic or platonic relationships with other people when they would like to, allowing them to match up with those who would have similar likes. 3a.ii - In the video it shows the ability to match with multiple users depending on certain attributes, and shows the utilization of creation, reading, updating, and deleting users. - The video shows the user creating and account, setting up their account, and matching with users who have similar likes. The user inputs information and the program outputs potential matches depending on their account creation 3b. 3b.i - There would a be a list num_people, or a similar list, that would store the complete list of certain matches. These people would then be used in the match screen. 3b.ii - Name: “num_people” 3b.iii - The data in this list would be a number of user objects whose attributes are similar to that of the current user. This groups all possible matches at once, rather than getting each individually and making sure to exclude those who have already been selected. This optimizes program time and ensures extra code needn’t be written. 3b.iv - this is vital to my code as it stores a list of people instead of individually having call a procedure multiple times, and writing code to exclude already chosen matches. 3b.v - If the program were to run without it would make it very inefficient through the managing of possibly 100 matches between people at high user traffic. As a result, this would make multiple variables, all of which need a separate memory, and cause poor optimization of the code. 3c. 3c.i - Function: readUserName . readAge: async () =&gt; { setTimeout(() =&gt; { console.log(&quot;why&quot;) }, 2000); if(auth.currentUser){console.log(&quot;hello&quot;)} else{console.log(&quot;nothing works&quot;)} let _uid = auth.currentUser?.uid console.log(&quot;uid: &quot; + _uid); let ret = &quot;&quot; try { await get(ref(db, &#39;/users/&#39; + _uid+&#39;/vitals&#39;)).then(snapshot =&gt; ret = snapshot.val().age); console.log(&quot;ret after change = &quot; + ret); } catch(error){ console.log(error); } return ret } . ` - This function would take the users ID and then fin the corresponding space in the database, returning their various values. 3c.ii . const user = userStore(auth); let age = readHandlers.readAge() let pronouns = readHandlers.readPronouns(); let like = readHandlers.readHobby(); . ` 3c.iii - This function does a majority of the work as it matches up people and is the entire backend for this part of the project. 3c.iv - The procedure gathers the entire user base takes the information of the user in order to put those into headers with this data. 3d. 3d.i - First call: Occurs with a person who has created an account with one UID - Second call: Occurs with a person who has created an account with a different UID 3d.ii - condition tested by the first call: Tests with the likes “basketball” - condition tested by the second call: Tests with the likes “dancing” 3d.iii - The result of the first call is a profile where it’s like is listed as basketball. - The result of the first call is a profile where it’s like is listed as dancing. . .",
            "url": "https://nvarap.github.io/blog/work/2023/02/27/jeezus.html",
            "relUrl": "/work/2023/02/27/jeezus.html",
            "date": " • Feb 27, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "Promises -- Learning About Them!",
            "content": "What is A Promise? . A promise is a Javascript and Typescript data type which represents data in travel | Promises are a literal promise to your computer, telling it that it will give it some information later. Since this data in indeterminate, this is represented as a promise yet another demonstration of abstraction on the coding level. | . | Promises can only work in async functions | . Why Promises? . I have no idea! Python and Java do this much better, with resolving promises baked in. Javascript is more web-oriented, which could explain why, but aside from that, I have no idea! | . Resolving Promises . Promises travel in two states: Pending or Resolved | A promise that is pending has not been resolved, and thereby has not received and given back the data. Think of it like a friend who takes a pencil but has yet to be given it back. | However, much unlike our friend with our pencil, a promise can be Resolved, resulting in the data being returned and being available for use. | However, because JS is JS, this promise is wrapped in a Promise supertype, such as Promise&lt;string&gt;. | You will need to unwrap this, either using a framework (such as svelte or liquid), or otherwise unwrap it yourself. I describe finagling below. | . Asynchronous Functions . Asynchronous functions (henceforth Async Functions) are exactly that, functions that occur asynchronously. | Imagine these functions as stuff like something in the microwave. For breakfast, you may want a bowl of cereal with warm milk. So, you get the milk and put it in the microwave. However, you’re not just going to wait for the milk to warm, then go and get the cereal. While the milk is warming, you go and get the cereal so that by the time the milk is ready, everything is prepared to be used. | This is basically a promise in an async function, a piece of information you know you are going to get and runs in the background. Await . | There are many keywords, but await is probably the single most important one | await allows your code to wait for a promise to be resolved, while still allowing for code to run in the background | . For Example . let f = async () =&gt; { await SomePromise().then()//then do something // do something further with the promise } . Thus, the await key is imperative to ascertaining promises. | . .then() and .catch() . .then and .catch are functions that work on promises when they return (typically from an await function). These allow you to manipulate these promises. .then() . | .then() allows you to operate on what is returned. It is often formatted as: .then(ret =&gt; console.log(ret)), a simple function that allows you to log what your promise does. However, you can also do other things, such as set it equal to a variable, manipulate an array/list returned by a promise, and more! .catch() . | .catch() can catch an error that occurs when the promise is sent. This may be a bad API key, faulty data, or an error with retrieving. However do note that this doesn’t prevent a null or undefined state for your promise, so you will have to code defensively. | often formatted as .catch(error){console.log(error)}, to simply log the error that occurs | . For Example . let f = async () =&gt; { await SomePromise().then( ret =&gt; console.log(ret); // get &quot;ret&quot;, the return value... // log ret! ).catch(error){ console.log(error); // in the case of an error... // log it! } } . Resolving Promises, and Finagling . The issue with promises is that they aren’t fun to work with. While what was just explained seems cookie cutter, you have to note that this scratches the surface. | You cannot move data returned by a promise outside of a .then, making it really hard to export data | This results in something I like to call: finagling. | You will have to finagle a way to get the data from your promise outside. I often do this by assigning a junk variable to that return value, and returning that. | . An Example of this, from our code! . readUserName: async () =&gt; { setTimeout(() =&gt; { console.log(&quot;why&quot;) }, 2000); let _uid = auth.currentUser?.uid console.log(&quot;uid: &quot; + _uid); let ret = &quot;&quot;; // set the &quot;junk&quot; var try { // below is the actual promise; getting the data await get(ref(db, &#39;/users/&#39; + _uid)).then(snapshot =&gt; ret = snapshot.val().username); // assigning the variable console.log(&quot;ret after change = &quot; + ret); // logging the change, ensure it worked } catch(error){ console.log(error); } return ret; // returning the &quot;junk&quot; var } . Another way involves just returning the promise. One way I tried to get promises to work (and eventually did) was by returning the promise and using our framework (svelte, very good would recommend) to unwrap the promise. | . Example . &lt;div&gt; &lt;h1&gt; {#await age} &lt;p&gt;...waiting&lt;/p&gt; {:then string} &lt;!--Svelte liquid utilized here --&gt; {#if $user} &lt;ProfileInput placeholder=&quot;Age&quot; value={string} state={switchVal} /&gt; {:else} &lt;p&gt;sorry&lt;/p&gt; {/if} {:catch error} &lt;!--As you can see, await, then, and catch are all here--&gt; &lt;p style=&quot;color: red&quot;&gt;{error.message}&lt;/p&gt; {/await} &lt;/h1&gt; &lt;/div&gt; . This would take a promise, and unwrap that promise, displaying the data and other stuff depending on the state of the user. . Reflection . Overall, promises have had a negative impact on me, my mental health, and my opinion of coding. They are dumb, lack proper documentation, and are not as easily baked as far more based languages such as python and java. The requests library simply outshines this in every way. But that aside, it still can be very intuitive once you get it to work out, and I hope this article helps anybody understand promises just a bit better. If not, just check on stack overflow or the mozilla docs. .",
            "url": "https://nvarap.github.io/blog/work/2023/02/26/promises.html",
            "relUrl": "/work/2023/02/26/promises.html",
            "date": " • Feb 26, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "N@TM Tri 2",
            "content": "Night At the Museum . This trimester, Night at the Museum was really fun! I had fun looking at different projects, and introducing our project to others. Even though a lot of our features were work in progress, seeing other people’s projects work really well was awesome. . Various Other Projects . Arcade Chinmay and Emaad had an arcade that had multiple different games, such as a country guesser and a hangman game. This arcade had numerous different features and I believed they stored various information in a backend | . | Recipe Machine Colin, Keira, and Shreyas all had a food-esque website which could display various recipes and the locations of various different ethnic cuisines in the area. I found their project to be cool due to the scaling, and I noticed how their project could allow users to implement their own recipes, which used some crowdsourcing tactics | . | Furry Friend Finder Hae Ryn and her group created a way to track dogs, adopt, recommend, and journal about a dog you may have. I am a dog person (however I can’t have one cause a family member of mine is allergic), so I did like the various features. Their frontend and backend connection was seamless and I really liked how each feature built off one another. | . | Cat Cafe Drew and Tanisha had a cat café website, a website for a café that has cats. There you could schedule events, see events, and rate the restaurant. The projects has a very well constructed frontend and a great interaction between frontend and backend. | . | Formula One Database Krish made a formula one database that could set events and record events into a database. It was very cool to look at and I liked the frontend. | . | Reflection . I met a ton of my friends and even new people when I looked at various projects. These projects were super cool even though many of them (including our own) were not finished. I’d have really liked if tri 2 could have moved around some breaks to accommodate completed projects, because that would make N@TM so much more entertaining. Pertaining to other classes, I was surprised and disappointed not to see any business materials from Mr.Buxton, as he and his classes are some of my favorite on campus. I overall believe that the day would have been better if we had a bit more done, but overall, it was a fine day. 7/10. ps: Jazz band was great! . .",
            "url": "https://nvarap.github.io/blog/work/2023/02/16/reademandweep.html",
            "relUrl": "/work/2023/02/16/reademandweep.html",
            "date": " • Feb 16, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "5.6 Safe Computing Answers",
            "content": "Describe PII you have seen on project in CompSci Principles. Signing into various places, asking for information in our project, and having to provide necessary information when say running commands in shell such as sudo. Biometric information inputted at various accounts | . | What are your feelings about PII and your personal exposure? Facially, I only have one video on youtube from 5th grade. However I feel that my data has still been exposed regardless, as a result of data trackers, cookies, digital footprint, etc. In some way, shape or form, I most likely have my entire profile of myself out on the internet, along with my interests. I find this rather disturbing, as this can lead to be almost incredibly targeted and slightly privacy-infringing ads. | . | Describe good and bad passwords? What is another step that is used to assist in authentication. Good passwords use a variety of symbols, not just ASCII symbols, and have it rather long. Bad passwords can be too long, use simple and easy to guess words, and lack variation. Another step that is used to assist in authentication is 2fa, or two factor authentication. This provides a secondary form of authentication exclusive from the primary form, allowing for complete authentication | . | Try to describe Symmetric and Asymmetric encryption. Symmetric encryption is where, when passwords are being passed, the hashing and rehashing of information using the same algorithm. However, in asymmetric encryption, the hashing of the information is done via a series of different keys, different algorithms are used to hash them. This also means in symmetric encryption, you have to keep the same key secret. | . | Provide an example of encryption we used in AWS deployment. AWS deployment often uses server-side AES 256 encryption for information, and hashes information to-and-fro when routing requests. Thus, information is kept secure. | . | Describe a phishing scheme you have learned about the hard way. Describe some other phishing techniques. I have not learned about phishing schemes the hard way, but one weird site was a site that automatically downloaded some items to my computer when I was young. I was very scared at the time and have always thought about that when surfing. Some phishing techniques include scams from friends, scams from providers who ma not have the same, email, etc. | . |",
            "url": "https://nvarap.github.io/blog/work/2023/02/08/heheheahahahehaejafhwehfaiowhfioewjfaioewjifjawoeifjiwejafoiejfoiwejaiofjdioiscmawejfieawfiwoerpeorpeorpeorpeoproeporepaskcsajoewkfa.html",
            "relUrl": "/work/2023/02/08/heheheahahahehaejafhwehfaiowhfioewjfaioewjifjawoeifjiwejafoiejfoiwejaiofjdioiscmawejfieawfiwoerpeorpeorpeorpeoproeporepaskcsajoewkfa.html",
            "date": " • Feb 8, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "5.5 Legal/Ethical Concerns Answers",
            "content": "Blog Reflection . VWhen you create a GitHub repository it requests a license type. Review the license types in relationship to this Tech Talk and make some notes in your personal blog. Apache License | . Preservation of copywrite regulations. Allows for modification - GNU License(s) | Make source code almost completely available to all. Allow for various distribution mention. Many different types - Mozilla Public License | Large distribution and professional presence using this license. Useful for patents - MIT License | Simpler license, allows for availability of the source code, creates modifiable and distributable code - Boost Software License | Allows for distribution without source code. licensed work and modifications allowed. - The Unlicense | Dedicates work to the public space, allows for complete puclic domain use - Creative commons! | Allows for various modifications as allowed by the terms of the license | I only wanted to talk about this because of Dungeons and Dragons :)) | . | In your blog, summarize the discussions and personal analysis on Software Licenses/Options, Digital Rights, and other Legal and Ethical thoughts from this College Board topic. We mainly talked about how ethically, stealing data or DMCA and copyright abuse plague the internet space. I especially believe that data brokers, who take information via legal methods i.e cookies and sell this info for tuppence, are unethical, even though their practices are legal and available to any kind of person of business. From political to past abusers, anyone with a couple 100 dollars can track anyone down to their address. I feel that it is necessary to be cautious of your data, but it must be accepted that it is an inevitability, not a choice, to have your info out on the net. | . | Make a license for your personal (blog) and Team repositories for the CPT project. Be sure to have a license for both Team GitHub repositories (frontend/backend). Document license(s) you picked and why. FYI, frontend, since it is built on GitHub pages may come with a license and restrictions. Document in blog how team made license choice and process of update. We applied the MIT license to both the frontend and the backend of our CPT project. We did this because we believe that the MIT license is by far the best in terms of tradeoffs. I will not be using my CPT project for my actual CPT, and I believe that anyone is welcome to modify the code we have (I also believe that anyone who choses to do that is insane but it’s their decisions they have to contemplate). Thusly, I believe that the MIT license is by far the greatest for us to use. | . |",
            "url": "https://nvarap.github.io/blog/work/2023/02/08/Genkidama.html",
            "relUrl": "/work/2023/02/08/Genkidama.html",
            "date": " • Feb 8, 2023"
        }
        
    
  
    
        ,"post15": {
            "title": "5.4 Crowdsourcing Answers",
            "content": "Answers to Questions . CompSci has 150 principles students. Describe a crowdsource idea and how you might initiate it in our environment? Computer science allows crowdsourced ideas such as allowing for crowdsourced teacher reviews. Crowdsourcing is delegating many smaller tasks to a crowd for payment or as volunteers. We can better our community by crowdsourcing feedback in a multi-step feedback process. By nominating specific issues we find in a community or lesson plan (this prevents direct animosity to show through towards teachers), we can talk about the issues we see in our community, and lead us cumulatively to a greater community. This could be initiated through text messages and on-campus marketing. Another crowdsourcing initiative we could have is a wiki for newer CompSci students of various grades. As high schoolers we may seem very scary for younger children, and as a result if we are able to crowdsource a “survival guide” for younger children in various grades who are interested in CompSci, we can alleviate the stress that may cause for others around us. This would be crowdsourcing as we could have various sections filled out by separate people as volunteers (this being many micro-tasks fulfilled by the community). We could implement this similarly to the previous idea: through differing methods such as releasing the wiki secretly, and then advertising it. Should we introduce it mysteriously, we could also drive more interest. . Through these two ideas, we can find good ways to utilize the specialties of CompSci students for crowdsourced ideas. . What about Del Norte crowdsourcing? Could your final project be better with crowdsourcing? First, to answer the obvious. If crowdsourcing in this context means joining the dating app that we create, and reporting bad actors, our final project would be much better with crowdsourcing. However, if this is pertaining to the actual creation and collaboration upon… maybe not. A lot of people working with different perspectives may not be the most efficient way to develop a dating app. Using Del Norte for a similar “survival guide” would be very useful, this way instead of simply helping APCSP students, we could also help those in younger grades, and help with various things such as college and internship admissions. People who want to chase these things but don’t have the necessary commitment/connections may falter in this case, but with something similar to this, we’d definitely be able to utilize the various expertises of kids at Del Norte. . Another idea we could implement using Del Norte Students would be raising community awareness. A page where we could have various people enter various issues they see within the community, and then allowing a platform for those people to arrange for such communal activities to occur would be a great help to the community and better us as a whole. Basically, the community can build a platform for themselves through something like. . Through ideas such as this, wwe can utilize not only the expertise, but also the experiences of Del Norte students to ensure that we can better our community. . Final Reflection . In this discussion, I found new ideas about understanding how crowdsourcing work and learning from multiple perspectives about multiple ideas. Personally, I feel that if we had one, larger circle that was (for lack of a better word) crowdsourced, I’d feel that we’d have contributed much more and with much more zeal. .",
            "url": "https://nvarap.github.io/blog/work/2023/01/31/welltodayisinfacttuesdayandtheissuewiththatisthatIdonotliketuesdaysbecausetuesdaysmeanrobotics.html",
            "relUrl": "/work/2023/01/31/welltodayisinfacttuesdayandtheissuewiththatisthatIdonotliketuesdaysbecausetuesdaysmeanrobotics.html",
            "date": " • Jan 31, 2023"
        }
        
    
  
    
        ,"post16": {
            "title": "5.3 Bias Answers",
            "content": "Does the owner of the computer think this was intentional? If yes or no, justify you conclusion. We can infer from his jocular tone and his lack of anger that he does not believe that this was intentional. He chooses to have fun, rather than berating people about it, which means he doesn’t believe it is intentional. . How do you think this happened? There are two reasons why this could happen. Either it is as a result of white developers making and testing it solely on white people, or it was just a negligently bug as a result of poor light being picked up from the camera. I would say that it is the former, because even if there was no actual racist intent, it was very possible that those behind this were not testing it on all skin colors. Is this harmful? Was it intended to be harmful or exclude? I don’t feel it was harmful to exclude, but simply a byproduct of the not so diverse workforce working on this program. At the end of the day, I feel it could be harmful, because not only is this possibly a waste of money for anyone who bought it, as this man did. It may make people similarly feel excluded or cheated. Should it be corrected? Absolutely, not only does it appear racist, it is simply fraudulent advertising. Note everybody can have their faced tracked doesn’t essentially means that they don’t exist to the computer, which is terrible and bad PR. Therefore, it absolutely should be corrected. . What would you or should you do to produce a better outcome? For in-depth testing would be necessary to fix this issue. Working on a variety of tools, people, tones of skin colors, and a better mantra or general focus would help when producing a better outcome. Rigor in the testing process would contribute to better results. . Final Reflection . I think this discussion was necessary, because it was very interesting to hear the perspectives of people, especially on the Siri/Alexa discussion. Since computer science is very much a male-dominated industry, it was interesting to see one’s perceptions on women voices, and while I feel it is as a result of inherent bias, it was interesting to see other perspectives of others such as myself and those who think other stuff. .",
            "url": "https://nvarap.github.io/blog/work/2023/01/31/heheha.html",
            "relUrl": "/work/2023/01/31/heheha.html",
            "date": " • Jan 31, 2023"
        }
        
    
  
    
        ,"post17": {
            "title": "Notes From Presentation",
            "content": "Project Presentation Notes . Talk about the purpose Direct and be precise | Overall purpose | . | Talk about goals and what the ghost are supposed to do (Less words) | Include functionality | Include the main features | . | Wireframe management Put specific CRUD stuff | Put wireframe outline of the app | Put future goals as well | . | Dedicate single slides to the main parts | Split functions into separate parts | Start with review overall, talk about data base usage Then go into one database. | . | Database adding Talk about why (specific reasons) | Talk about what its going to do | Who will use it | . | Talk about model view and control flow Talk about model params (headers) | Talk about view (UI and connection) | Talk about the control flow (receiving data and the table) Specific relevancy to your project | . | . | Show basic frontend | General route of presentation Talk about general purpose | Talk about goals and function Talk about each individual feature Show frontend wireframes | Show backend and implementation of the backend. | Talk about front : back connection | . | . | . | Discuss the relationships between each front and back end. | Describe the task (what specific applications and where, what will hosting be, what will the output be) | Talk about a timeline and what will accomplished when. Design a scrum board. Make sure to talk about accountability | Timetable + scrum board | . | Share who’s talking about what | Show the manifesto | . General appearance . Project | Purpose | Goals | Methods Frontend | Backend | Application and Execution | . | Timetable/Scrum board | Conclude with manifesto | 5-7 minutes | .",
            "url": "https://nvarap.github.io/blog/work/2023/01/30/welp.html",
            "relUrl": "/work/2023/01/30/welp.html",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post18": {
            "title": "Dating App Writeup",
            "content": "Our project: A dating app. . 3a. 3a.i - This program was made to provide people with possible romantic or platonic relationships with other people when they would like to. 3a.ii - In the video it shows the ability to match with multiple users depending on certain attributes, and shows the utilization of creation, reading, updating, and deleting users. - The video shows the user creating and account, setting up their account, and matching with users who have similar likes. The user inputs information and the program outputs potential matches depending on their inputs 3b. 3b.i - There would a be a list num_people, or a similar list, that would store the complete list of certain matches. These people would then be used in the match screen. 3b.ii - Name: “num_people” 3b.iii - The data in this list would be a number of user objects whose attributes would be similar to one of our users. This would manage complexity as instead of retrieving and storing individual people, it instead groups them for ease of use. 3b.iv - this is vital to my code as it stores a list of people instead of individually having call a procedure multiple times 3b.v - If the program were to run without it would make it very inefficient through the managing of possibly 100 matches between people at high user traffic. As a result, this would make multiple variables, all of which need a separate memory, and cause poor optimization of the code. 3c. 3c.i - Example function: Match depending on API - This function would take two users and compare their various vitals. This would then count points and if over a cap, they would return the user as a true. 3c.ii - This would be called when we are trying to open the match page, and as a result would be called, different matches would load 3c.iii - This function does a majority of the work as it matches up people and is the entire backend for this part of the project. 3c.iv - The procedure gathers the entire user base and compares each person’s vitals to one main user, and assigns a point value depending on similarities. if it meets a certain cap, it appends the user to a list 3d. 3d.i - First call: Occurs with a person who has the likes “basketball” and “card games” - Second call: Occurs with a person who has the likes “dancing” and “piano” 3d.ii - condition tested by the first call: Tests with the likes “basketball” and “card games” - condition tested by the second call: Tests with the likes “dancing” and “piano” 3d.iii - The result of the first call is one set of matches due to the likes. - The result of the second call is one set of matches due to the separate likes. . What My Video Will Show: . A user going through creating an account with some presets | A user then choosing to match with a specific person | A user displaying those matches | Another user (already signed in) trying to match with different likes | Showing the possible results each time. | . What I May Need . All we really need is a DB to hold users. This may either be firebase or AWS | . Our Project: . Our project is a dating app that will allow users to match up with different people and take a personality quiz to see what personalities they would match up with. .",
            "url": "https://nvarap.github.io/blog/work/2023/01/29/writeup.html",
            "relUrl": "/work/2023/01/29/writeup.html",
            "date": " • Jan 29, 2023"
        }
        
    
  
    
        ,"post19": {
            "title": "College Board MCQ Answers",
            "content": ". College board Score . I got a 46/50. I very well could have gotten a 48/50 if I looked through the questions a bit better, but overall I am okay with my score. I feel that many of my issues were as a result of not understanding the situation of a full word. As a result, reading more into certain problems would greatly help. . Problem 1 . Correct answer: B and C. . Why I got it wrong: I did not understand the full context of the situation, and as a result was unable to determine that in fact C was the correct answer. In order to fix this, I should have more consciousness when looking over answers again. By looking over this answer again, I would have been able to get it correct, most likely. . Problem 2 . . Correct answer: B . Why I got it wrong: I feel the situation confused me, and as a result, I was not able to interpret the answers correctly. I feel I just need to slow down (as I was taking a bit of a rush in order to finish it) I could have gotten it correct. . Problem 3 . . Correct answer: C . Why I got it wrong: I was incorrect in my judgement pertaining to the algorithms. I was overall skeptical about the second algorithm because it felt like it wasn’t going to work. However, I now see that I should have trusted my first gut instinct, and gone with that . Problem 4 . . Correct answer: C . Why I got it wrong: I did not know what the work heuristic meant, and as a result I feel that as a result I was unable to fully judge what it meant. I was able to get the first question right, but this one not so much. After the quiz, I searched up what heuristic meant (because I wanted ot complete the quiz without searching something up), and found out my error. If I knew what the word meant, I probably would have been able to get it correct . Final Reflection: . I like how I did on this project. I feel that I could have done better if I paid attention to what I was working. What I feel like I could do in the future is pay attention to the stuff I am working on, and as result I would probably improve. In the future, I will definitely also go over what I am working on. .",
            "url": "https://nvarap.github.io/blog/work/2023/01/29/MCQ.html",
            "relUrl": "/work/2023/01/29/MCQ.html",
            "date": " • Jan 29, 2023"
        }
        
    
  
    
        ,"post20": {
            "title": "Question/Answers/Reflections for 5.1 Questions.",
            "content": "Come up with three of your own Beneficial and corresponding Harmful Effects of Computing One beneficial effect of computing is that it is a very easy way to expand your horizons quickly. When you have something you want to do, not only does computing help you complete that issue, it also forces you to complete the prerequisites. And the ease of use that computing brings allows for this special sense of completion, eventually allowing you to learn far more than one could think that they could. For example, I am a game-dev and I’ve had to learn lots of math that’s above my current skill level to assist in complex physics measurements. The passion to create in a world of computing leads you to have to understand. Another example would be Dani, a popular youtuber who is also a game dev, having to learn the ins and outs of a terrifying badly document web API in order to complete game. This ability to expand quickly leads to assist ourselves. | One correspondingly harmful effect is workaholism. Being steadfast or motivated is great, but it becomes an issue when you’re effectively trying to do the same thing over and over again. An example of this from my life was when I was first getting into python libraries in a bad coursera course surrounding PILLOW, Tesseract, and Kraken. I kept trying to do one thing after another, guessing and checking to see what would work mainly because the course itself would not help me with my issues. This mentality of constantly doing stuff and not getting an answer can lead to the eventual destruction of one’s interest, and I can relate because after that course, I took almost a 6 month break from coding. Workaholism and burn-out can really rack on someone, especially when constantly doing something trying to get one line of code to work | . | Talk about dopamine issues above. Real? Parent conspiracy? Anything that is impacting your personal study and success in High School? There is merit to the dopaminergic issues that are stated in the blog. It is not right to simply shove away the plausibility, but there is a difference between “video games/computers negatively impact your sleep” versus “video games turn everybody into worse people in general”. This type of statement is very similar to the absolutism that we condemn as a society. I feel that as a constant consumer of computers, that we should pay attention to how it effects our brain and our mental health, and how its consumption effects our self-perception of both ourselves and our accomplishments. Making sure we remember that this is not how humans are supposed to function normally will help us make strides towards our understanding of our relationships w/ computers, because at the end of the day that is simply what this is. | Personally, I feel that it does impact my personal studies, not for any reason apart from sleep. Since most of our work (including this class) involves computers, it is very easy to remain up and awake for a long period of time, resuming in less sleep. Dopamine is also the motor neurotransmitter, and as a result I have felt a tad more hyperactive after long stretches of using a computer or playing video games. We have to control ourselves to assist with our development as a society | . | Reflection . This blog helped me think about the cost/benefit analysis. During discussion I had a lot of fun listening to the weird and funny ideas that many people posed, and the impromptu nature was enjoyable. I feel I need to now control how I work and what I work on and when, to better my mental and physical health.k .",
            "url": "https://nvarap.github.io/blog/work/2023/01/23/yknowwhatjusttoposspeopleoffIreallywannatryjustmakingtheselongdollarsignstarfreezingfeakingtitlesbecauseitalsotakesadvantageoftheinabiltiytoseethebadinthegoodhonestlyIshouldjustcopypasteamanuscriptinheretoseewhathappensLMFAOLFMAOLFMAOFALM.html",
            "relUrl": "/work/2023/01/23/yknowwhatjusttoposspeopleoffIreallywannatryjustmakingtheselongdollarsignstarfreezingfeakingtitlesbecauseitalsotakesadvantageoftheinabiltiytoseethebadinthegoodhonestlyIshouldjustcopypasteamanuscriptinheretoseewhathappensLMFAOLFMAOLFMAOFALM.html",
            "date": " • Jan 23, 2023"
        }
        
    
  
    
        ,"post21": {
            "title": "Question/Answers/Reflections for 5.2 Questions.",
            "content": "Questions for Post Blog Reflection . 1. How does someone empower themselves in a digital world? . People can empower themselves in the digital world by spreading good information, those that empower themselves, those that empower those next to them, and those who may be oppressed. By posting and spreading the information that we want to send about ourselves, we can empower ourselves to do better. By empowering ourselves to do better, we can feel better about ourselves, and see what we are doing wrong, and help others as a result. 2. How does someone that is empowered help someone that is not empowered? Describe something you could do at Del Norte HS. | Someone that is empowered could help someone who isn’t by standing up for them, and believing in who they are. If one does this, both the empowerer and empoweree will feel better, and both rise as a result. In the context of Del Norte, we could stand up for them in clubs, classrooms, sports, etc. By empowering them in this way we give their successes, their achievement, and their accomplishments to the world. As a result, we are able to empower everyone and have them be recognized. This can empower them. However, when we do such a thing, we must make it as digestible to ourselves as possible, as one can see someone do something extraordinary, however as a result be daunted to do it themselves, and for something we for granted such as the empowerment ouf ourselves and out peers, we may lose the chain to successes when we make a show, or scene out of our assistance. By keeping it digestible, we allow people to replicate our experiment effectively. 3. Is paper or red tape blocking digital empowerment? Are there such barriers at Del Norte? Elsewhere? | There is definitely something blocking digital empowerment, however I don’t think its the air of exclusivity or our attachment to older methods. These can easily be overcome simply by providing access, which as we speak is something that our government (hopefully) is looking to fix. I feel the real barrier is similar to our attachment to older methods however is still slightly different: our inability to teach this. I feel it may be fixed in some deep rooted ageism, or something or the other, but we as a society does not have the collective experience towards technology to adapt and teach it effectively. This is also what makes constantly evolving technology and aside from the constant progression of our society so fearful. Throughout the rest of human history, every achievement has been met with a rest period, a period for kids and adults alike to adapt, understand, break down, and teach the newest inventions of the era. It worked with steam energy, coal, and the advent of electricity. But now, we have an energy source that powers innovation, but it is far faster and far larger, the age of the bit and the byte. With such an accessible technology and new software being written to assist in its cultivation every day, and further expand it from a niche idea to the energy of the masses, innovation will burst in a far more than simply exponential way. As a result, this constantly evolving society we find ourselves in finds it hard to teach, and as a result finds it hard to block empowerment. A good example of this (being constantly evolving society causing the inability to effectively teach correctly) in Del Norte would be fastpages. The advent of fastpage’s deprecation for Quarto results in many kids having issues that have to resolved immediately lest they turn into issues for the actual learning they are supposed to engage in. Now, we reflect this issue onto the issue of empowerment. Its very plausible with the sheer amount of people that can code, and can code at a high level, the definition of empowerment can change tomorrow, or the day after than (and so on and so forth). This is the largest gatekeeper to empowerment: the inability to handle the exact definition, and each specific case. There is no rest for innovation in the age of the bit. There is no calm before the storm from henceforth. We also see this in the art world. All of a sudden, ChatGPT, midway, Dall-E are becoming not only more advanced, but also more accessible, open to change. Now imagine the debates about empowerment when AI comes into the fray. It will be a mess and we’re going to have to deal with a word that does not have real meaning past what it meant in the time period the human who’s defining it lives in. The greatest gatekeeper is the constant change we face. It’s a vicious cycle but also does have a solution. Nailing down some concrete-ness, better reactivity from our institutions and redundancy built into the system. Ironically if we think logically and are able to contemplate the safety nets and features necessary to accommodate everyone, we can find ourselves a balance where we can sustain the empowerment of everybody while still retaining the constant innovation that we so seek. | Also antitrust laws would help. That too. | And regulations for AI in our modern world | . Reflection . This blog caused me to think about the issues we have when it comes to empowerment in a digital environment. Especially on the third question I got a bit rant-y, but I feel it correctly describes how I see the current state of our world. I love to code, but I don’t very much like how we may be abandoning some of our humanistic impulses in the name of advancement. During discussion, the casual nature made it very easy to participate and contribute relevant material. .",
            "url": "https://nvarap.github.io/blog/work/2023/01/23/itsamondayandfranklyImmuchtotiredtocomeupwithacreativeandorwittynameforthissohonestlyjusttakethislongastarstarnameandsuckitlmaoROTFlol.html",
            "relUrl": "/work/2023/01/23/itsamondayandfranklyImmuchtotiredtocomeupwithacreativeandorwittynameforthissohonestlyjusttakethislongastarstarnameandsuckitlmaoROTFlol.html",
            "date": " • Jan 23, 2023"
        }
        
    
  
    
        ,"post22": {
            "title": "College Board Review Pt 2",
            "content": "Video/Review 1 . Section My Grade (1 or 0) CB Grade/Explain . Program Purpose and Function | 1. Correctly displays the purpose, input, and output. | 1. Meets all of the criteria | . Data Abstraction | 0. List is given, data accessed is not | 0. meets 2/3 criteria | . Managing Complexity | 0. Does not display how complexity is managed. Does not display how complexity is shown. No code segment is shown either | 0. Meets 0/2 criteria | . Procedural Abstraction | 1. Correctly shows implementation. | 1. Meets all of the criteria | . Algorithm Implementation | 1. Shows implementation of algorithm | 1. Clears all of the criteria | . Reflect: I found this to have the necessary stuff except for the implementation of algorithms functions. I see very clearly what could be changed. . Video Revision 2 . Section My Grade (1 or 0) CB Grade/Explain . Program Purpose and Function | 1. Provides a complete description of | 1. Meets all the criteria | . Data Abstraction | 1. Provides a complete description of data storage and accessing. | 1. Meets all the criteria. | . Managing Complexity | 1. Shows how lists manage complexity. | 1. Meets all the criteria | . Procedural Abstraction | 1. Correctly shows correct function implementation and the development of the procedure and usage | 1. Meets all of the criteria | . Algorithm Implementation | 1. Describes the usage and development of an algorithm | 1. Meets all of the criteria | . Reflect: This is a perfect example of a great performance task, with in-depth answers and the correct information to boot. . Video Revision 3 . Section My Grade (1 or 0) CB Grade/Explain . Program Purpose and Function | 1. Provides a complete description of | 1. Meets all the criteria | . Data Abstraction | 0. No distinct segment provided | 0. Does not show utilization of the data in the list. | . Managing Complexity | 0. Generalized and not specific. | 0. Very unspecific and generalized purpose. | . Procedural Abstraction | 0. No parameter for the function | 0. No parameter | . Algorithm Implementation | 0. Describes the wrong type of calls, doesn’t describe the parameter. Doesn’t describe results, but what appears on the screen. | 0. Misses all the criteria | . Reflect: This example is an example of what not to do, and it doesn’t really answer the questions effectively. Talks about being specific and acknowledging what we have to do. . Video Revision 4 . Section My Grade (1 or 0) CB Grade/Explain . Program Purpose and Function | 1. Shows input/output and the purpose of the game. | 1. Meets all the criteria | . Data Abstraction | 1. Defines what is being stored and what exists | 1. Meets all the criteria, provides the data being accessed and what is being stored. | . Managing Complexity | 1. Shows how complexity is managed through using the list to represent each time. | 1. Talks about storing and the data. Shows how the code can be written without lists | . Procedural Abstraction | 1. Talks about the procedure and parameters. | 1. Describes a procedure and its functionality. | . Algorithm Implementation | 0. Doesn’t indicate the arguments, doesn’t indicate the conditions tested. | 0. Misses all the criteria | . Reflect: A great example of coding, but not much to talk about related to algorithmic usage. Something to talk about. .",
            "url": "https://nvarap.github.io/blog/work/2023/01/19/moreGRAAADES.html",
            "relUrl": "/work/2023/01/19/moreGRAAADES.html",
            "date": " • Jan 19, 2023"
        }
        
    
  
    
        ,"post23": {
            "title": "Python Class to DB Implementation",
            "content": "Python Class . &quot;&quot;&quot; database dependencies to support sqliteDB examples &quot;&quot;&quot; from random import randrange from datetime import date import os, base64 import json from __init__ import app, db from sqlalchemy.exc import IntegrityError class F1Team(db.Model): __tablename__ = &#39;formulaone&#39; # table name is plural, class name is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _constructor = db.Column(db.String(255), unique=False, nullable=False) _driver = db.Column(db.String(255), unique=True, nullable=False) _races = db.Column(db.Integer, unique=False, nullable=False) _polePositions = db.Column(db.Integer) _qualRate = db.Column(db.Float) _numChamps = db.Column(db.Integer) def __init__(self, constructor, driver, races, polePositions, qualRate): self._constructor = constructor self._driver = driver self._races = races self._polePositions = polePositions self._qualRate = qualRate self._numChamps = self.retChamps({&quot;Mclaren&quot; : 8, &quot;Ferrari&quot; : 16, &quot;Aston Martin&quot; : 0, &quot;Red Bull&quot; : 5, &quot;Honda&quot; : 6}) # later this would be replaced by an API def __str__(self): return f&quot;{self.constructor} raced by {self._driver}.&quot; def __cmp__(self, other): return self._driver == other._driver def champComp(self, other): ret = self._numChamps &gt; other._numChamps return ret @property def constructor(self): return (self._constructor) @constructor.setter def constructor(self, qualRate): self._constructor = qualRate @property def qualRate(self): return (self._qualRate*self.races) @qualRate.setter def qualRate(self, qualRate): self._qualRate = qualRate @property def driver(self): return (self._driver) @driver.setter def driver(self, driver): self._driver = driver @property def races(self): return (self._races) @races.setter def races(self, races): self._races = races @property def polePositions(self): return (self._polePositions) @polePositions.setter def polePositions(self, polePositions): self._polePositions = polePositions @property def numChamps(self): return (self._numChamps) @numChamps.setter def numChamps(self, numChamps): self._numChamps = numChamps def retChamps(self, dic): try: champs = dic[self._constructor] return champs except Exception: raise KeyError(&quot;Constructor Not Recognized&quot;) def create(self): # Create try: db.session.add(self) db.session.commit() return self except IntegrityError: db.session.remove() return None def read(self): # Read return { &quot;id&quot;: self.id, &quot;constructor&quot;: self._constructor, &quot;driver&quot;: self._driver, &quot;qualRate&quot;: self._qualRate, &quot;numChamps&quot;: self._numChamps, } def update(self, driver=&quot;&quot;, numChamps=&quot;&quot;, races=&quot;&quot;): # Update &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(driver) &gt; 0: self._driver = driver if len(numChamps) &gt; 0: self._numChamps += int(numChamps) if len(races) &gt; 0: self._races += int(races) db.session.commit() return self def delete(self): # Delete db.session.delete(self) db.session.commit() return None def initTeams(): db.create_all() u1 = F1Team(&quot;Mclaren&quot;, &quot;Rohin S&quot;, 12, 1, 0.23) u2 = F1Team(&quot;Ferrari&quot;, &quot;Advay S&quot;, 15, 3, 0.69) u3 = F1Team(&quot;Aston Martin&quot;, &quot;Ryan W&quot;, 18, 5, 0.9) u4 = F1Team(&quot;Honda&quot;, &quot;Varalu N&quot;, 20, 4, 0.5) teams = [u1, u2, u3, u4] for team in teams: try: #&#39;&#39;add user/post data to table team.create() except IntegrityError: #fails with bad or duplicate data db.session.remove() print(f&quot;Records exist, duplicate email, or error: {team._constructor}&quot;) . Class implementation . from flask import Blueprint, request, jsonify from flask_restful import Api, Resource # used for REST API building from datetime import datetime from model.tokens import F1Team f1_api = Blueprint(&#39;f1_api&#39;, __name__, url_prefix=&#39;/api/tokens&#39;) # API docs https://flask-restful.readthedocs.io/en/latest/api.html api = Api(f1_api) class F1API: class _Create(Resource): def post(self): &#39;&#39;&#39; Read data for json body &#39;&#39;&#39; body = request.get_json() &#39;&#39;&#39; Avoid garbage in, error checking &#39;&#39;&#39; # validate name nconstructor = body.get(&#39;constructor&#39;) if nconstructor is None or len(nconstructor) &lt; 2: return {&#39;message&#39;: f&#39;Constructor is incorrect&#39;}, 210 # validate uid ndriver = body.get(&#39;driver&#39;) if ndriver is None or len(ndriver) &lt; 2: return {&#39;message&#39;: f&#39;Driver is missing, or is less than 2 characters&#39;}, 210 # look for password and dob nraces = body.get(&#39;races&#39;) nqualRate = body.get(&#39;qualRate&#39;) npolePositions = body.get(&#39;polePositions&#39;) &#39;&#39;&#39; #1: Key code block, setup USER OBJECT &#39;&#39;&#39; f1dude = F1Team(constructor=constructor, driver=ndriver, races=nraces, polePositions=npolePositions,qualRate=nqualRate) &#39;&#39;&#39; #2: Key Code block to add user to database &#39;&#39;&#39; # create user in database dude = f1dude.create() # success returns json of user if dude: return jsonify(f1dude.read()) # failure returns error return {&#39;message&#39;: &quot;err&quot;}, 210 class _Read(Resource): def get(self): teams = F1Team.query.all() # read/extract all users from database json_ready = [team.read() for team in teams] # prepare output in json return jsonify(json_ready) # jsonify creates Flask response object, more specific to APIs than json.dumps # building RESTapi endpoint api.add_resource(_Create, &#39;/create&#39;) api.add_resource(_Read, &#39;/&#39;) . Video . Video Of The Token Working . .",
            "url": "https://nvarap.github.io/blog/work/2023/01/19/dam.html",
            "relUrl": "/work/2023/01/19/dam.html",
            "date": " • Jan 19, 2023"
        }
        
    
  
    
        ,"post24": {
            "title": "Python API Implementation",
            "content": "Python API Implementation . This is from last trimester where we developed an API. This development includes two apis, but the card storage API is used in this demonstration . from flask import Blueprint, request, jsonify # jsonify creates an endpoint response object from flask_restful import Api, Resource # used for REST API building import requests # used for testing import random import wikipediaapi app_api = Blueprint(&#39;api&#39;, __name__, url_prefix=&#39;/api/&#39;) # API generator https://flask-restful.readthedocs.io/en/latest/api.html#id1 api = Api(app_api) &#39;&#39;&#39; I combined both in order to support both endpoints on the same area. may allow us to pivot should it be necessary basically tricks the server into running both ends &#39;&#39;&#39; class UsrAPI: def serialize(name): wiki_wiki = wikipediaapi.Wikipedia(&#39;en&#39;) # make a wikipedia api object page_py = wiki_wiki.page(name) # init to wikipedia by default for default page, otherwise check name thisdict = {} # create a dictionary thisdict[&quot;url&quot;] = page_py.fullurl thisdict[&quot;summary&quot;] = page_py.summary for i in page_py.sections: thisdict[i.title] = i.text # init values return thisdict local_dic = {} # Stores all the users and IDs def card(front, back, diction): user_id = str(len(diction)) diction[user_id] = {&#39;title&#39;:front, &quot;substance&quot;:back} def delete_all(query, diction): if query == &quot;true&quot;: diction = {} return {&quot;message&quot; : &quot;operation successful&quot;} else: return {&quot;message&quot; : &quot;operation failure&quot;} class _Create(Resource): def post(self, front, back): # simply creates the endpoint, dne otherwise UsrAPI.card(front, back, UsrAPI.local_dic) return {&quot;message&quot; : f&quot;{front} and {back} added&quot;} # getJokes() class _Read(Resource): def get(self): return jsonify(UsrAPI.local_dic) # init wikipedia by default class _Update(Resource): def put(self, nid): lst = [] id = str(nid) body = request.get_json() UsrAPI.local_dic[id] = body return {&quot;message&quot; : f&quot;{body} added&quot;} class _WikiRead(Resource): def get(self): return jsonify(UsrAPI.serialize(&#39;wikipedia&#39;)) # init wikipedia by default # getJoke(id) class _ReadWithName(Resource): # read when url have name query satisfied def get(self, name): return jsonify(UsrAPI.serialize(name))# otherwise check with name class _Delete(Resource): def get(self, id): key = UsrAPI.local_dic.pop(id, None) return jsonify({&quot;message&quot;: f&quot; {key} deleted&quot;}) # getJoke(id) # class _ReadWithName(Resource): # read when url have name query satisfied # def get(self, name): # return jsonify()# otherwise check with name # getRandomJoke() #class _ReadRandom(Resource): # def get(self): # return jsonify() # this exists for some reason # building RESTapi resources/interfaces, these routes are added to Web Server api.add_resource(_Create, &#39;/card/create/&lt;string:front&gt;_&lt;string:back&gt;&#39;) api.add_resource(_Read, &#39;/card/&#39;) api.add_resource(_WikiRead, &#39;/wiki/&#39;) api.add_resource(_ReadWithName, &#39;/wiki/&lt;string:name&gt;&#39;) api.add_resource(_Delete, &#39;card/delete/&lt;string:id&gt;&#39;) api.add_resource(_Update, &#39;card/update/&lt;string:nid&gt;&#39;) . Video Demonstration . This should be the API demo .",
            "url": "https://nvarap.github.io/blog/work/2023/01/19/apis.html",
            "relUrl": "/work/2023/01/19/apis.html",
            "date": " • Jan 19, 2023"
        }
        
    
  
    
        ,"post25": {
            "title": "Ideating Technical Details",
            "content": "Ideating Technical Details . TASK: Upon the tasks that which you ideated last week, ensure that you have technical details upon which you can execute in order to ensure that your ideas work. . . Task 1: Constructor/Constructor Championship Quiz . Build the list Get raw data from github images. form into a list of various lists | Generate a function that can get a random element from the list retrieve one link &amp; its answer | return the image generated + extra information if necessary | . | With the image, place it and store the answer Probably means dictionary is necessary | . | allow the user to input something | | Button also included for work | the answer would then be considered whether it was true . | Running on this basic system switch out questions depending on whether it was correct or not. (Also save strikes if incorrect) | After the game : Save into a file/api? allow to save and display a highscore for those who wish to save as such. Gives as an incentive to continue. | . |",
            "url": "https://nvarap.github.io/blog/posts/pgk",
            "relUrl": "/posts/pgk",
            "date": " • Jan 14, 2023"
        }
        
    
  
    
        ,"post26": {
            "title": "Mr. Mortensen's Original Code, Modified",
            "content": "# Werkzeug is a collection of libraries that can be used to create a WSGI (Web Server Gateway Interface) # A gateway in necessary as a web server cannot communicate directly with Python. # In this case, imports are focused on generating hash code to protect passwords. from werkzeug.security import generate_password_hash, check_password_hash import json from datetime import date # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password, dob): self._name = name # variables with self prefix become part of the object, self._uid = uid self.dob = dob self.age = self.calculate_age(dob) self.classOf = self.calculate_classOf(dob) self.set_password(password) # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid @property def classOf(self): return self.classOf @classOf.setter def classOf(self, cs): self.classOf = cs # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters def calculate_classOf(self, born): age = self.calculate_age(born) # gets the age if age &lt;= 18: # younger, the graduation is now + how many years they have left years_remaining = 18-age return date.today().year+years_remaining else: # otherwise, its now - how many years they are older by years_after = age-18 return date.today().year-years_after def calculate_age(self, born): today = date.today() # Calculate the age based of the date. Code provided by Mr.Mort return today.year - born.year - ((today.month, today.day) &lt; (born.month, born.day)) # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;&#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password})&#39; # tester method to print users def tester(users, uid, psw): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result def printAgeInfo(user): print(f&quot;Date of birth: {str(user.dob)}, n Current Age: {str(user.age)}, n classOf: {str(user.classOf)}&quot;) # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: u1 = User(&quot;Rohin Sood&quot;, &quot;hin&quot;, &quot;jamal&quot;, date(1776, 7, 4)) u2 = User(&quot;Ryan McWeeny&quot;, &quot;ryo&quot;, &quot;ryry&quot;, date(1777, 8, 5)) u3 = User(&quot;Advay Shindikar&quot;, &quot;addy&quot;, &quot;oop&quot;, date(1778, 9, 6)) u4 = User(&quot;Varaprasad Nibhanupudi&quot;, &quot;vlu&quot;, &quot;amogus&quot;, date(1779, 10, 8)) u5 = User(&quot;Quantavius&quot;, &quot;7&quot;, &quot;oval&quot;, date(2010, 3, 12)) users = [u1, u2, u3, u4, u5] users_names = [str(person) for person in users] for i in range(len(users)): print(users_names[i]) printAgeInfo(users[i]) . name: &#34;Rohin Sood&#34;, id: &#34;hin&#34;, psw: &#34;sha256$AK8...&#34; Date of birth: 1776-07-04, Current Age: 246, classOf: 1795 name: &#34;Ryan McWeeny&#34;, id: &#34;ryo&#34;, psw: &#34;sha256$5gy...&#34; Date of birth: 1777-08-05, Current Age: 245, classOf: 1796 name: &#34;Advay Shindikar&#34;, id: &#34;addy&#34;, psw: &#34;sha256$MLc...&#34; Date of birth: 1778-09-06, Current Age: 244, classOf: 1797 name: &#34;Varaprasad Nibhanupudi&#34;, id: &#34;vlu&#34;, psw: &#34;sha256$oOW...&#34; Date of birth: 1779-10-08, Current Age: 243, classOf: 1798 name: &#34;Quantavius&#34;, id: &#34;7&#34;, psw: &#34;sha256$BNs...&#34; Date of birth: 2010-03-12, Current Age: 12, classOf: 2029 . F1 Class . Includes some simple additions Constructor (and derived from constructor is championships) | Driver | Number Races Competed in | Ratio of qualifying | . | . class F1Team(): def __init__(self, constructor, driver, races, polePositions, qualRate): self.constructor = constructor self.driver = driver self.races = races self.polePositions = polePositions self._qualRate = qualRate self.numChamps = self.retChamps({&quot;Mclaren&quot; : 8, &quot;Ferrari&quot; : 16, &quot;Aston Martin&quot; : 0}) # later this would be replaced by an API def __str__(self): return f&quot;{self.constructor} raced by {self.driver}.&quot; def __cmp__(self, other): return self.driver == other.driver def champComp(self, other): ret = self.numChamps &gt; other.numChamps return ret @property def qualRate(self): return (self._qualRate*self.races) @qualRate.setter def qualRate(self, qualRate): self._qualRate = qualRate def retChamps(self, dic): try: champs = dic[self.constructor] return champs except Exception: raise KeyError(&quot;Constructor Not Recognized&quot;) if __name__ == &quot;__main__&quot;: f1 = F1Team(&quot;Mclaren&quot;, &quot;Me&quot;, 100, 2, 1) f2 = F1Team(&quot;Aston Martin&quot;, &quot;u&quot;, 104, 0, 0.2) print(f1.driver) print(f2.qualRate) ret = f1.champComp(f2) print(f&quot;drivers: {f1 == f2}&quot;) print(ret) print(f&quot;{f1.constructor} has more championships than {f2.constructor}&quot; if ret else f&quot;{f2.constructor} has more championships than {f1.constructor}&quot;) . Me 20.8 drivers: False True Mclaren has more champtionships than Aston Martin . Uses classes to make a simulation . import random global food global population food = 1000 population = [] class Gene(): def __init__(self, genotype, phenotype): self.genotype = genotype self.phenotype = phenotype def expression(gene1, gene2): if gene1.genotype == &quot;dom&quot; and gene2.genotype == &quot;rec&quot;: return gene1.phenotype elif gene1.genotype == &quot;rec&quot; and gene2.genotype == &quot;dom&quot;: return gene2.phenotype else: return gene1.phenotype class Person(): def __init__(self, genes: list, id): self._vitals = {&quot;food&quot; : True, &quot;reproduce&quot; : False, &quot;age&quot; : 1} self._genes = [] def __del__(self): del(self) def __cmp__(self, other): pass def canMate(self): if self._vitals[&quot;food&quot;] and self._vitals[&quot;reproduce&quot;] and self._vitals[&quot;age&quot;] &gt; 4: return True return False def starve(self): if not self._vitals[&quot;food&quot;]: __del__(self) return True return False def eat(self): if food &gt; 0: food -= 1 self._vitals[&quot;food&quot;] = True else: self._vitals[&quot;food&quot;] = False def ageUp(self): self._vitals[&quot;age&quot;] += 1 def giveGenes(p1, p2): return [p1._genes[random.randint(0,1)], p2._genes[random.randint(0,1)]] def mate(p1, p2): if p1.canMate() and p2.canMate(): population.append(Person(Person.giveGenes(p1, p2, len(population)+1))) def Simulate(pop, years, startPop): global food global population Gene1 = Gene(genotype=&quot;dominant&quot;, phenotype=&quot;Lmao&quot;) Gene2 = Gene(genotype=&quot;recessive&quot;, phenotype=&quot;oamL&quot;) genes=[Gene1, Gene2] population = [Person([random.choice(genes)], i) for i in range(startPop)] for i in range(years): if food &lt; 1000: food += random.randint(300, 350) for person in pop: person.ageUp() # finish this up. make each person generate an id to compare to to ensure if __name__ == &quot;__main__&quot;: Simulate(population, 1, 10) print(population) # population increases b/c there is food . [&lt;__main__.Person object at 0x7faaf5dfe520&gt;, &lt;__main__.Person object at 0x7faaf5e09430&gt;, &lt;__main__.Person object at 0x7faaf5e091c0&gt;, &lt;__main__.Person object at 0x7faaf5e09070&gt;, &lt;__main__.Person object at 0x7faaf5e09df0&gt;, &lt;__main__.Person object at 0x7faaf5e09d30&gt;, &lt;__main__.Person object at 0x7faaf5e09c10&gt;, &lt;__main__.Person object at 0x7faaf5e09820&gt;, &lt;__main__.Person object at 0x7faaf5e09b20&gt;, &lt;__main__.Person object at 0x7faaf5e09b80&gt;] .",
            "url": "https://nvarap.github.io/blog/2023/01/10/classesahhhh.html",
            "relUrl": "/2023/01/10/classesahhhh.html",
            "date": " • Jan 10, 2023"
        }
        
    
  
    
        ,"post27": {
            "title": "Agile Manifesto",
            "content": ". Our Agile Manifesto lines out what we believe are the key parts of our team. Just for context, let us lay out our team dynamic again . Person Role . Rohin | Scrum Master | . Varalu | Dev-Ops | . Advay | Backend Dev | . Ryan | Frontend Dev | . We found it necessary to be serious when deciding what to use in our agile manifesto, so we chose to do high quality work and to be adaptable and dependable. We find high quality work important because our work reflects on us, and we’d like to be perceived as a group that can accomplish things, especially because we are almost all STEM-oriented. We found Adaptability to be useful because from Robotics we know that things never go the way one expects, and this can result in bad things happening if we remain stubborn. We also know that it isn’t good to simply rely on one person to do all the work, just because we don’t know, so we implemented dependence. . We also added open-mindedness and innovate to the manifesto because we want to achieve great things, and to do this we must be oriented towards looking off the beaten path and try to innovate our own ideas. . At the very bottom, we also added to do this while having fun. We bolded “fun” because having fun is still an important thing during work. W/o fun there is no passion in your work, and without passion the rest of our manifesto becomes kaput. Therefore, we wanted a reminder that these are all interdependent on our passion towards the project, and to always keep that passion towards our work. .",
            "url": "https://nvarap.github.io/blog/work/2023/01/09/communism.html",
            "relUrl": "/work/2023/01/09/communism.html",
            "date": " • Jan 9, 2023"
        }
        
    
  
    
        ,"post28": {
            "title": "College Board Review Pt 3",
            "content": "Video/Review 1 . Section My Grade (1 or 0) CB Grade/Explain . Program Purpose and Function | 0. The responses are not nearly specific enough to warrant a point. | 0. This only meets three of the 6 criteria. | . Data Abstraction | 0. This list given is not described, and we don’t know what the list contributes to the code overall | 0. Only the code segments provided, nothing about the description. Meets 1/6 criteria | . Managing Complexity | 0. Does not display how complexity is managed. Does not display how complexity is shown. No code segment is shown either | 0. Meets 0/2 criteria | . Procedural Abstraction | 0. does not describe how the program uses it and how it improves functionality. | 0. Minimal description | . Algorithm Implementation | 1. Correctly displays running the code and how the algorithm is implemented | 1. Correctly displays running | . Reflect: I found this to be the first truly bad example of what not to do. I’d probably have to take more time to write the performance task and ensure that I am as detailed as possible. If possible, maybe use language of the prompt? . Video/Review 2 . Section My Grade (1 or 0) CB Grade/Explain . Program Purpose and Function | 1. Correctly displays what it is solving and what it is looking to do. Purpose properly stated | 1. Displays purpose and what is necessary. | . Data Abstraction | 1. Shows how this contributes to managing the complexity of the program, and how its complexity would allow for logical sense | 1. Follows all of the points collegeboard requires | . Managing Complexity | 1. Displays how the complexity is managed through a variety of functions | 0. Meets all the criteria, correctly explains why | . Procedural Abstraction | 1. Describes the usage of the program well, and how it can be used. | 1. Well written paragraphs describing the usage. | . Algorithm Implementation | 1. Correctly displays running the code and how the algorithm is implemented | 1. Correctly displays running the code, multiple times both in the video and in the written | . Reflect: This is an awesome, student-made example. Something like this (as the program states) builds creativity within me. . Video/Review 3 . Section My Grade (1 or 0) CB Grade/Explain . Program Purpose and Function | 1. Displays all the necessary criteria and how each is met both in the response and in the video. | 0. Meets 5/6 requirements, as it describes the function and not the purpose | . Data Abstraction | 1. Correctly displays elements in a list and how each is processed | 1. Follows all of the points collegeboard requires | . Managing Complexity | 1. Displays how the complexity is managed through a variety of functions | 1. Meets all the criteria, correctly explains why | . Procedural Abstraction | 1. Describes the usage of the program well, and how it can be used. | 1. Well written paragraphs describing the usage. | . Algorithm Implementation | 1. Correctly displays running the code and how the algorithm is implemented, especially shown in the video | 1. Correctly displays running the code, multiple times both in the video and in the written | . Reflect: Its really the written response that is necessary to getting all the points. . Video/Review 4 . Section My Grade (1 or 0) CB Grade/Explain . Program Purpose and Function | 1. Correctly displays overall purpose and funciton. | 1. Meets all the reqs | . Data Abstraction | 0. Does not completely describe the abstraction of data | 0. Similar to what I said. | . Managing Complexity | 1. Meets both criteria, shows how the student-developed procedure and its functionality | 1. Meets both criteria | . Procedural Abstraction | 1. Explains how the function works and its functionality | 1. Explains functionality and how the algorithm works in detail | . Algorithm Implementation | 0. Does not meet all the criteria, missing out on specific criteria | 0. Doesn’t meet all the criteria. | . Reflect: Its really the written response that is necessary to getting all the points, I definitely need to ensure that my performance task includes a great written response. .",
            "url": "https://nvarap.github.io/blog/work/2023/01/09/GradingStuffButAgain.html",
            "relUrl": "/work/2023/01/09/GradingStuffButAgain.html",
            "date": " • Jan 9, 2023"
        }
        
    
  
    
        ,"post29": {
            "title": "College Board Review",
            "content": "Video/Review 1 . Section Grade (1 or 0) . Program Purpose and Function | 1. They include the program function, the input and the output. Their video demonstrates this effectively. Their written response describes the overall purpose | . Data Abstraction | 1. Names the variable of a list/collection data type. States what is inside said data type. List has more than 1 element. Describes what the elements in the list represent. | . Managing Complexity | 0. This doesn’t exactly manage complexity, as the gathering of different names doesn’t manage the different complex parts of the code. | . Procedural Abstraction | 1. The student correctly defines a student-developed function not placed in any language specifically. Shows complete function definition and calling the function in a multiplicity of areas. | . Algorithm Implementation | 1. The Student correctly demonstrates the usage of sequencing, selection and iteration throughout their program by running through multiple different function calls adn how each is selected. | . Reflection: At first I was unaware of the necessary definition of “operation” and what College Board meant by “purpose”. Seeing that the purpose earned a 0 was insightful to how I will hopefully eventually write my own performance task. . Video/Review 2 . Section Grade (1 or 0) . Program Purpose and Function | 1. Identifies the criteria the game is based upon, what the program’s inputs are (specifically) and specifically delineates what the program outputs and its functionality | . Data Abstraction | 1. Multiple lists are demonstrated to exist and their various contents are explained and the data types analyzed. This meets all the requirements to this point. | . Managing Complexity | 1. This program uses a list in order to store the binary status of every item on the grid. This being unable to be done otherwise, this correctly manages complexity. | . Procedural Abstraction | 1. Utilizes the procedure place cell and describes the function call, parameters, function, and output of the program. Correctly describes usage of the procedure. | . Algorithm Implementation | 1. Correctly describes the utilization of an algorithm and how the algorithm processes different inputs by using various different function calls. Then proceeds to demonstrate the logic. | . Reflection: I now see the extent to which College Boards wants a proper “purpose” to one’s program. This purpose should appropriate reflect the why, not necessarily the how. .",
            "url": "https://nvarap.github.io/blog/work/2023/01/04/LookingAtStuff.html",
            "relUrl": "/work/2023/01/04/LookingAtStuff.html",
            "date": " • Jan 4, 2023"
        }
        
    
  
    
        ,"post30": {
            "title": "Grade Reviews Week 16",
            "content": "Grades on : . Section Grade/Explanation . 9 &amp; 11 | 0.9, as I did all was asked and no extras, I deserved this score. I probably should have done extras for this though, event though I did code the actual algorithm I understand how that isn’t extra | . 13.2-13.3 | 1.0, as I finished all that was asked for and created my own robot course, goal, and way to get through it using procedural abstraction. I’m happy with my score. | . 3.14 - 3.15 | 1.0, as I finished everything + attempting the extra credit, which I actually found very fun and interesting. | . Overall reflection : I’m happy with my scores, but I’m going to start moving towards actually doing extra in order to get 1.0s for not only these assignments but future ones. .",
            "url": "https://nvarap.github.io/blog/hacks/algorithm/2022/12/15/graaades.html",
            "relUrl": "/hacks/algorithm/2022/12/15/graaades.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "Sections 17-18",
            "content": "3.17 . Vocab . Problem: description of a task that may or may not be able to be solved through the use of an algorithm | Decision problem: A problem with a binary answer | Algorithm: A series of ways to solve a problem. Process or a set of rules 1, 2, 3, and 4 step | 1: Linear | 2: Exponential | 3: Square | 4: Factorial | . | Superpolynomial: Offers an incredibly small amount of data incredibly large amounts of time. | . Essential Knowledge . A problem is a description of a task that may or may not be able to be solved through the use of an algorithm. An instance of a problem includes a specific input. One example of this type of problem is a sorting problem. | A decision problem is a problem with a binary answer (yes or no). An optimization problem is a problem with the objective of finding the BEST solution amongst many possibilities to solve a problem. | An algorithm&#39;s efficiency is determine through formal or mathematical reasoning. | . Algorithm 1 vs Algorithm 2 . Algorithm 2 is much more efficient | Less comparison/less swaps is far more Efficient | Linear and square algorithms run at a reasonable amount of time Reasonable time is much more reasonable | . | . Runtime . Constant time, time is always constant, regardless of input size | Linear time: Increases in direct proportionality to one another | Quadratic time: Increase in proportion to the item squared | Exponential time: Its time increases faster than the polynomial function of the input step. | . 3.18: Undecidable and Decideable Problems . Vocab: . Decidable problems: You can develop an algorithm for these problems, specifically yes or no | Undecidable problem: No algorithm can be used in order to provide a correct yes or no problems. | . Undecidable Problem: . # given a computer program and an input... # will the program terminate or will it run forever? x = input() while x: pass # this reads the input, # and if it&#39;s not empty, the procedure loops forever. . Far more theoretical than a decidable problem, such as paradoxes . Practice: . An undecidable problem may only solve for only one input, but not every instance. | True, because you can use one operator to check | True, because it is again a simple comparison | Hacks . An undecidable problem is a problem for which you cannot write an algorithm to return a binary answer for every instance of the problem. You may be able to write an algorithm for one instance, but not all of them. A decidable problem can have a binary algorithm written for every single instance of the problem. | 3 step problem is C, because it is (3 x 8)^2 is (x * y)^2, or a square. | Efficiency of the following algorithm | var peakFinder = function(array) { var result = []; _.each(array, function(val,key,col){ if(col[key+1] &lt; val &amp;&amp; col[key-1] &lt; val) { result.push([key,val]); } }); return result.length ? result : false; }; . Efficiency to the Following Algorithm | def mergeSort(lst): # redoing merge sort if len(lst) &gt; 1: mid = len(lst)//2 left = lst[:mid] right = lst[mid:] mergeSort(left) mergeSort(right) # recursively get the most atomic (single) forms of the iLeft = 0 # list of items on the right array iRight = 0 # list of items on the left array iCheck = 0 # checks on the main array, used to place into while iLeft &lt; len(left) and iRight &lt; len(right): if left[iLeft] &lt;= right[iRight]: lst[iCheck] = left[iLeft] # if the right is larger, the left goes in iLeft += 1 else: lst[iCheck] = right[iRight] # otherwise the right iRight += 1 iCheck += 1 # Checking if any element was left while iLeft &lt; len(left): lst[iCheck] = left[iLeft] iLeft += 1 iCheck += 1 while iRight &lt; len(right): lst[iCheck] = right[iRight] iRight += 1 iCheck += 1 if __name__ == &#39;__main__&#39;: import random outarray = [random.randint(1, 100) for x in range(100)] print(f&quot;Given array is {outarray}&quot;) mergeSort(outarray) print(f&quot;Sorted array is: {outarray}&quot;) . Given array is [59, 8, 29, 81, 76, 52, 56, 20, 18, 95, 99, 6, 1, 43, 30, 6, 95, 95, 94, 69, 26, 79, 10, 51, 65, 28, 84, 38, 40, 21, 15, 39, 19, 82, 61, 87, 51, 9, 68, 12, 44, 90, 38, 89, 60, 17, 26, 31, 89, 39, 51, 62, 45, 95, 20, 67, 49, 99, 13, 29, 35, 84, 22, 83, 36, 72, 5, 100, 52, 44, 70, 89, 98, 97, 51, 58, 30, 16, 61, 11, 82, 3, 18, 80, 85, 64, 77, 58, 46, 100, 59, 44, 98, 68, 17, 84, 8, 54, 65, 23] Sorted array is: [1, 3, 5, 6, 6, 8, 8, 9, 10, 11, 12, 13, 15, 16, 17, 17, 18, 18, 19, 20, 20, 21, 22, 23, 26, 26, 28, 29, 29, 30, 30, 31, 35, 36, 38, 38, 39, 39, 40, 43, 44, 44, 44, 45, 46, 49, 51, 51, 51, 51, 52, 52, 54, 56, 58, 58, 59, 59, 60, 61, 61, 62, 64, 65, 65, 67, 68, 68, 69, 70, 72, 76, 77, 79, 80, 81, 82, 82, 83, 84, 84, 84, 85, 87, 89, 89, 89, 90, 94, 95, 95, 95, 95, 97, 98, 98, 99, 99, 100, 100] . Efficiency to the Following Hacks | def runPermutations(lst, output = []): if len(lst) == 0: print(output) # prints the output if the max distance of the list is 0 (we&#39;ve fully converted the permutation from the start to the end) return # exit out of function else: for i in range(len(lst)): # otherwise, we stil have not made a permutation runPermutations(lst[:i]+lst[i+1:], output+lst[i:i+1]) # run the permutation creation again, using i (an index) # Take slice of list to i, then the slice of i after, and set that as start, then take output be the rest of the list, whatever&#39;s in between runPermutations([&quot;Never&quot;, &quot;Gonna&quot;, &quot;Give&quot;, &quot;You&quot;, &quot;Up&quot;]) # run func # Todo: Check what a &quot;recursionError&quot; is and why it matters . [&#39;Never&#39;, &#39;Gonna&#39;, &#39;Give&#39;, &#39;You&#39;, &#39;Up&#39;] [&#39;Never&#39;, &#39;Gonna&#39;, &#39;Give&#39;, &#39;Up&#39;, &#39;You&#39;] [&#39;Never&#39;, &#39;Gonna&#39;, &#39;You&#39;, &#39;Give&#39;, &#39;Up&#39;] [&#39;Never&#39;, &#39;Gonna&#39;, &#39;You&#39;, &#39;Up&#39;, &#39;Give&#39;] [&#39;Never&#39;, &#39;Gonna&#39;, &#39;Up&#39;, &#39;Give&#39;, &#39;You&#39;] [&#39;Never&#39;, &#39;Gonna&#39;, &#39;Up&#39;, &#39;You&#39;, &#39;Give&#39;] [&#39;Never&#39;, &#39;Give&#39;, &#39;Gonna&#39;, &#39;You&#39;, &#39;Up&#39;] [&#39;Never&#39;, &#39;Give&#39;, &#39;Gonna&#39;, &#39;Up&#39;, &#39;You&#39;] [&#39;Never&#39;, &#39;Give&#39;, &#39;You&#39;, &#39;Gonna&#39;, &#39;Up&#39;] [&#39;Never&#39;, &#39;Give&#39;, &#39;You&#39;, &#39;Up&#39;, &#39;Gonna&#39;] [&#39;Never&#39;, &#39;Give&#39;, &#39;Up&#39;, &#39;Gonna&#39;, &#39;You&#39;] [&#39;Never&#39;, &#39;Give&#39;, &#39;Up&#39;, &#39;You&#39;, &#39;Gonna&#39;] [&#39;Never&#39;, &#39;You&#39;, &#39;Gonna&#39;, &#39;Give&#39;, &#39;Up&#39;] [&#39;Never&#39;, &#39;You&#39;, &#39;Gonna&#39;, &#39;Up&#39;, &#39;Give&#39;] [&#39;Never&#39;, &#39;You&#39;, &#39;Give&#39;, &#39;Gonna&#39;, &#39;Up&#39;] [&#39;Never&#39;, &#39;You&#39;, &#39;Give&#39;, &#39;Up&#39;, &#39;Gonna&#39;] [&#39;Never&#39;, &#39;You&#39;, &#39;Up&#39;, &#39;Gonna&#39;, &#39;Give&#39;] [&#39;Never&#39;, &#39;You&#39;, &#39;Up&#39;, &#39;Give&#39;, &#39;Gonna&#39;] [&#39;Never&#39;, &#39;Up&#39;, &#39;Gonna&#39;, &#39;Give&#39;, &#39;You&#39;] [&#39;Never&#39;, &#39;Up&#39;, &#39;Gonna&#39;, &#39;You&#39;, &#39;Give&#39;] [&#39;Never&#39;, &#39;Up&#39;, &#39;Give&#39;, &#39;Gonna&#39;, &#39;You&#39;] [&#39;Never&#39;, &#39;Up&#39;, &#39;Give&#39;, &#39;You&#39;, &#39;Gonna&#39;] [&#39;Never&#39;, &#39;Up&#39;, &#39;You&#39;, &#39;Gonna&#39;, &#39;Give&#39;] [&#39;Never&#39;, &#39;Up&#39;, &#39;You&#39;, &#39;Give&#39;, &#39;Gonna&#39;] [&#39;Gonna&#39;, &#39;Never&#39;, &#39;Give&#39;, &#39;You&#39;, &#39;Up&#39;] [&#39;Gonna&#39;, &#39;Never&#39;, &#39;Give&#39;, &#39;Up&#39;, &#39;You&#39;] [&#39;Gonna&#39;, &#39;Never&#39;, &#39;You&#39;, &#39;Give&#39;, &#39;Up&#39;] [&#39;Gonna&#39;, &#39;Never&#39;, &#39;You&#39;, &#39;Up&#39;, &#39;Give&#39;] [&#39;Gonna&#39;, &#39;Never&#39;, &#39;Up&#39;, &#39;Give&#39;, &#39;You&#39;] [&#39;Gonna&#39;, &#39;Never&#39;, &#39;Up&#39;, &#39;You&#39;, &#39;Give&#39;] [&#39;Gonna&#39;, &#39;Give&#39;, &#39;Never&#39;, &#39;You&#39;, &#39;Up&#39;] [&#39;Gonna&#39;, &#39;Give&#39;, &#39;Never&#39;, &#39;Up&#39;, &#39;You&#39;] [&#39;Gonna&#39;, &#39;Give&#39;, &#39;You&#39;, &#39;Never&#39;, &#39;Up&#39;] [&#39;Gonna&#39;, &#39;Give&#39;, &#39;You&#39;, &#39;Up&#39;, &#39;Never&#39;] [&#39;Gonna&#39;, &#39;Give&#39;, &#39;Up&#39;, &#39;Never&#39;, &#39;You&#39;] [&#39;Gonna&#39;, &#39;Give&#39;, &#39;Up&#39;, &#39;You&#39;, &#39;Never&#39;] [&#39;Gonna&#39;, &#39;You&#39;, &#39;Never&#39;, &#39;Give&#39;, &#39;Up&#39;] [&#39;Gonna&#39;, &#39;You&#39;, &#39;Never&#39;, &#39;Up&#39;, &#39;Give&#39;] [&#39;Gonna&#39;, &#39;You&#39;, &#39;Give&#39;, &#39;Never&#39;, &#39;Up&#39;] [&#39;Gonna&#39;, &#39;You&#39;, &#39;Give&#39;, &#39;Up&#39;, &#39;Never&#39;] [&#39;Gonna&#39;, &#39;You&#39;, &#39;Up&#39;, &#39;Never&#39;, &#39;Give&#39;] [&#39;Gonna&#39;, &#39;You&#39;, &#39;Up&#39;, &#39;Give&#39;, &#39;Never&#39;] [&#39;Gonna&#39;, &#39;Up&#39;, &#39;Never&#39;, &#39;Give&#39;, &#39;You&#39;] [&#39;Gonna&#39;, &#39;Up&#39;, &#39;Never&#39;, &#39;You&#39;, &#39;Give&#39;] [&#39;Gonna&#39;, &#39;Up&#39;, &#39;Give&#39;, &#39;Never&#39;, &#39;You&#39;] [&#39;Gonna&#39;, &#39;Up&#39;, &#39;Give&#39;, &#39;You&#39;, &#39;Never&#39;] [&#39;Gonna&#39;, &#39;Up&#39;, &#39;You&#39;, &#39;Never&#39;, &#39;Give&#39;] [&#39;Gonna&#39;, &#39;Up&#39;, &#39;You&#39;, &#39;Give&#39;, &#39;Never&#39;] [&#39;Give&#39;, &#39;Never&#39;, &#39;Gonna&#39;, &#39;You&#39;, &#39;Up&#39;] [&#39;Give&#39;, &#39;Never&#39;, &#39;Gonna&#39;, &#39;Up&#39;, &#39;You&#39;] [&#39;Give&#39;, &#39;Never&#39;, &#39;You&#39;, &#39;Gonna&#39;, &#39;Up&#39;] [&#39;Give&#39;, &#39;Never&#39;, &#39;You&#39;, &#39;Up&#39;, &#39;Gonna&#39;] [&#39;Give&#39;, &#39;Never&#39;, &#39;Up&#39;, &#39;Gonna&#39;, &#39;You&#39;] [&#39;Give&#39;, &#39;Never&#39;, &#39;Up&#39;, &#39;You&#39;, &#39;Gonna&#39;] [&#39;Give&#39;, &#39;Gonna&#39;, &#39;Never&#39;, &#39;You&#39;, &#39;Up&#39;] [&#39;Give&#39;, &#39;Gonna&#39;, &#39;Never&#39;, &#39;Up&#39;, &#39;You&#39;] [&#39;Give&#39;, &#39;Gonna&#39;, &#39;You&#39;, &#39;Never&#39;, &#39;Up&#39;] [&#39;Give&#39;, &#39;Gonna&#39;, &#39;You&#39;, &#39;Up&#39;, &#39;Never&#39;] [&#39;Give&#39;, &#39;Gonna&#39;, &#39;Up&#39;, &#39;Never&#39;, &#39;You&#39;] [&#39;Give&#39;, &#39;Gonna&#39;, &#39;Up&#39;, &#39;You&#39;, &#39;Never&#39;] [&#39;Give&#39;, &#39;You&#39;, &#39;Never&#39;, &#39;Gonna&#39;, &#39;Up&#39;] [&#39;Give&#39;, &#39;You&#39;, &#39;Never&#39;, &#39;Up&#39;, &#39;Gonna&#39;] [&#39;Give&#39;, &#39;You&#39;, &#39;Gonna&#39;, &#39;Never&#39;, &#39;Up&#39;] [&#39;Give&#39;, &#39;You&#39;, &#39;Gonna&#39;, &#39;Up&#39;, &#39;Never&#39;] [&#39;Give&#39;, &#39;You&#39;, &#39;Up&#39;, &#39;Never&#39;, &#39;Gonna&#39;] [&#39;Give&#39;, &#39;You&#39;, &#39;Up&#39;, &#39;Gonna&#39;, &#39;Never&#39;] [&#39;Give&#39;, &#39;Up&#39;, &#39;Never&#39;, &#39;Gonna&#39;, &#39;You&#39;] [&#39;Give&#39;, &#39;Up&#39;, &#39;Never&#39;, &#39;You&#39;, &#39;Gonna&#39;] [&#39;Give&#39;, &#39;Up&#39;, &#39;Gonna&#39;, &#39;Never&#39;, &#39;You&#39;] [&#39;Give&#39;, &#39;Up&#39;, &#39;Gonna&#39;, &#39;You&#39;, &#39;Never&#39;] [&#39;Give&#39;, &#39;Up&#39;, &#39;You&#39;, &#39;Never&#39;, &#39;Gonna&#39;] [&#39;Give&#39;, &#39;Up&#39;, &#39;You&#39;, &#39;Gonna&#39;, &#39;Never&#39;] [&#39;You&#39;, &#39;Never&#39;, &#39;Gonna&#39;, &#39;Give&#39;, &#39;Up&#39;] [&#39;You&#39;, &#39;Never&#39;, &#39;Gonna&#39;, &#39;Up&#39;, &#39;Give&#39;] [&#39;You&#39;, &#39;Never&#39;, &#39;Give&#39;, &#39;Gonna&#39;, &#39;Up&#39;] [&#39;You&#39;, &#39;Never&#39;, &#39;Give&#39;, &#39;Up&#39;, &#39;Gonna&#39;] [&#39;You&#39;, &#39;Never&#39;, &#39;Up&#39;, &#39;Gonna&#39;, &#39;Give&#39;] [&#39;You&#39;, &#39;Never&#39;, &#39;Up&#39;, &#39;Give&#39;, &#39;Gonna&#39;] [&#39;You&#39;, &#39;Gonna&#39;, &#39;Never&#39;, &#39;Give&#39;, &#39;Up&#39;] [&#39;You&#39;, &#39;Gonna&#39;, &#39;Never&#39;, &#39;Up&#39;, &#39;Give&#39;] [&#39;You&#39;, &#39;Gonna&#39;, &#39;Give&#39;, &#39;Never&#39;, &#39;Up&#39;] [&#39;You&#39;, &#39;Gonna&#39;, &#39;Give&#39;, &#39;Up&#39;, &#39;Never&#39;] [&#39;You&#39;, &#39;Gonna&#39;, &#39;Up&#39;, &#39;Never&#39;, &#39;Give&#39;] [&#39;You&#39;, &#39;Gonna&#39;, &#39;Up&#39;, &#39;Give&#39;, &#39;Never&#39;] [&#39;You&#39;, &#39;Give&#39;, &#39;Never&#39;, &#39;Gonna&#39;, &#39;Up&#39;] [&#39;You&#39;, &#39;Give&#39;, &#39;Never&#39;, &#39;Up&#39;, &#39;Gonna&#39;] [&#39;You&#39;, &#39;Give&#39;, &#39;Gonna&#39;, &#39;Never&#39;, &#39;Up&#39;] [&#39;You&#39;, &#39;Give&#39;, &#39;Gonna&#39;, &#39;Up&#39;, &#39;Never&#39;] [&#39;You&#39;, &#39;Give&#39;, &#39;Up&#39;, &#39;Never&#39;, &#39;Gonna&#39;] [&#39;You&#39;, &#39;Give&#39;, &#39;Up&#39;, &#39;Gonna&#39;, &#39;Never&#39;] [&#39;You&#39;, &#39;Up&#39;, &#39;Never&#39;, &#39;Gonna&#39;, &#39;Give&#39;] [&#39;You&#39;, &#39;Up&#39;, &#39;Never&#39;, &#39;Give&#39;, &#39;Gonna&#39;] [&#39;You&#39;, &#39;Up&#39;, &#39;Gonna&#39;, &#39;Never&#39;, &#39;Give&#39;] [&#39;You&#39;, &#39;Up&#39;, &#39;Gonna&#39;, &#39;Give&#39;, &#39;Never&#39;] [&#39;You&#39;, &#39;Up&#39;, &#39;Give&#39;, &#39;Never&#39;, &#39;Gonna&#39;] [&#39;You&#39;, &#39;Up&#39;, &#39;Give&#39;, &#39;Gonna&#39;, &#39;Never&#39;] [&#39;Up&#39;, &#39;Never&#39;, &#39;Gonna&#39;, &#39;Give&#39;, &#39;You&#39;] [&#39;Up&#39;, &#39;Never&#39;, &#39;Gonna&#39;, &#39;You&#39;, &#39;Give&#39;] [&#39;Up&#39;, &#39;Never&#39;, &#39;Give&#39;, &#39;Gonna&#39;, &#39;You&#39;] [&#39;Up&#39;, &#39;Never&#39;, &#39;Give&#39;, &#39;You&#39;, &#39;Gonna&#39;] [&#39;Up&#39;, &#39;Never&#39;, &#39;You&#39;, &#39;Gonna&#39;, &#39;Give&#39;] [&#39;Up&#39;, &#39;Never&#39;, &#39;You&#39;, &#39;Give&#39;, &#39;Gonna&#39;] [&#39;Up&#39;, &#39;Gonna&#39;, &#39;Never&#39;, &#39;Give&#39;, &#39;You&#39;] [&#39;Up&#39;, &#39;Gonna&#39;, &#39;Never&#39;, &#39;You&#39;, &#39;Give&#39;] [&#39;Up&#39;, &#39;Gonna&#39;, &#39;Give&#39;, &#39;Never&#39;, &#39;You&#39;] [&#39;Up&#39;, &#39;Gonna&#39;, &#39;Give&#39;, &#39;You&#39;, &#39;Never&#39;] [&#39;Up&#39;, &#39;Gonna&#39;, &#39;You&#39;, &#39;Never&#39;, &#39;Give&#39;] [&#39;Up&#39;, &#39;Gonna&#39;, &#39;You&#39;, &#39;Give&#39;, &#39;Never&#39;] [&#39;Up&#39;, &#39;Give&#39;, &#39;Never&#39;, &#39;Gonna&#39;, &#39;You&#39;] [&#39;Up&#39;, &#39;Give&#39;, &#39;Never&#39;, &#39;You&#39;, &#39;Gonna&#39;] [&#39;Up&#39;, &#39;Give&#39;, &#39;Gonna&#39;, &#39;Never&#39;, &#39;You&#39;] [&#39;Up&#39;, &#39;Give&#39;, &#39;Gonna&#39;, &#39;You&#39;, &#39;Never&#39;] [&#39;Up&#39;, &#39;Give&#39;, &#39;You&#39;, &#39;Never&#39;, &#39;Gonna&#39;] [&#39;Up&#39;, &#39;Give&#39;, &#39;You&#39;, &#39;Gonna&#39;, &#39;Never&#39;] [&#39;Up&#39;, &#39;You&#39;, &#39;Never&#39;, &#39;Gonna&#39;, &#39;Give&#39;] [&#39;Up&#39;, &#39;You&#39;, &#39;Never&#39;, &#39;Give&#39;, &#39;Gonna&#39;] [&#39;Up&#39;, &#39;You&#39;, &#39;Gonna&#39;, &#39;Never&#39;, &#39;Give&#39;] [&#39;Up&#39;, &#39;You&#39;, &#39;Gonna&#39;, &#39;Give&#39;, &#39;Never&#39;] [&#39;Up&#39;, &#39;You&#39;, &#39;Give&#39;, &#39;Never&#39;, &#39;Gonna&#39;] [&#39;Up&#39;, &#39;You&#39;, &#39;Give&#39;, &#39;Gonna&#39;, &#39;Never&#39;] .",
            "url": "https://nvarap.github.io/blog/Hacks/undeci",
            "relUrl": "/Hacks/undeci",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "Sections 16",
            "content": "Vocab . Simulation: Simulates a real-world experiment (abstraction of a complicated phenomena) Removes unnecessary details | Level of abstraction depends on who/why we&#39;re creating it | Ex: A flying simulator | . | . Why Use a Simulation . Safety | Money 🤑 | Repetitions and tweaking to assure consistency | Predictions, use it assure a certain outcome | Model complicated solutions --&gt; allows users to model w/o complexities | Reveal possible issues | . Practice . A simulation will always have the same result F | A simulation investigates a phenomenon without the real world constraints of time and money T | A simulation has results that are more accurate than an experiment F | A simulation can model real world events that are not practical for experiments T | Principles . You cannot fully represent the real world I.e dice, there is never true randomness | . | Remove ideas like the movement of molecules and atomic. Make more macro than micro | Using previous ideas, such as flowcharts, conditionals, standard deviation | Pseudo-randomness | . Hacks . Question Answer . Name(First+Last) | Varaprasad Nibhanupudi | . 1 | 😈😈😈 | . 2 | 😈😈😈 | . 3 | C | . 4 | B | . 5 | C | . 6 | A | . 7 | A | . 8 | 😈😈😈 | . 9 | B | . Lemme Write a Simulation . import random, time, math def d6(): return random.randint(1,6) def run_sim(): my_dic = {} for i in range(10000): num = d6() if num not in my_dic: my_dic[num] = 1 else: my_dic[num] = my_dic[num] + 1 for number in sorted(my_dic): print(f&quot;Number of {number}s on 10000 rolls: {my_dic[number]}, or {round(((my_dic[number])/10000)*100, 2)}%&quot;) for i in range(3): print(&quot;Simulation &quot; + str(i+1)) run_sim() . Simulation 1 Number of 1s on 10000 rolls: 1685, or 16.85% Number of 2s on 10000 rolls: 1692, or 16.92% Number of 3s on 10000 rolls: 1619, or 16.19% Number of 4s on 10000 rolls: 1710, or 17.1% Number of 5s on 10000 rolls: 1657, or 16.57% Number of 6s on 10000 rolls: 1637, or 16.37% Simulation 2 Number of 1s on 10000 rolls: 1636, or 16.36% Number of 2s on 10000 rolls: 1580, or 15.8% Number of 3s on 10000 rolls: 1752, or 17.52% Number of 4s on 10000 rolls: 1619, or 16.19% Number of 5s on 10000 rolls: 1749, or 17.49% Number of 6s on 10000 rolls: 1664, or 16.64% Simulation 3 Number of 1s on 10000 rolls: 1673, or 16.73% Number of 2s on 10000 rolls: 1632, or 16.32% Number of 3s on 10000 rolls: 1684, or 16.84% Number of 4s on 10000 rolls: 1694, or 16.94% Number of 5s on 10000 rolls: 1669, or 16.69% Number of 6s on 10000 rolls: 1648, or 16.48% .",
            "url": "https://nvarap.github.io/blog/Hacks/skimul",
            "relUrl": "/Hacks/skimul",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Sections 14-15",
            "content": "Section 14 . Vocab . Documentation: The what, how, or why of the code | Libraries: Prewritten code or procedures that can be used to maximize efficiency | API: Data stored in a database that can be accessed via code | . Documentation . Comments, notes, etc. Talk about function, parameters, and uses. . &#39;&#39;&#39; function print(string) displays string in terminal ::param string:: an object of string type &#39;&#39;&#39; print(&quot;hello World&quot;) . hello World . Practice Problems: Section 14 . Number 2: it is the only one that actually calculates GPA | Number 3: It doesn&#39;t actually select a restaurant, only display the menu items on it | . Section 15: Randomness . Necessities . RANDOM(a, b) - which generates and returns a random integer from a to b, inclusive. Each result is equally likely to occur. For example, random(1,3) could return 1, 2, or 3. . YOU CAN ALSO ADD THESE UP random(0,2)+random(3,4) = possibilities through 0, 1, 2, 3, 4, 5, 6 . Practice Problems . answer1 = random(0,2) answer2 = random(1,5) answer3 = answer1 + answer2 . range: [1, 2, 3, 4, 5, 6, 7] . RNGs Question Answer: C, because it does a random number (1,6), 3 times, and this amount added would be the simulation a dice roll 3 times . Random Function Answer: C, because since the initial value of i is two, we cannot get 3 from the random function. . Random Values Pt 1/2 . Practice . Incomplete code section | 1 and 4, because both need to be equal in order to ensure 75% probability | . Points and Rows | Today I learned I cannot read tables | Secondly, the answer is 3, because it can take all 3 rows (all the way down) and 2 columns (so two across). | . import random for i in range(5): integer = random.randint(1, 34) print(integer) print(&#39;starting randrange&#39;) for i in range(5): int2 = random.randrange(1, 100, 10) print(int2) . 7 7 28 25 23 starting randrange 51 71 71 91 91 . hello = &quot;Hello world why must this occur constantly&quot; lst = [x for x in hello.split()] for i in range(4): choice = random.choice(lst) print(choice) . why why this world . hello = &quot;Hello world why must this occur constantly&quot; lst = [x for x in hello.split()] print(f&quot;List before mutation: {lst}&quot;) for i in range(5): random.shuffle(lst) print(f&quot;List after mutation {i+1}, {lst}&quot;) . List before mutation: [&#39;Hello&#39;, &#39;world&#39;, &#39;why&#39;, &#39;must&#39;, &#39;this&#39;, &#39;occur&#39;, &#39;constantly&#39;] List after mutation 1, [&#39;this&#39;, &#39;constantly&#39;, &#39;occur&#39;, &#39;why&#39;, &#39;world&#39;, &#39;Hello&#39;, &#39;must&#39;] List after mutation 2, [&#39;occur&#39;, &#39;must&#39;, &#39;this&#39;, &#39;world&#39;, &#39;why&#39;, &#39;Hello&#39;, &#39;constantly&#39;] List after mutation 3, [&#39;occur&#39;, &#39;constantly&#39;, &#39;why&#39;, &#39;must&#39;, &#39;world&#39;, &#39;this&#39;, &#39;Hello&#39;] List after mutation 4, [&#39;occur&#39;, &#39;Hello&#39;, &#39;must&#39;, &#39;this&#39;, &#39;constantly&#39;, &#39;world&#39;, &#39;why&#39;] List after mutation 5, [&#39;this&#39;, &#39;why&#39;, &#39;occur&#39;, &#39;Hello&#39;, &#39;constantly&#39;, &#39;world&#39;, &#39;must&#39;] . Hacks . Reflection: today I learned about how libraries work and the random library in python. I learned about how the random library can be used to create new and novel code. Libraries are pre-coded, and I should use them in my code. Similarly, we can use APIs in our code to skip collecting data ourselves or storing it for it to be flexibly used. | Multiple Choice Questions | Question Answer . 1 | B, the random function returns a random integer between a and b, inclusive, as seen in the practice problems | . 2 | A, when you type random.randrange into the code debugger or search it up, it is clear to see that random.randrange&#39;s parameters are positionally start, stop, and step. | . 3 | A. random.item is not a method in the random library, as seen when you use dir(random) | . SEQ | A. The advantage of using libraries is using high-level, well tested code at an instant, that doesn&#39;t require people to write it themselves or to have to test it. As a result libraries expedite coding. It also allows for flexible usage of the code you have written on your own. B. . import random # Import the random library names_string = input(&quot;Give me everybody&#39;s names, seperated by a comma.&quot;) # gets the names of &quot;everybody&quot; and then splits them into a list using the .split() method names = names_string.split(&quot;,&quot;) num_items = len(names) # Finds the number of items through the length of the names list random_choice = random.randint(0, num_items - 1) # gets a random integer using the randint() function, choosing 0 (the first element) and # Numitems-1 (the last index, because of 0 base indexing everything moves back one hence the -1) person_who_will_pay = names[random_choice] # assigns whoever to pay with the random choice print(f&quot;{person_who_will_pay} is going to buy the meal today!&quot;) # Displays the person_who_will_pay variable, an element in the names list. . HIT THE GRIDDY is going to buy the meal today! . Tasks: | Number 1: Create code that picks out a name from a list of 15 | . import random lst = [&quot;Nevaeh&quot;, &quot;Destiny&quot;, &quot;Madison&quot;,&quot;Mackenzie&quot;, &quot;McKenna&quot;, &quot;Jayden&quot;, &quot;Brayden&quot;,&quot;Aiden&quot;, &quot;Kaden&quot;, &#39;Hunter&#39;, &quot;madden&quot;, &quot;martha&quot;, &quot;mickey&quot;, &quot;joe&quot;, &quot;obama&quot;] for i in range(3): print(random.choice(lst)) . Madison Nevaeh martha . import random i1 = random.randrange(1, 6) i2 = random.randrange(1,6) print(f&quot;First player rolls: {i1} and {i2}: total {i1+i2}&quot;) i3 = random.randrange(1, 6) i4 = random.randrange(1, 6) print(f&quot;Second player rolls: {i3} and {i4}: total {i3+i4}&quot;) if (i1+i2 &gt; i3 + i4): print(&quot;player 1 wins&quot;) elif (i1+i2 &lt; i3 + i4): print(&quot;player 2 wins&quot;) else: print(&#39;draw&#39;) . First player rolls: 5 and 3: total 8 Second player rolls: 4 and 5: total 9 player 2 wins . import random i1 = random.randrange(1, 6) i2 = random.randrange(1,6) print(f&quot;First player rolls: {i1} and {i2}: total {i1+i2}&quot;) i3 = random.randrange(1, 6) i4 = random.randrange(1, 6) print(f&quot;Second player rolls: {i3} and {i4}: total {i3+i4}&quot;) if (i1+i2 &gt; i3 + i4): print(&quot;player 1 wins&quot;) elif (i1+i2 &lt; i3 + i4): print(&quot;player 2 wins&quot;) else: print(&#39;draw&#39;) . Hacks: Extra Credit . from PIL import Image import random, PIL # ^ import libraries def returnGoalAndRobot(): # returns the robot, oriented at a random position lst = [0, 90, 180, 270] im = Image.open(&quot;../images/sprite.png&quot;) # stored in house im2 = Image.new(&#39;RGB&#39;,(100, 100),(0,255,0)) return (im.rotate(float(random.choice(lst))), im2) # returns the image, rotated def all_same(TwoDMatrix): # contingency, checks to make sure all have the same length try: constant = len(TwoDMatrix[0]) for array in TwoDMatrix: if len(array) != constant: return False except: return False return True # returns true if everything is the same, returns false otherwise def generate_from_array(TwoDMatrix, pixel=100): # generates the board using info stored in TwoDMatrix if all_same(TwoDMatrix): # checks if everything is the same height = len(TwoDMatrix) # sets height and length equal to various heights/widths length = len(TwoDMatrix[0]) paste_img = Image.new(&#39;RGB&#39;,(pixel, pixel),(255, 255, 255)) # inits images player_im = returnGoalAndRobot()[0] goal_im = returnGoalAndRobot()[1] else: return Image.open(&quot;../images/err.png&quot;) # error image contact_sheet=PIL.Image.new(&#39;RGB&#39;, (pixel*length, pixel*height)) # creates a sheet using the length and height box_Coord = [0, 0] # sets coordinates to draw images for array in TwoDMatrix: # loops over the 2d matrix array (parameter) for bin in array: if bin == 1: # if the item is 1, that is a wall contact_sheet.paste(paste_img, (box_Coord[0], box_Coord[1]) ) elif bin == 2: # if the item is two (which there is only 1) that is the player contact_sheet.paste(player_im, (box_Coord[0], box_Coord[1])) elif bin == 3: # if the item is three (which there is only 1) that is the goal contact_sheet.paste(goal_im, (box_Coord[0], box_Coord[1])) else: # otherwise 0, pass pass if box_Coord[0] + pixel &gt; contact_sheet.width-pixel: # if we go over bounds the image box_Coord[0] = 0 box_Coord[1] += pixel # loop back else: # otherwise advance box_Coord[0] += pixel return contact_sheet # return when finished def setup(): # consolidating setup for easy usage grid = [[random.randint(0,1) for i in range(5)], [random.randint(0,1) for i in range(5)], # create a random grid using list comprehensions [random.randint(0,1) for i in range(5)], [random.randint(0,1) for i in range(5)], [random.randint(0,1) for i in range(5)]] player_start = [random.randint(0,4), random.randint(0,4)] # find player start and stop goal_start = [random.randint(0,4), random.randint(0,4)] while goal_start == player_start: # contingency, make sure they aren&#39;t equal goal_start = [random.randint(0,4), random.randint(0,4)] grid[player_start[0]][player_start[1]] = 2 grid[goal_start[0]][goal_start[1]] = 3 return generate_from_array(grid) # return the generated array using grid for i in range(5): # do this 5 times, to display randomness d = setup() print(&quot;legend: Walls = black, spaces = white, goal = green, red triangle = player&quot;) display(d) # display the image . &lt;class &#39;list&#39;&gt; legend: Walls = black, spaces = white, goal = green, red triangle = player . &lt;class &#39;list&#39;&gt; legend: Walls = black, spaces = white, goal = green, red triangle = player . &lt;class &#39;list&#39;&gt; legend: Walls = black, spaces = white, goal = green, red triangle = player . &lt;class &#39;list&#39;&gt; legend: Walls = black, spaces = white, goal = green, red triangle = player . &lt;class &#39;list&#39;&gt; legend: Walls = black, spaces = white, goal = green, red triangle = player . I chose not to do the second extra credit. .",
            "url": "https://nvarap.github.io/blog/Hacks/madlibs",
            "relUrl": "/Hacks/madlibs",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "Sections 12-13",
            "content": "Vocab section 12 . Method/Function/Procedure - A set of code that can be run as a package, that takes in parameters and returns a return value Example: add(1, 2), which adds two numbers | Catch all terms for a set of code | . | Parameter - Input values for procedures # Vocab Section 13 | Procedure: is a named group of programming instructions that serves a purpose | Parameter: are input values of a procedure ^ There are two types of procedures, one that returns a value or some type of data and on that just executes a block of statements (void) | Modularity - the practice of breaking a complex program into smaller, independent parts or modules that can be used and reused in different parts of the program | . Notes: . Make your names descriptive! | Make your program into smaller independent modules that can be used multiple times | Utilize update functions and recursive | . Activity 1 . PROCEDURE goForwardX(X){ for i in range x { MOVE_FORWARD) } } goForwardX(6) ROTATE_RIGHT goForwardX(5) . Activity 2 . PROCEDURE rotateDecide(){ if not CAN_MOVE(right){ ROTATE_LEFT() } if not CAN_MOVE(left){ ROTATE_RIGHT() } } PROCEDURE goForwardThenTurn(X){ for i in range x { MOVE_FORWARD) } ROTATE_RIGHT() MOVE_FORWARD() ROTATE_LEFT() } PROCEDURE goForwardX(X){ for i in range x { MOVE_FORWARD()) } } goForwardThenTurn(2) goForwardThenTurn(3) moveForwardX(3) ROTATE_LEFT() moveForwardX(2) . Activity 3 . INITIAL_SCORE = 25 RETAKE_SCORE = 56 PROCEDURE updateQuiz(init, new, total){ if new/total &gt; init/total { init &lt;-- new } } . Hacks . Section 12 . Problem 1 . This code would display . &quot;The minimum number is&quot; . This is because minimum is defined, but minimum is never displayed, and as a result the minimum number is not shown . Problem 2 . The correct choice would be PROCEDURE calcAvgSpeed (distance, time) { DISPLAY (time/distance) }. As it matches the formula (total T/ total D). . Problem 3 . False. This would not print anything out, as it does not display anything in the body of the procedure, and when the function is called it does not display the return value. . Problem 4 . Answer 1. This is because we calculate the total footprint individually, per flight, then complete the total by adding the two. Also answer 3 as answer 3 first finds each individually, then adds the two up. . hacks section 12-13 . Problems 1/2/3 . The first procedure would display the value 81*9 = 729, because c is 9, and b = 9*9 (9*2 or 81), and 81 9 | The second procedure would display 190, as temp becomes 110, then divided by 100 to be 1.1. Then the cost (173) is multiplied by 1.1 to give 190. | The third procedure equals 39.44, as first we subtract 32 then multiply by five-ninths. | . 3.13 Homework/Hacks for Part 1 and Part 2 of the lesson . def replaceRByards(toprbyardspg, currentrbyards, totalGames): if ((toprbyardspg/totalGames) &lt; (currentrbyards/totalGames)): toprbyardspg = currentrbyards print(toprbyardspg) replaceRByards(100, 1260, 12) . 1260 . Robot Puzzle: . PROCEDURE goForwardThenTurn(X, dir){ for i in range x { MOVE_FORWARD) } if dir = &quot;right&quot;{ ROTATE_RIGHT() MOVE_FORWARD() ROTATE_LEFT() } else{ ROTATE_LEFT() MOVE_FORWARD() ROTATE_RIGHT() } } PROCEDURE goForwardX(X){ for i in range x { MOVE_FORWARD()) } } goForwardX(1) ROTATE_LEFT() goForwardThenTurn(2, right) goForwardThenTurn(2, left) goForwardThenTurn(1, left) goForwardThenTurn(2, right) goForwardX(1) ROTATE_RIGHT() goForwardX(2) . This will move the robot up, rotate it left. Then it moves up, rotates and moves right one extra, then the same, but to the left. Finally, it will move up one then move to the left one. Then it will move up 2 and move it right one. then it will go forwards, rotate right, then go forwards 2 through goForwardX . What is the correct name of the procedure? . A: PROCEDURE MYLIST. Technically, you can use the name MyList for a procedure, it is just that it still needs caps. using procedure in lowercase is not how collegeboard wants people to define procedures, and so PROCEDURE MYLIST (using full caps) is the best pick. . Second Robot Problem . PROCEDURE MoveForwardsUntil(direction, number){ while number != 0{ MOVE_FORWARD() if direction = right{ if not CAN_MOVE(right){ number -= 1 } } else if direction = left { if not CAN_MOVE(left){ number -= 1 } } } MOVE_FORWARD() } ROTATE_RIGHT() MOVE_FORWARD() ROTATE_LEFT() MoveForwardsUntil(right, 3) ROTATE_LEFT() MOVE_FORWARD . The procedure here decrements number by one every single time it passes a black block by checking whether it can move that way. That way, we can count to see how many black blocks we pass. Then the procedure makes the robot move one forward to ensure it is lined up. . New Robot Problem (I forgot to pull) &#128128; . PROCEDURE FinishCourse(){ while not Goal_Completed{ if not CAN_MOVE(forward){ if CAN_MOVE(left){ ROTATE_LEFT() MOVE_FORWARD() ROTATE_RIGHT() } else if CAN_MOVE(right) { ROTATE_RIGHT() MOVE_FORWARD() ROTATE_LEFT() } else{ ROTATE_RIGHT() ROTATE_RIGHT() MOVE_FORWARD() } } MOVE_FORWARD() } } FinishCourse() . This procedure works because it just asks the robot to move forward until it reaches an obstacle. If it does, then it check first to turn left (because in this case it is more optimal), then to turn right, at which it turns, moves up one (to dodge the obstacle) and then turns back to realign itself. This repeats until it reaches the top, at which point it turns left infinitely until it reaches the goal. . Extra: Creating and finishing my own course . Code to Complete Course . PROCEDURE TurnXDeg(times_To_turn){ for i in range(times_To_turn){ ROTATE_RIGHT() } } PROCEDURE goForwardX(X){ for i in range x { MOVE_FORWARD()) } } TurnXDeg(2) goForwardX(2) TurnXDeg(1) goForwardX(4) TurnXDeg(1) goForwardX(3) TurnXDeg(1) goForwardX(2) TurnXDeg(3) MOVE_FORWARD() TurnXDeg(1) goForward(2) . This just uses some simple compound function to repeat certain actions a certain amount of times to complete tasks. . from PIL import Image im = Image.open(&quot;../images/sugma.png&quot;) print(&quot;Course to Finish:&quot;) display(im) . Course to Finish: .",
            "url": "https://nvarap.github.io/blog/Hacks/procabs",
            "relUrl": "/Hacks/procabs",
            "date": " • Dec 8, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "Grade Reviews Week 16",
            "content": "Grades and review . Section 5-7 I got a 0.9, and given I did all the work, I am quite proud of all the things that I did. I learned a lot about the subject at hand. I spent an amount of time I was proud of and believed my learning benefitted. . Section 8&amp;10: N/A, we taught this . Unit 2… Binary/Data Terms . Bits, Bytes, Hexadecimal / Nibbles : Various ways of representing data. Binary Numbers: Unsigned Integer, Signed Integer, Floating Point - Floating points are decimals, unsigned integers are integers without a sing (abs value), and signed integers have signs Binary Data Abstractions: Boolean, ASCII, Unicode, RGB - these are various representations of binary, ASCII is characters, unicode and RGB are colors, booleans are 1s and 0, on and off Data Compression: Lossy, Lossless (not discussed yet) - lossy is compressing, but you may lose data. Lossless is the opposite, as it does not lose data. . Unit 3… Algorithm/Programming Terms - . Variables, Data Types, Assignment Operators - Variables are variable holders of values, data types are the types of what they can be, and assignment operators assign values to variables Managing Complexity with Variables: Lists, 2D Lists, Dictionaries, Class Algorithms, Sequence, Selection, Iteration - These are ways to manage complexity through abstraction of various data and procedures that influence Expressions and Iteration, Truth Tables - ways of representing true and false operators, mainly between the 1s and 0s of binary. True trumps false in OR, but fails to in AND. Characters, Strings, Length, Concatenation, Upper, Lower, Traversing Strings - Strings are plaintext, and these are various ways of manipulating strings. Making them upper and lower case, adding more string to the string, and iterating over them. Python If, Elif, Else conditionals; Nested Selection Statements - Conditionals, if checks if something is true. Elif checks if the above if statement isn’t true, and else checks if nothing above ois true. Python For, While loops with Range, with List - various loops to iterate over iterables. While loops have a conditional, loop over range loops over a range of numbers, and for loops over an iterable. Combining loops with conditionals to Break, Continue - continue resets the loop, break breaks out of it Procedural Abstraction, Python Def procedures, Parameters, Return Values - Ways of managing complexity in repeatable procedures (def in python). These return return values and contain parameters that influence the output. .",
            "url": "https://nvarap.github.io/blog/hacks/algorithm/2022/12/07/Vocab.html",
            "relUrl": "/hacks/algorithm/2022/12/07/Vocab.html",
            "date": " • Dec 7, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "Sections 9 and 11",
            "content": "Question 1 . { if(isRaining){ day --&gt; &quot;cold&quot; } if(isCold){ day --&gt; &quot;cold&quot; } } . Question 2 . import random def turn(): max_int = 0 for i in range(4): nint = random.randint(1, 10) if nint &gt; max_int: max_int = nint print(max_int) turn() turn() . Question 3 . { if CANMOVEFORWARD{ moveForwards } else{ if CANTURNRIGHT{ turnright } if CANTURNLEFT{ turnleft } } } . Question 4 / 5 . Explanation: To search for element 69, you would first look at the middle index, 5 (4.5, round up to 5). This is 6. As six is less than 69, you would look at the greater than half. This half&#39;s middle index is 7 (5+9 = 14/2 = 7). the seventh index is 11, which is less than 69. Then we look at the 8th index ((8+8)/2 = 8). Since 8 = 69, we have searched and found the correct number. . Diagrams for questions 4/6 . from PIL import Image im1 = Image.open(&quot;../images/Bars.png&quot;) im2 = Image.open(&quot;../images/Tree.png&quot;) print(&quot;Using tree (Question 4)&quot;) display(im2) print(&quot;Using bars (Question 6)&quot;) display(im1) . Using tree (Question 4) . Using bars (Question 6) . Question 7 . [&quot;Market”, ”Ralphs”, “store”, &quot;Target”, ”Walmart”] . You could add this in this order in order to put them in alphabetical order, ascending. This way these could be properly compared, as numbers are greater, you can compare which numerical value of these ascii characters is greater. . Question 8 . Binary search is far quicker than sequential search because binary search inherently rules out half of the possibilities every iteration. Since you start at the middle index, you can either choose to pick the group that is greater than the middle index, or the group that is lower. As a result, you will rule out half of the known possibilities every single time you make a cut. . Question 9 . Out of the list [64,36,16,11,9], I would be searching for 36. First I would select the middle element ((1+5)/2 = 3, and for the purpose of collegeboard that is the middle element), and 16 is less than 36, so I would move back, (as the list is reversed). Hence, I would select the 2nd element ((1+3)/2 = 2) and that is equal to 36, so it would take me two tries in order to get to 36. . from PIL import Image im = Image.open(&quot;../images/Tree2.png&quot;) display . Binary Search in Python . lst = [1,2,3,4,5,6] lst.reverse() def binarySearch(lst, toFind): min = 0 # Min index, set to first to survey whole list max = len(lst)-1 # Max index, set to last to survey whole list reversed = False if lst[min] &gt; lst[max]: lst.reverse() reversed = True # sets so we can assure no side affects print(&quot;reversed&quot;) # we only really want the list to be in ascending order, so we reverse it if it isn&#39;t while True: ind = int(round((min+max)/2)) # find middle index mid = lst[ind] # set middle index to variable print(mid) if mid == toFind: # if it is equal, we&#39;re done if reversed: lst.reverse() return else: # otherwise if mid &lt; toFind: # if it is less than the answer is above as a result the min value moves up min = ind else: # otherwise if it is greater the answer is under and therefore max moves down max = ind print(&quot;trying search with lst searching for 5&quot;) binarySearch(lst, 5) print(&quot;trying search with lst searching for 1&quot;) binarySearch(lst, 1) . trying search with lst searching for 5 reversed 3 5 trying search with lst searching for 1 reversed 3 2 1 .",
            "url": "https://nvarap.github.io/blog/Hacks/bnsch",
            "relUrl": "/Hacks/bnsch",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Grade Reviews Week 14",
            "content": "Grade for Section 1-2: 0.8 Grade for section 3-4: 0.9 . Reflection: I felt I may have deserved a full score, however I understand how my score may have been lowered. I’m pretty sure that I completed every task however I am not one to doubt the graders. I guess I mainly need to look to finish up each section while keeping an eye on what I have and have not done. For our presentation and homework, I’d ensure that we have checks to make sure that people completed the sections, and categorize hacks in more concise sections to ensure that people would be able to check what they have and haven’t done without missing anything. .",
            "url": "https://nvarap.github.io/blog/hacks/algorithm/2022/12/02/reflectionWeek13.html",
            "relUrl": "/hacks/algorithm/2022/12/02/reflectionWeek13.html",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Sections 5-7",
            "content": "Section 5 Notes . QUESTION ANSWER . 1 | B | . 2 | A | . 3 | A | . 4 | A | . Fill in the blanks . AND Operator Value 1 Value 2 Result . 1 | 1 | 1 | . 1 | 0 | 0 | . 0 | 1 | 0 | . 0 | 0 | 0 | . OR Operator Value 1 Value 2 Result . 1 | 1 | 1 | . 1 | 0 | 1 | . 0 | 1 | 1 | . 0 | 0 | 0 | . Not operator Not Value Result . Not | 1 | 0 | . Not | 0 | 1 | . . Python Practice . . Section 6 Notes . QUESTION ANSWER . 1 | 3 | . 2 | 2 | . 3 | 2 | . 4 | 1 | . Python Practice . What Boolean Value does i == shark cause? . true if i is shark, otherwise false there is no shark therefore false | . | . . Section 6 Notes . .",
            "url": "https://nvarap.github.io/blog/hacks/algorithm/2022/12/01/dash-br.html",
            "relUrl": "/hacks/algorithm/2022/12/01/dash-br.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "Sections 3-4",
            "content": "Example One . lst = [1, 100, 123, 214, 123, 931] new_lst = [] for num in lst: if num % 4 == 2: new_lst.append(&quot;err&quot;) print(new_lst) . [&#39;err&#39;] . Explanation . Everything is sequencing for num in lst is iteration, as it iterates over the set list. if num % 4 == 2 is selection, as it selects for a specific value . Example 2 . for i in range(5): if i % 2 == 1: print(3) . 3 3 . Explanation . Everything is sequencing for i in range(5) is iteration, as it iterates over the range [1,5]. if num % 2 == 1 is selection, as it selects for a odd number . Video 2 . Find the value for a, b, c, d | a = 1, b = 7, c = 3, d = 7 | . What are the values of hot and cold after executing the code segment? | Hot = true, cold = true | . My Own Examples . { a = 1 b = 2 c = 3 d = 4 e = 5 result = a MOD b MOD c MOD d MOD e display(result) } . Answer: 1 mod 2 mod 3 mod 4 mod 5 = 1 . { a = 1 b = 2 c = a+b d = a+b+c e = (a+b+c+d)/(d-b) display(e) } . Answer: . c = 3 d = 6 e = 1+2+3+6/(6-2) = 12/4 = 3 . Concatenation . SmithB@gmail.com, you concatenate Smith, B, and @gmail.com without spaces | ompuook, you take a substring of computer and textbook (omp and ook respectively) and concatenate them together |",
            "url": "https://nvarap.github.io/blog/Hacks/please",
            "relUrl": "/Hacks/please",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "Section 1-2 hacks",
            "content": "Hacks Questions . Assignment 1 . Question Number Answer . 0 | 1 | . 1 | 3 | . 2 | 1 | . 3 | 2 | . 4 | 1 | . 5 | 4 | . My own questions . You are a school who wants to iterate over a bunch of student IDs (which are in the order such that if you added one, you would get the next student) to contact them, what variable name/data type would you use . ID, integer | stuID, integer | studentID, string | IDofStudentNumber, integer | Click for the answer! 1. ID is descriptive enough, especially if iterating. Also, if you are iterating it is inefficient to iterate over a string of multiple numbers, so adding would actually be the most efficient method. You want to store the grade of you and your friend. What would you call your score and what datatype? . score, integer | My score, integer | myScore, float | myScore, integer | Click for the answer! 3. Floats are the way to store decimal types, such as grades. myScore is a name that is descriptive enough, since you have to differ between two scores. You want store a name over a interation. What would you call your variable and what data type . name, string | name, integer | myName, string | lmao_get_rekt, integer | Click for the answer! 1. you want to store an arbitrary name, not a regular one, so you&#39;ll use a generic name. This is a name, so you&#39;d use a string. Assignment 2 pt 1 . Question Number Answer . 0 | 3 | . 1 | 2 | . 2 | 4 | . 3 | 2 | . 4 | 3 | . 5 | 1 | . Nothing wrong! . Hacks 2 pt 2 pt 1/2 . | Question Number | Answer | | ———– | ———– | | 0 | 7 | | 1 | 11 | | 2 | 107 | | 3 | 1100 | | 4 | 101100 | | 5 | 1111110 | | 6 | 1110000000000001 | | 7 | 111111111111111111111111 | | 8 | 101010101010101010101010 | | 9 | 2794 | | 10 | 1248 | | 11 | 53800 | . Hacks 2 pt 2 pt 3 . | Question Number | Answer | | ———– | ———– | | 0 | 4 | | 1 | 1 | | 2 | 3 | | 3 | 4 | | 4 | 4 | | 5 | 2 | | 6 | 3 | | 7 | 2 | | 8 | 4 | . Reflection . Nothing wrong! I enjoyed the presentation and thought the teaching overall was very effective. I answered most of the questions with the knowledge I had and gained. .",
            "url": "https://nvarap.github.io/blog/hacks/algorithm/2022/11/28/All-The-Questions.html",
            "relUrl": "/hacks/algorithm/2022/11/28/All-The-Questions.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "Algorithm Hacks",
            "content": "Hacks: .",
            "url": "https://nvarap.github.io/blog/Hacks/algHacks",
            "relUrl": "/Hacks/algHacks",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "Binary hacks",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Character Minus . +1 | 00000000 | 0 | 0 | 0 | nil | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | .",
            "url": "https://nvarap.github.io/blog/posts/binary",
            "relUrl": "/posts/binary",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "Title",
            "content": "console.log(&quot;hello world&quot;) . Failed to start the Kernel. internal/modules/cjs/loader.js:717 return process.dlopen(module, path.toNamespacedPath(filename)); ^ Error: The module &#39;/usr/local/lib/node_modules/ijavascript/node_modules/zeromq/build/Release/zmq.node&#39; was compiled against a different Node.js version using NODE_MODULE_VERSION 93. This version of Node.js requires NODE_MODULE_VERSION 64. Please try re-compiling or re-installing the module (for instance, using `npm rebuild` or `npm install`). at Object.Module._extensions..node (internal/modules/cjs/loader.js:717:18) at Module.load (internal/modules/cjs/loader.js:598:32) at tryModuleLoad (internal/modules/cjs/loader.js:537:12) at Function.Module._load (internal/modules/cjs/loader.js:529:3) at Module.require (internal/modules/cjs/loader.js:636:17) at require (internal/modules/cjs/helpers.js:20:18) at load (/usr/local/lib/node_modules/ijavascript/node_modules/node-gyp-build/index.js:22:10) at Object.&lt;anonymous&gt; (/usr/local/lib/node_modules/ijavascript/node_modules/zeromq/binding.js:1:105) at Module._compile (internal/modules/cjs/loader.js:688:30) at Object.Module._extensions..js (internal/modules/cjs/loader.js:699:10). View Jupyter &lt;a href=&#39;command:jupyter.viewOutput&#39;&gt;log&lt;/a&gt; for further details. .",
            "url": "https://nvarap.github.io/blog/2022/11/17/IJS.html",
            "relUrl": "/2022/11/17/IJS.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post44": {
            "title": "N@TM",
            "content": "Finals Reflection . Score: 48/50 . Incorrect Answers: . Question 2 . Redo: Rather this should be displaying true if x is negative (y = if x &lt; 0, not greater than) and nothing otherwise Correct answer: C . Question 35 . Redo I forgot to select two answers Correct Answers: D &amp; A .",
            "url": "https://nvarap.github.io/blog/hacks/2022/11/07/tri1Final.html",
            "relUrl": "/hacks/2022/11/07/tri1Final.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post45": {
            "title": "N@TM",
            "content": "Project at N@TM . Our project was Kernel, and our team was almost the second presentation for Mr.Yeung’s class. We were basically a quizlet-esque program. | At the actual event, our AWS died literally beforehand, and we were unable to get it to work as a result (due to an exit code 3) | With hindsight, it was due to a problem in the code so the AWS interpreter couldn’t compile it. Good to note in future cases that an exit code of 3 means there is an error in the source code | Our presentation went well, I feel. | . Other projects . I liked seeing 3D animation stuff, because I was in the class last year and found it interesting. Mainly I liked the model of a person someone did. | I really liked ceramics, especially because they had a ceramic fruit from One Piece, and anime I really like | For CSP, I saw the lawnmowers, who created multiple games on fastpages. | . Photos . .",
            "url": "https://nvarap.github.io/blog/hacks/2022/11/03/natm.html",
            "relUrl": "/hacks/2022/11/03/natm.html",
            "date": " • Nov 3, 2022"
        }
        
    
  
    
        ,"post46": {
            "title": "JS Api - Weather in a Place",
            "content": "Enter city and MM/DD/YYYY . .",
            "url": "https://nvarap.github.io/blog/hacks/2022/10/23/APIinJS.html",
            "relUrl": "/hacks/2022/10/23/APIinJS.html",
            "date": " • Oct 23, 2022"
        }
        
    
  
    
        ,"post47": {
            "title": "Breaking Apart some JS",
            "content": "Section 1: Establishing the table . { &lt;!-- HTML table fragment for page --&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Time&lt;/th&gt; &lt;th&gt;All-time Cases&lt;/th&gt; &lt;th&gt;Recorded Deaths&lt;/th&gt; &lt;th&gt;Active Cases&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;td id=&quot;time&quot;&gt;&lt;/td&gt; &lt;td id=&quot;total_cases&quot;&gt;&lt;/td&gt; &lt;td id=&quot;total_deaths&quot;&gt;&lt;/td&gt; &lt;td id=&quot;active_cases&quot;&gt;&lt;/td&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Country&lt;/th&gt; &lt;th&gt;All-time Cases&lt;/th&gt; &lt;th&gt;Recorded Deaths&lt;/th&gt; &lt;th&gt;Active Cases&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody id=&quot;result&quot;&gt; &lt;!-- generated rows --&gt; &lt;/tbody&gt; &lt;/table&gt; . } Uses th, td, and tr to create a table . Section 2: GET from the endpoint . { &lt;!-- Script is layed out in a sequence (no function) and will execute when page is loaded --&gt; &lt;script&gt; // prepare HTML result container for new output const resultContainer = document.getElementById(&quot;result&quot;); // prepare fetch options const url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot;; const headers = { method: &#39;GET&#39;, // *GET, POST, PUT, DELETE, etc. mode: &#39;cors&#39;, // no-cors, *cors, same-origin cache: &#39;default&#39;, // *default, no-cache, reload, force-cache, only-if-cached credentials: &#39;omit&#39;, // include, *same-origin, omit headers: { &#39;Content-Type&#39;: &#39;application/json&#39; // &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;, }, }; } . This section sets upt he headers and the credentials. This is where you’d put any rapid API keys . { // fetch the API fetch(url, headers) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors if (response.status !== 200) { const errorMsg = &#39;Database response error: &#39; + response.status; console.log(errorMsg); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = errorMsg; tr.appendChild(td); resultContainer.appendChild(tr); return; } // valid response will have json data response.json().then(data =&gt; { console.log(data); console.log(data.world_total) . This actually fetches the information and makes sure it was retrieved successfully . { // World Data document.getElementById(&quot;time&quot;).innerHTML = data.world_total.statistic_taken_at; document.getElementById(&quot;total_cases&quot;).innerHTML = data.world_total.total_cases; document.getElementById(&quot;total_deaths&quot;).innerHTML = data.world_total.total_deaths; document.getElementById(&quot;active_cases&quot;).innerHTML = data.world_total.active_cases; // Country data for (const row of data.countries_stat) { console.log(row); // tr for each row const tr = document.createElement(&quot;tr&quot;); // td for each column const name = document.createElement(&quot;td&quot;); const cases = document.createElement(&quot;td&quot;); const deaths = document.createElement(&quot;td&quot;); const active = document.createElement(&quot;td&quot;); // data is specific to the API name.innerHTML = row.country_name; cases.innerHTML = row.cases; deaths.innerHTML = row.deaths; active.innerHTML = row.active_cases; // this builds td&#39;s into tr tr.appendChild(name); tr.appendChild(cases); tr.appendChild(deaths); tr.appendChild(active); // add HTML to container resultContainer.appendChild(tr); } }) }) . Section 3: Actually setting up the table . { // catch fetch errors (ie ACCESS to server blocked) .catch(err =&gt; { console.error(err); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = err; tr.appendChild(td); resultContainer.appendChild(tr); }); &lt;/script&gt; } . Uses element creation and appends elements to table. .",
            "url": "https://nvarap.github.io/blog/hacks/2022/10/20/suck.html",
            "relUrl": "/hacks/2022/10/20/suck.html",
            "date": " • Oct 20, 2022"
        }
        
    
  
    
        ,"post48": {
            "title": "M0RE D3PLØYME/\/†",
            "content": "More deployment . Deployed to the class aws instance | Screenshots of curl | . Author: Varalu N .",
            "url": "https://nvarap.github.io/blog/hacks/2022/10/14/more.html",
            "relUrl": "/hacks/2022/10/14/more.html",
            "date": " • Oct 14, 2022"
        }
        
    
  
    
        ,"post49": {
            "title": "4.1 Notes",
            "content": "4.1 Notes Pt 1 . Computers used to be very large Computers started miniaturizing | . | Computers needed to communicate with one another | Computers send packets of one another Includes source and destinations | Sent Via Computer System | . | Words sent Words are sent in packets, converted to bytes, and sent | don’t need to be sent in orders, can have different routes | . | Routers help find paths (allow packets to jump) | Bandwidth limits. | . Vocab: Path: A sequence of directly connected computing devices that begins at the sender and ends at the receiver Route: The process of finding a path from sender to receiver. Computer System: A group of computing devices and programs working together for a common purpose. Computer Device: A physical artifact that can run a program. Some examples include computers, tablets, servers, routers, and smart sensors. Bandwidth: The maximum of data that can be sent in a fixed amount of time. Computer Network: A group of interconnected computing devices capable of sending or receiving data. . 4.1 Notes Pt 2 . A protocol are the rules that dictate how packets move | 2 types OSI: Go through 7 layers in order to communicate | TCP: Transmission control protocol –&gt; explains how they interact | . | Internet Engineering Task Force: Manages standards and technical info concerning info over the open and collaborative process | There are steps (layers) | Network Access Most common is ethernet, which uses Network Interface Card | This allows our computer to hop between | everything has a mac number | . | Internet Layer This is where they convert into metadata | You get an IP, sender and receiver | . | Transport Opens protocol and certifies, sometimes you don’t | transports | . | IP Addresses We send IPs to different or a lot of people | . | Domain addresses allow us to set certain IPs to certain real-world names For the third question, I simply forgot to note what the internet was and wasn&#39;t rather believing the opposite. | .",
            "url": "https://nvarap.github.io/blog/hacks/2022/10/13/crawlinginmyskin.html",
            "relUrl": "/hacks/2022/10/13/crawlinginmyskin.html",
            "date": " • Oct 13, 2022"
        }
        
    
  
    
        ,"post50": {
            "title": "Use of Hacks in A Submenu",
            "content": "import requests import PIL from PIL import Image import urllib.request url = &quot;https://programming-memes-reddit.p.rapidapi.com/&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;721c8e8789msh4f6199095fcff35p13f037jsnc1e7998c8457&quot;, &quot;X-RapidAPI-Host&quot;: &quot;programming-memes-reddit.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers) js = response.json() ind = 0 for r in js: if ind &gt; 10: break urllib.request.urlretrieve(r[&#39;link&#39;],&quot;img.png&quot;) img = Image.open(&#39;img.png&#39;) display(img) ind += 1 .",
            "url": "https://nvarap.github.io/blog/Hacks/memes",
            "relUrl": "/Hacks/memes",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post51": {
            "title": "1.4 Notes",
            "content": "Video 1.4 pt 1 . Many types of errors | You cannot write a program without errors | Four types Logic Errors | Syntax Errors | Runtime Errors | Overflow Errors | . | Logic errors: A problem by the programmer specifically | Nothing with the internals, but rather a programming skill issue | . | Syntax error Programmer does something that doesn’t line up with the rules of the language | Syntax such as {}, (), ;, etc. | . | Runtime error: When the program fails in the midst of a program | May only occur at certain inputs (letters when you intend numbers, etc.) | . | Overflow errors: When the program maxes out the amount of memory allocation to a certain variable | i.e ints vs floats vs doubles. | . | . Video 1.4 pt 2 . When syntax error: Often you are directed to the area of the error | It could be at the line, the line above, the line under, etc. | Fix the error that is just a typo | . | When Logic errors: use test cases | See the output and certain values | Some IDEs have certain debuggers to assist in helping logic stuff | . | . Video 1.4 pt 3 . Often you need many testing “schemes” to help with testing | We start testing at the start of development Start thinking | Start planning specifications | Plan how to test (influenced by specifications) | . | After testing programmers revise sections of their code that didn’t work | You keep testing, and then get users to test, and then release | And even after, you will get errors, leading to certain maintainence patches | . MCQ . .",
            "url": "https://nvarap.github.io/blog/hacks/2022/10/07/MoreColleges.html",
            "relUrl": "/hacks/2022/10/07/MoreColleges.html",
            "date": " • Oct 7, 2022"
        }
        
    
  
    
        ,"post52": {
            "title": "Error Management Python Hacks",
            "content": "Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times items_list = [] # First addition item = input(&quot;Please select an item from the menu, leave the entry blank to pass&quot;).lower() while item != &quot;&quot;: # while the enter blank to pass items_list.append(item) # first append the item previously made item = input(&quot;Please select an item from the menu, leave the entry blank to pass&quot;).lower() # reassign item full = 0 # set a full variable to aggregate for item in items_list: if item in menu.keys(): # check if item is on the menu full = full + menu[item] # add only if on the menu #code should add the price of the menu items selected by the user print(items_list) print(f&quot;${full}&quot;) # print full cost . Menu burger $3.99 fries $1.99 drink $0.99 [&#39;burger&#39;, &#39;item&#39;, &#39;drink&#39;] $4.98 . Changes: . Created a while loop to allow for multiple entries. Allowed for flexible entries and weeded out bad entries using a separate filter and aggregation system. Set every item to lower to allow for capital letters Added proper documentation . Hacks . Errors such as user input may arise due to corner cases one could not plan for, there could be compilation errors or errors with the code running due to weird calculations | One should always use corner cases and broad cases. Broader cases that you can easily calculate are good for preliminary testing, and the corner cases for more in-depth testing | I encountered an error going out of index many times. Often this was just a misfire with pythons range function | Single tests are corner cases such as loading up a blank sheet without a name, closing the tab without saving, or other corner cases. |",
            "url": "https://nvarap.github.io/blog/Hacks/BashOne",
            "relUrl": "/Hacks/BashOne",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post53": {
            "title": "Flask Updates",
            "content": ".",
            "url": "https://nvarap.github.io/blog/hacks/2022/10/02/FlaskUpdates.html",
            "relUrl": "/hacks/2022/10/02/FlaskUpdates.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post54": {
            "title": "1.3 Notes",
            "content": "Video 1.3 pt 1 . A program development starts with an idea | Programmed with a purpose | Devs follow specific steps sometimes planned | sometimes based off of results | . | Devs investigate and reflect | Developers must: Determine the requirements of the project | Determine the constraint options, time, etc | . | understand user concerns and interests | . | How to investigate surveys | user testing | interviews | direct observations | . | Certain investigative techniques offer different pros | Developers design after investigating | Steps Brainstorming | Storyboard the program | Plan user experience | Laying out UI | Organize into modules | prep a testing strat | . | Check requirements Describe how it behaves | Describe a list of user interactions | Devs create a prototype of the program an incremental process is used to test each module in the program | . | . | Testing occurs at the micro and macro level | . Video 1.3 Pt 2 . CITE YOUR SOURCES | Programming is rarely solo | individuals work on different parts of the project CITE YOUR SOURCES | . | Credit people in the documentation of the program Even if they look at it, not actually code | . | Use commends to credit | Programs are developed with code segments, procedures and algorithms from other people Similar to quoting | Give them credit | Algorithms are considered intellectual property | . | Say X people did X thing | CITE YOUR SOURCES | . Video 1.3 Pt 3 . Write commentsWrite commentsWrite commentsWrite commentsWrite commentsWrite commentsWrite comments | Programming documentation describes what the program does what specific fucntions/emthods/code segrments do | List events and correspondents | . | When? Before: specifications | During: to keep track of progress | After: to explain the overall process | Improves efficiency | Improves testing and refining | Improves bug responses | . | How Comments i.e # or // or / or &#39;&#39;&#39; or &lt;!-&gt; | . | Comments do not affect how the program runs | Various schemes | . | . .",
            "url": "https://nvarap.github.io/blog/hacks/2022/09/30/notes13.html",
            "relUrl": "/hacks/2022/09/30/notes13.html",
            "date": " • Sep 30, 2022"
        }
        
    
  
    
        ,"post55": {
            "title": "Individual Flask Repo Hacks",
            "content": "Showing off the home screen . . Changed Stub.html . .",
            "url": "https://nvarap.github.io/blog/hacks/2022/09/25/indflask.html",
            "relUrl": "/hacks/2022/09/25/indflask.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post56": {
            "title": "Group Flask Hacks",
            "content": "Second Python Hacks . Together, we created an extra page in the group flask pertaining to programming purpose and out scrum teams. This screenshot shows the new page. . .",
            "url": "https://nvarap.github.io/blog/hacks/2022/09/25/flaskproj2.html",
            "relUrl": "/hacks/2022/09/25/flaskproj2.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post57": {
            "title": "Video Notes 1.2",
            "content": "Video 1.2 pt 1 . Computing Innovations can be both tangible and intangible | Smart devices communicate with a computer | A computing innovation solves an issue/problem | Guiding questions: why does this innovation exist | What problems does the innovation solve | what does the computing innovation allows us to do that we could not do before | . | Example Social Media Why does it exist: to help people communicate | What problem does it solve: Long distance communication | . | E-commerce Why does it exist: To order stuff from home | What problem does it solve: Driving to different stores to compare, making things cheaper | . | Digital Assistant Device Why does it exist: to help people do things without using their hands | What problem does it solve: Convenience or problems that do no allow th e use of hands | . | . Video 1.2 pt 2 . Programs consist of inputs and outputs | Input comes in many forms Touch | Audio | Visual | Text | . | Devices can accept all types of inputs | Programs are written in event-driven environments Triggered by events (forms of inputs) Mouse clicks | Button clicks | keyboards | audio | swipes | . | . | Input usually affects the output sometimes it does not | . | Outputs visual | audio | touch | text | . | Action –&gt; event | Program code isn’t executed in order, rather executed when they are called by certain events | . Video 1.2 pt 3 . A program is a collection of statements A statement is a single command | A group of statements are a code segment | . | Code segments are executed by the rules of the coding language | code == software | Code segments should work for many different circumstances | I.e finding the min numbers numbers out of order | negative numbers | larger numbers | decimals | . | Description: simply state what a segment does Maybe explain how | . | . .",
            "url": "https://nvarap.github.io/blog/hacks/2022/09/25/AP2hacks.html",
            "relUrl": "/hacks/2022/09/25/AP2hacks.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post58": {
            "title": "Javascript Kernel",
            "content": "// Run in the jupyter notebook, doesn&#39;t run in VSCODE console.log(&quot;hello&quot;) . hello . hello = function(msg){ console.log(msg); } hello(&quot;momentous&quot;) . momentous .",
            "url": "https://nvarap.github.io/blog/Hacks/JS",
            "relUrl": "/Hacks/JS",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post59": {
            "title": "Notes for the Yale Video",
            "content": "Video Notes and Vocab . Enterprise: A project that is difficult/requires effort Enterprise can always be improved, we can improve where we’re at | . | Our life circumstances don’t matter as much as we think. Many different people (i.e those who’ve won the lottery) | Intuitions: We can understand things without conscious reasoning | Taking care of happiness doesn’t work without putting practices to work | G.I Joe fantasy: Simply knowing about a bias is enough to put the idea into practice | Often, the mind mugs up about what it means to be happy. It often lies. One case: Salary and our jobs | Money | Amount money needed to not up your happiness is around $70k | . | Very happy people make time for social connections. Connecting with humans helps happiness | . | Helping others helps us a lot, and helps us be happy more | Thinking about what we are grateful about is very powerful Expressing gratitude is a very good | . | Sleeping is good | Remaining in the present moment is often the best thing | Savoring the moment is often better | Affluence: The state of having a great deal of money (wealth) | Be affluent in time (spending money) | Happy people prioritize their time over their money | . Reflections: I often feel that I participate in some of these insights. I really like to help and remain in social contact with people, however I do not feel that I go out of my way to remain in contact. I also am not time affluent at all. This is sad because it doesn’t allow for me to be as happy as I’d like, so I feel that after watching this video I will be looking to focus more on my the time I have off (maybe giving myself an hour to myself, similarly to the Yale students) . List of Gratitude . People I am grateful for . My family (Sister, Father, Mother) | My friends in San Diego | My teammates | My friends in San Jose | . Goals . Get an A in the class | Do extracurriculars | Create applications and apps | . These connect back to my happiness as they show my passions and keep me in the moment. . Note of Gratitude: . I’m grateful for my scrum team with Chinmay, Azeem, and Collin. They’re all super smart people who cover all my bases when I can’t solve my problems. They perfectly complement each other and are genuinely amazing people to be around .",
            "url": "https://nvarap.github.io/blog/hacks/2022/09/19/Psych.html",
            "relUrl": "/hacks/2022/09/19/Psych.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post60": {
            "title": "Notes for AP Classroom",
            "content": "Video 1.1 Pt 1 . Many companies use collaboration and creates innovations These innovations show parts of every collaborator | . | Innovations can be tangile or intangible | Collaboration that has multiple people removes bias | Effective collaboration produces a computing innovation that reflects the diversity of talents and perspectives of those who designed it | Interpersonal skills through collaboration Communication | Consensus Building | Conflict Resolution | Negotiation | . | Going together creates ideas that are more developed and “go farther” | . Video 1.1 Pt 2 . Pair Programming Driver: Writes the program | Navigator: Checks each line of code as it is written | No back seat programming! | Switch between the two people | . | Think-pair-share Think individually | Pair with another peer | Share with the team | . | LEAVE Comments Makes code easy to understand | Acknowledge code and media used from other sources | Differ between who did what | Clarify functionality | If you cannot write comments in code, use a pdf | . | Tools to connect Repl.it multiplayer | GitHub repos | Shared docs or folders | Ask friends or family or teachers (for coding platform) | . | Consult with the average user, seeing what works through the lens of an average person. | .",
            "url": "https://nvarap.github.io/blog/hacks/2022/09/17/Notes.html",
            "relUrl": "/hacks/2022/09/17/Notes.html",
            "date": " • Sep 17, 2022"
        }
        
    
  
    
        ,"post61": {
            "title": "Docker Hacks",
            "content": "Docker Screenshot . . Docker in action . .",
            "url": "https://nvarap.github.io/blog/hacks/2022/09/16/Docker.html",
            "relUrl": "/hacks/2022/09/16/Docker.html",
            "date": " • Sep 16, 2022"
        }
        
    
  
    
        ,"post62": {
            "title": "App Design Hacks",
            "content": "Pseudocode . PROCEDURE buildRandomWord() . Out of a provided list, generate a random word . Create a new string, the same length as the generated word, with each character * . Return a list of [generated word, hidden word] . PROCEDURE returnWhere(letter, word) . iterate through the non-hidden word . check to see if it equals the letter . if so, add the index to a list . if not, continue . return the list of indexes . PROCEDURE replaceAt(letter, list, word_to_guess) . check to see if the list.length is &gt; 0 . if so, continue on . if not, show a label none and increment guesses by 1 . otherwise, at the corresponding indexes, replace the character with the letter . show the starting page, allow the user to click the play button when play button is clicked: . Unhide the submit button . Unhide the text entry . Unhide the display label . allow the user to enter in a character and submit it with the submit button use returnWhere use replaceAt increment total guesses increment regular guesses if the list returned by returnWhere is empty Display the guesses in the label by the gallows Display the updated hidden word . IF guesses = 6, display the screen that tells the player they lost IF the hidden word and the regular word match, display the screen that tells the player they won and in how many guesses . Matching up with the rubric . Program purpose and function The program has a clear purpose; a game of hangman | The program’s function is to receive an input as a letter and output a string of the letter informing the player on what letters they may have gotten correct | It takes input from the player in the form of a character and outputs the new string | The program functions wells and is consistent | . | Data Abstraction The program abstracts data into lists, i.e | . The list of words to choose from | The index list holding where the letters are correct | The list containing the correct and hidden word | . | Managing Complexity To manage repeatable or complex tasks, I grouped them into functions, i.e | . The function to check correctness | The function to check for the indexes at which letters are correct | The function to replace the letters at said indexes - These tasks repeat often in a game of hangman to condensing them into functions reduces the time needed to not only compile but to code. If this game were to expand it would also allows for reusable usage of these functions. | . | Procedural Abstraction The functions created are adaptable and have very little hard coding | In a different environment, these functions can adapts | The replace at function at replace different characters given a list | The returnWhere function can be used out of this context to find indices at which letters match up | . | Algorithm Implementation This program implements an accurate algorithm, which takes in input, checks said input, and outputs proper feedback | . Takes in a character | Loops over characters, finding indices | Replaces letters at said indices | Outputs new string - This algorithm continues until the program terminates or the player succeeds/fails | . | Testing Strenuous testing was undertaken with this program | Built to be consistent and resilient | All undertaken by me | . | Tips to improve: . Add comments | Code everything at once, then look at the rubric. | . Reflection on the article . Thanks to reading the article, I now know the proper procedure and tactics on how I can get a 5 on the APCSP exam in May. To be specific, I now know what tools are available, such as Khan Academy and where I can find practice tests. I now know what college board looks for when they grade projects. I now know to add comments more often, something that I can often neglect. As shown above, I’ve listed items I could improve upon to make sure I attain a 5. While I still have a way to go, I believe I am on the right track. .",
            "url": "https://nvarap.github.io/blog/hacks/2022/09/11/Design.html",
            "relUrl": "/hacks/2022/09/11/Design.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post63": {
            "title": "Pseudocode App",
            "content": "Psuedocode for project (&amp; plaintext) . Theme: Ninjago . Initialize variable correct to 0 Initialize variable num_question to 3 . SHOW Ready to begin page . IF user click on ready button, show first question | . SHOW Question one Screen Four buttons show question on top: Which Season does Ninjago: Prime Empire follow the pattern of? . Skybound . Possession . Secrets of Forbidden Spinjitzu . Crystalized . IF they press the correct button (skybound), display a quick correct message and move to question 2 ELSE they chose wrongly, display a quick incorrect message with correct answer (skybound) and move to question 2 . SHOW Question two Screen Four buttons What is the name of the forest that Lloyd and Sensei Garmadon escape through . Hiroshi’s Labrynth . Pirmeval’s Eye . Forest of Transquility . Jankikai Jungle . IF they press the correct button (Hiroshi’s Labrynth), display a quick correct message and move to question 3 ELSE they chose wrongly, display a quick incorrect message with correct answer (Hiroshi’s Labrynth) and move to question 3 . SHOW Question 3 Screen Four buttons in the lego.com game Chen&#39;s return, how many golden bricks can you attain? . 25 . 13 . 40 . 160 . IF they press the correct button (13), display a quick correct message and move to question 3 ELSE they chose wrongly, display a quick incorrect message with correct answer (13) and move to question 3 . After all three questions: move to the final screen Has a button to reset displays the score of the player and the percent of the score .",
            "url": "https://nvarap.github.io/blog/hacks/2022/09/07/AppCode.html",
            "relUrl": "/hacks/2022/09/07/AppCode.html",
            "date": " • Sep 7, 2022"
        }
        
    
  
    
        ,"post64": {
            "title": "HTML Hacks",
            "content": "Trying to change my theme . Changing my theme wasn’t too tough, and I changed my theme to hacker. While I enjoyed the hacker theme (image below), it didn’t have the pages that I typically used. Image formatting was also bad and really only seemed useful if there were no pictures. . . Apart from different pages not being available, clicking on items leads to weird notation. I feel that hacker would be much better for bullet points as opposed to actual paragraphs. .",
            "url": "https://nvarap.github.io/blog/hacks/2022/08/31/HTMLHacks.html",
            "relUrl": "/hacks/2022/08/31/HTMLHacks.html",
            "date": " • Aug 31, 2022"
        }
        
    
  
    
        ,"post65": {
            "title": "Python List and Dictionaries",
            "content": "Hacks One: . Add records to InfoDB . from distutils.log import info InfoDb = [] InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;4Runner&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Varalu&quot;, &quot;LastName&quot;: &quot;N&quot;, &quot;DOB&quot;: &quot;April 15&quot;, &quot;Residence&quot;: &quot;San Jose&quot;, &quot;Email&quot;: &quot;lcopebozo2@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;Lemon&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Chinmay&quot;, &quot;LastName&quot;: &quot;R&quot;, &quot;DOB&quot;: &quot;April 20&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;chinmay@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;Bugatti Chiron&quot;] }) print(InfoDb) . [{&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortensen&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;jmortensen@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;4Runner&#39;]}, {&#39;FirstName&#39;: &#39;Varalu&#39;, &#39;LastName&#39;: &#39;N&#39;, &#39;DOB&#39;: &#39;April 15&#39;, &#39;Residence&#39;: &#39;San Jose&#39;, &#39;Email&#39;: &#39;lcopebozo2@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Lemon&#39;]}, {&#39;FirstName&#39;: &#39;Chinmay&#39;, &#39;LastName&#39;: &#39;R&#39;, &#39;DOB&#39;: &#39;April 20&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;chinmay@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Bugatti Chiron&#39;]}] . /var/folders/md/vy2b4l3s2_jbdhsbgvnhq33m0000gq/T/ipykernel_44967/1743410674.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives from distutils.log import info . Hack 2: Iterate through a dictionary and list . Use a for loop to iterate through the list, and use another for loop in order to loop through the keys in the dictionary . for elem in InfoDb: # iterate through list print(elem) for key in elem: # iterate through dictionaries in list print(key) # print key print(elem[key]) # print value . {&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortensen&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;jmortensen@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]} FirstName John LastName Mortensen DOB October 21 Residence San Diego Email jmortensen@powayusd.com Owns_Cars [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;] {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;4Runner&#39;]} FirstName Sunny LastName Naidu DOB August 2 Residence Temecula Email snaidu@powayusd.com Owns_Cars [&#39;4Runner&#39;] {&#39;FirstName&#39;: &#39;Varalu&#39;, &#39;LastName&#39;: &#39;N&#39;, &#39;DOB&#39;: &#39;April 15&#39;, &#39;Residence&#39;: &#39;San Jose&#39;, &#39;Email&#39;: &#39;lcopebozo2@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Lemon&#39;]} FirstName Varalu LastName N DOB April 15 Residence San Jose Email lcopebozo2@gmail.com Owns_Cars [&#39;Lemon&#39;] {&#39;FirstName&#39;: &#39;Chinmay&#39;, &#39;LastName&#39;: &#39;R&#39;, &#39;DOB&#39;: &#39;April 20&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;chinmay@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Bugatti Chiron&#39;]} FirstName Chinmay LastName R DOB April 20 Residence San Diego Email chinmay@gmail.com Owns_Cars [&#39;Bugatti Chiron&#39;] . Hacks 3: Other Questions . Would it be possible to output data in a reverse order? | Are there other methods that can be performed on lists? | Could you create new or add to dictionary data set? Could you do it with input? | Make a quiz that stores in a List of Dictionaries. | . Hacks 3.1: . Yes, using reverse indexing [-1]. -1 Accesses the back of the list . for i in range(len(InfoDb)): print(InfoDb[-(i+1)]) # -0 is still the first index print() . {&#39;FirstName&#39;: &#39;Chinmay&#39;, &#39;LastName&#39;: &#39;R&#39;, &#39;DOB&#39;: &#39;April 20&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;chinmay@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Bugatti Chiron&#39;]} {&#39;FirstName&#39;: &#39;Varalu&#39;, &#39;LastName&#39;: &#39;N&#39;, &#39;DOB&#39;: &#39;April 15&#39;, &#39;Residence&#39;: &#39;San Jose&#39;, &#39;Email&#39;: &#39;lcopebozo2@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Lemon&#39;]} {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;4Runner&#39;]} {&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortensen&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;jmortensen@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]} . Hacks 3.2 . Yes, there are a myriad of different list methods, i.e . pop | remove | sorted | sort | count | extend | reverse, etc. | . lst = [1,2,3,4,5,6] lst.append(7) print(lst) lst.pop() print(lst) lst.remove(3) print(lst) lst.insert(3, 212) print(lst) lst.clear() print(lst) . [1, 2, 3, 4, 5, 6, 7] [1, 2, 3, 4, 5, 6] [1, 2, 4, 5, 6] [1, 2, 4, 212, 5, 6] [] . Hacks 3.3 . You can add and create new keys to a dictionary using input, by assigning keys using: . dictkey[keyname] = key | . dictionary = {} keyname = input(&quot;keyname&quot;) keyval = input(&quot;keyval&quot;) dictionary[keyname] = keyval print(dictionary) . {&#39;sy&#39;: &#39;2&#39;} . Hacks 3.4 . My previous quiz utilized dictionaries to store questions and answers. It would be easier to just use a dictionary, but one can use a list of dictionaries to store question/answers . import json from xml.dom import UserDataHandler def returnListFrom(): f = open(&quot;info.txt&quot;, &quot;r&quot;) string = json.loads(f.read()) f.close() return string def getEmail(user, lst): for dict in lst: if dict[&quot;Name&quot;] == user: return dict[&quot;Email&quot;] def checkForConsistency(user, password, lst): for dict in lst: if dict[&quot;Name&quot;] == user and dict[&quot;password&quot;] == password: return True return False def addDictionaryToFile(dictionary): string = returnListFrom() string.append(dictionary) with open(&quot;info.txt&quot;, &#39;w&#39;) as f: f.write(json.dumps(string)) place = input(&quot;Input new info or sign in? [type info or sign]&quot;) if place.lower() == &#39;info&#39;: print(&quot;Welcome info placement, place you information when prompted and it will be added to database&quot;) name = input(&quot;Input name value: &quot;) email = input(&quot;Input email value: &quot;) password = input(&quot;Input password value &quot;) dictionary = { &quot;Name&quot; : name, &#39;Email&#39;: email, &#39;password&#39; : password } addDictionaryToFile(dictionary) print(f&quot;Added {name}, n {email}, n {password}&quot;) elif place.lower() == &quot;sign&quot;: biglst = returnListFrom() print(&quot;When prompted enter in sign in info&quot;) user = input(&quot;Enter username: &quot;) password = input(&quot;Enter password: &quot;) useremail = getEmail(user, biglst) if checkForConsistency(user, password, biglst): print(&quot;Signed in!&quot;) print(f&quot;Credentials: {user}, {password}&quot;) print(f&quot;Email: {useremail}&quot;) else: &quot;user password either not exist or bad input. Consider checking spelling or creating an account&quot; . When prompted enter in sign in info Signed in! Credentials: addinginfoname, addingpasswordinfo Email: addinginfo@gmail.com .",
            "url": "https://nvarap.github.io/blog/Hacks/PythonLAD",
            "relUrl": "/Hacks/PythonLAD",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post66": {
            "title": "Firstword",
            "content": "HIPA stands for . Historical Context . | Intended Audience . | Purpose . | Author’s point of view . | . Historical Context . What, when, where, or why was this document written. Was it an event, a circumstance, a area in turmoil (i.e declaration of independence) . Intended Audience . Who is the author aiming to find as a recipient of this document . Purpose . What is the agenda of the document, what does the author want them to do? . Author’s POV (not just their point of view) . What aspect of the author’s identity, what part of their life, is influencing them to write this document (i.e what may be causing them to write this, or their bias) . https://docs.google.com/document/d/1qkWp6yySOkD7ltoNbVYkjUTVBFl_uwN0hbAtsan_3xg/edit . H: . Coming off of a warring states period . | Age of turmoil . | Period of unrest, leading to a want for change . | . I: . Chinese citizens, for all involved . | . P: . Gain followers . | Have people support their ideology . | Use the lessons provided by the Analect . | People who follow should follow morally, those who rule should lead with morality . | . APOV: . Affiliated with Confucius and his teachings . | They believe in Confucianism and his teachings . | Educated, have a scholarly sense . | Aristocratic . Benefits them, harmony, status, etc. . | . | .",
            "url": "https://nvarap.github.io/blog/2022/08/29/FirstWord.html",
            "relUrl": "/2022/08/29/FirstWord.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post67": {
            "title": "Python Hacks",
            "content": "Hack 1 . Import quiz.py run the program steps: . download the quiz.py file | cd to the file either through vscode or terminal | use python quiz.py | input your answers! | . import PIL from PIL import Image im = Image.open(&quot;/Users/vn1/myblog/blog/images/pythonHacks.png&quot;) display(im) . Hacks Pseudocode . import sys, getpass PROCEDURE qandresp (question) . DISPLAY question | answer &lt;-- input | RETURN answer | . QandA &lt;-- Dictionary(Questions and answers) . correct &lt;-- 0 . DISPLAY welcome {user} . DISPLAY length QandA . REPEAT for each key in QandA:- rsp &lt;-- qandresp(key).toLowerCase()- IF (rsp == QandA(key)) . - DISPLAY correct - correct &lt;-- correct +1 - ELSE: - DISPLAY wrong! . percent &lt;-- str(round(correct/QandA), 2) 2 is two decimal points DISPLAY user, you scored str(correct) / str(len(QandA)) DISPLAY percent . import getpass, sys # import packages def qandresp(question): # enter question, return inputted answer print(question) answer = input() return answer QandA = { # dictionary contains Q &amp; A pairs &quot;What command is used to include other functions that were previously developed?&quot; : &quot;import&quot;, &quot;What command is used to evaluate correct or incorrect response in this example?&quot; : &quot;if&quot;, &quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot; : &quot;expression&quot;, &quot;What word means to assign a value to a variable&quot; : &quot;define&quot;, &quot;What keyword is used to output value from a function that is not print&quot; : &quot;return&quot;, &quot;What function is used to typecast to type string (do not include parenthesis)&quot; : &quot;str&quot; } correct = 0 # Setup print(&quot;Hello, &quot; + getpass.getuser() + &quot;. You are running on &quot; + sys.executable) print(&quot;Current number of questions &quot; + str(len(QandA))) # iterate over each key for key in QandA: rsp = qandresp(key) rsp = rsp.lower() if rsp == QandA[key]: # check if the response is equal to the answer print(f&quot;Corret! Your answer was {rsp}&quot;) correct += 1 else: print(f&quot;{rsp} is incorrect&quot;) percent = str(round(correct/len(QandA), 2)*100) # calculate percentage (use len for future changes) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(len(QandA))) print(f&quot;This is {percent}%&quot;) # print score and percentage . Hello, vn1. You are running on /usr/local/bin/python3 Current number of questions 6 What command is used to include other functions that were previously developed? Corret! Your answer was import What command is used to evaluate correct or incorrect response in this example? not if is incorrect Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? Corret! Your answer was expression What word means to assign a value to a variable Corret! Your answer was define What keyword is used to output value from a function that is not print not return is incorrect What function is used to typecast to type string (do not include parenthesis) Corret! Your answer was str vn1 you scored 4/6 This is 67.0% .",
            "url": "https://nvarap.github.io/blog/Hacks/PythonHacks",
            "relUrl": "/Hacks/PythonHacks",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post68": {
            "title": "Fastpages Hacks",
            "content": "{ toc: true layout: post description: A minimal example of using markdown with fastpages. categories: [markdown] title: An Example Markdown Post } . this is how to create a layout for a page (put this at the top of your .md or HTML file) .",
            "url": "https://nvarap.github.io/blog/hacks/2022/08/24/FastpageHacks.html",
            "relUrl": "/hacks/2022/08/24/FastpageHacks.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post69": {
            "title": "Markdown",
            "content": "First markdown text . include markdown text .",
            "url": "https://nvarap.github.io/blog/markdown/2022/08/21/Markdown.html",
            "relUrl": "/markdown/2022/08/21/Markdown.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post70": {
            "title": "First Python post",
            "content": "print(&quot;&quot;&quot;hello world this is the first python notebook I will be adding to my blog&quot;&quot;&quot;) # hello world . hello world this is the first python notebook I will be adding to my blog .",
            "url": "https://nvarap.github.io/blog/Notebooks/PythonOne",
            "relUrl": "/Notebooks/PythonOne",
            "date": " • Aug 20, 2022"
        }
        
    
  
    
        ,"post71": {
            "title": "First Bash Project",
            "content": "str=&quot;bash&quot; echo $str # displays first iteration of str, where it equals bash str=&quot;newbash&quot; # override variable echo $str # displays new iteration of str, as newbash . bash newbash . export project_dir=$HOME/vscode export project=project_dir/APCSP export repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; cd ~ if [ ! -d $project_dir ] then echo &quot;Creating project dir at $project_dir as it doesn&#39;t exist&quot; mkdir -p $project_dir fi echo &quot;$project_dir exists&quot; if [ ! -d $project ] then echo &quot;Directory exists but not subdir $project. Cloning into subdir&quot; cd $project_dir git clone $repo cd ~ fi echo &quot; project exists, all set! &quot; . /Users/vn1/vscode exists Directory exists but not subdir project_dir/APCSP. Cloning into subdir fatal: destination path &#39;APCSP&#39; already exists and is not an empty directory. project exists, all set! . Answers to hacks . We can verify tools by using conditional commands to tell us about the versions | We can use conda list to check all installed packages and their version | use git add to add any relevant files, use git commit to commit to the relevant repository, and use git push to push changes to the master branch | We can create a script. | . Hacks output 1 . Navigate to project, then navigate to area wwhere files were cloned /Users/vn1 . list top level or root of files with project pulled from github Applications Public macurmom.txt Desktop a.txt myblog Dev airptone.mtl opt Documents airptone.obj ptone.mtl Downloads chairptone.mtl ptone.obj FirstBash.ipynb chairptone.obj q Java-Training-Exercises hairptone.mtl rptone.mtl Library hairptone.obj rptone.obj Movies irptone.mtl ussy Music irptone.obj vscode Pictures lechairptone.mtl wpilib Projects lechairptone.obj . list again with hidden files pulled from github . .local Movies .. .mono Music .CFUserTextEncoding .npm Pictures .DS_Store .nuget Projects .IdentityService .oracle_jre_usage Public .Trash .plastic4 a.txt .anaconda .pub-cache airptone.mtl .android .random.swp airptone.obj .bash_history .ssh chairptone.mtl .bash_profile .swiftpm chairptone.obj .bash_sessions .tcshrc hairptone.mtl .cache .templateengine hairptone.obj .conda .thumbnails irptone.mtl .condarc .viminfo irptone.obj .config .vimrc lechairptone.mtl .continuum .vnc lechairptone.obj .cshrc .vscode macurmom.txt .cshrc.pysave .xonshrc myblog .cups .zsh_history opt .dart .zsh_sessions ptone.mtl .dartServer .zshrc ptone.obj .dotnet Applications q .flutter Desktop rptone.mtl .gitconfig Dev rptone.obj .gradle Documents ussy .idlerc Downloads vscode .ipynb_checkpoints FirstBash.ipynb wpilib .ipython Java-Training-Exercises .jupyter Library . list all files in long format total 111472 drwxr-x+ 85 vn1 staff 2720 Aug 26 13:15 . drwxr-xr-x 7 root admin 224 Aug 10 23:44 .. -r-- 1 vn1 staff 7 Nov 3 2021 .CFUserTextEncoding -rw-r--r--@ 1 vn1 staff 12292 Aug 25 14:03 .DS_Store drwxr-xr-x 7 vn1 staff 224 Aug 19 17:20 .IdentityService drwx+ 24 vn1 staff 768 Aug 25 18:05 .Trash drwxr-xr-x 3 vn1 staff 96 Aug 18 13:34 .anaconda drwxr-xr-x 7 vn1 staff 224 Jul 25 16:33 .android -rw- 1 vn1 staff 25628 Aug 25 21:47 .bash_history -rw-r--r-- 1 vn1 staff 487 Aug 19 17:16 .bash_profile drwx 23 vn1 staff 736 Aug 25 14:03 .bash_sessions drwxr-xr-x 3 vn1 staff 96 Jul 3 22:37 .cache drwxr-xr-x 4 vn1 staff 128 Aug 22 23:04 .conda -rw-r--r-- 1 vn1 staff 23 Aug 18 13:37 .condarc drwxr-xr-x 10 vn1 staff 320 Aug 19 18:00 .config drwxr-xr-x 3 vn1 staff 96 Aug 18 13:35 .continuum -rw-r--r--@ 1 vn1 staff 616 Nov 13 2021 .cshrc -rw-r--r--@ 1 vn1 staff 463 Nov 7 2021 .cshrc.pysave drwx 3 vn1 staff 96 Nov 18 2021 .cups drwxr-xr-x 5 vn1 staff 160 Jul 26 14:47 .dart drwxr-xr-x 5 vn1 staff 160 Jul 27 14:31 .dartServer drwxr-xr-x 3 vn1 staff 96 Jul 9 11:31 .dotnet -rw-r--r-- 1 vn1 staff 78 Jul 25 15:49 .flutter -rw-r--r-- 1 vn1 staff 48 Aug 19 17:43 .gitconfig drwxr-xr-x 11 vn1 staff 352 Jul 7 19:21 .gradle drwxr-xr-x 5 vn1 staff 160 Aug 5 14:21 .idlerc drwxr-xr-x 3 vn1 staff 96 Aug 22 22:00 .ipynb_checkpoints drwxr-xr-x 3 vn1 staff 96 Aug 19 13:46 .ipython drwxr-xr-x 3 vn1 staff 96 Aug 19 17:58 .jupyter drwxr-xr-x 4 vn1 staff 128 Jul 5 19:16 .local drwxr-xr-x 3 vn1 staff 96 Jan 30 2022 .mono drwxr-xr-x 7 vn1 staff 224 Aug 24 14:06 .npm drwxr-xr-x 3 vn1 staff 96 Jul 10 14:27 .nuget drwxr-xr-x 97 vn1 staff 3104 Aug 15 09:19 .oracle_jre_usage drwxr-xr-x 4 vn1 staff 128 Jun 28 21:32 .plastic4 drwxr-xr-x 4 vn1 staff 128 Aug 6 15:46 .pub-cache -rw- 1 vn1 staff 20480 Jul 4 18:06 .random.swp drwx 3 vn1 staff 96 Aug 19 18:35 .ssh drwxr-xr-x 4 vn1 staff 128 Jun 27 09:14 .swiftpm -rw-r--r-- 1 vn1 staff 311 Aug 19 17:16 .tcshrc drwxr-xr-x 4 vn1 staff 128 Jul 3 20:18 .templateengine drwxr-xr-x 4 vn1 staff 128 Nov 21 2021 .thumbnails -rw- 1 vn1 staff 15717 Aug 22 22:50 .viminfo -rw-r--r--@ 1 vn1 staff 80 Nov 7 2021 .vimrc drwx 6 vn1 staff 192 Dec 12 2021 .vnc drwxr-xr-x 4 vn1 staff 128 Jul 3 22:30 .vscode -rw-r--r-- 1 vn1 staff 594 Aug 19 17:16 .xonshrc -rw- 1 vn1 staff 5075 Aug 25 14:03 .zsh_history drwx 66 vn1 staff 2112 Aug 26 13:15 .zsh_sessions -rw-r--r--@ 1 vn1 staff 533 Aug 19 17:16 .zshrc drwx@ 4 vn1 staff 128 Aug 18 13:16 Applications drwx@ 66 vn1 staff 2112 Aug 25 23:17 Desktop drwxr-xr-x 3 vn1 staff 96 Jul 25 15:36 Dev drwx@ 94 vn1 staff 3008 Aug 22 19:11 Documents drwx@ 829 vn1 staff 26528 Aug 26 08:04 Downloads -rw-r--r-- 1 vn1 staff 2496 Aug 22 22:47 FirstBash.ipynb drwxr-xr-x 5 vn1 staff 160 Jul 6 21:08 Java-Training-Exercises drwx@ 89 vn1 staff 2848 Aug 19 17:16 Library drwx 7 vn1 staff 224 Nov 3 2021 Movies drwx+ 6 vn1 staff 192 Nov 3 2021 Music drwx+ 6 vn1 staff 192 Nov 3 2021 Pictures drwxr-xr-x 5 vn1 staff 160 Aug 4 10:48 Projects drwxr-xr-x+ 4 vn1 staff 128 Nov 3 2021 Public -rw-r--r-- 1 vn1 staff 45 May 14 11:47 a.txt -rw-r--r-- 1 vn1 staff 844 Mar 4 15:31 airptone.mtl -rw-r--r-- 1 vn1 staff 376099 Mar 4 15:31 airptone.obj -rw-r--r-- 1 vn1 staff 844 Mar 4 15:23 chairptone.mtl -rw-r--r-- 1 vn1 staff 24840951 Mar 4 15:23 chairptone.obj -rw-r--r-- 1 vn1 staff 844 Mar 4 15:27 hairptone.mtl -rw-r--r--@ 1 vn1 staff 371107 Mar 4 15:27 hairptone.obj -rw-r--r-- 1 vn1 staff 1030 Mar 4 15:42 irptone.mtl -rw-r--r-- 1 vn1 staff 1771484 Mar 4 15:42 irptone.obj -rw-r--r-- 1 vn1 staff 844 Mar 4 15:21 lechairptone.mtl -rw-r--r-- 1 vn1 staff 24845830 Mar 4 15:21 lechairptone.obj -rw-r--r--@ 1 vn1 staff 743 May 14 14:31 macurmom.txt drwxr-xr-x 5 vn1 staff 160 Aug 19 20:59 myblog drwxr-xr-x 3 vn1 staff 96 Aug 19 17:12 opt -rw-r--r-- 1 vn1 staff 716 Mar 4 16:26 ptone.mtl -rw-r--r-- 1 vn1 staff 37095 Mar 4 16:26 ptone.obj -rw-r--r-- 1 vn1 staff 46 May 14 11:46 q -rw-r--r-- 1 vn1 staff 716 Mar 4 16:25 rptone.mtl -rw-r--r-- 1 vn1 staff 4635360 Mar 4 16:25 rptone.obj -rw-r--r-- 1 vn1 staff 219 Jun 5 22:34 ussy drwxr-xr-x 3 vn1 staff 96 Aug 22 22:44 vscode drwxr-xr-x 3 vn1 staff 96 Jul 3 23:26 wpilib . Hacks output 2 . Look for posts bash: cd: /_posts: No such file or directory /Users/vn1/vscode/APCSP/_notebooks total 232 -rw-r--r-- 1 vn1 staff 14243 Aug 22 22:44 2022-06-01-TT150-webapi_tutorial.ipynb -rw-r--r-- 1 vn1 staff 8653 Aug 22 22:44 2022-07-21-PBL-neo4j_intro.ipynb -rw-r--r-- 1 vn1 staff 13103 Aug 24 14:06 2022-08-22-TP110-python_hello.ipynb -rw-r--r-- 1 vn1 staff 20003 Aug 22 22:44 2022-08-22-TT110-anthony_and_sahil.ipynb -rw-r--r-- 1 vn1 staff 18006 Aug 26 13:16 2022-08-22-TT110-bash_tutorial.ipynb -rw-r--r-- 1 vn1 staff 10141 Aug 22 22:44 2022-08-29-TP120-python_lists.ipynb -rw-r--r-- 1 vn1 staff 12632 Aug 23 11:26 2022-09-05-TT130-js_tutorial.ipynb -rw-r--r-- 1 vn1 staff 771 Aug 22 22:44 README.md drwxr-xr-x 3 vn1 staff 96 Aug 22 22:44 images . hacks output 3 . Look for notebooks bash: cd: /_notebooks: No such file or directory /Users/vn1/vscode/APCSP/_notebooks total 232 -rw-r--r-- 1 vn1 staff 14243 Aug 22 22:44 2022-06-01-TT150-webapi_tutorial.ipynb -rw-r--r-- 1 vn1 staff 8653 Aug 22 22:44 2022-07-21-PBL-neo4j_intro.ipynb -rw-r--r-- 1 vn1 staff 13103 Aug 24 14:06 2022-08-22-TP110-python_hello.ipynb -rw-r--r-- 1 vn1 staff 20003 Aug 22 22:44 2022-08-22-TT110-anthony_and_sahil.ipynb -rw-r--r-- 1 vn1 staff 19020 Aug 26 13:24 2022-08-22-TT110-bash_tutorial.ipynb -rw-r--r-- 1 vn1 staff 10141 Aug 22 22:44 2022-08-29-TP120-python_lists.ipynb -rw-r--r-- 1 vn1 staff 12632 Aug 23 11:26 2022-09-05-TT130-js_tutorial.ipynb -rw-r--r-- 1 vn1 staff 771 Aug 22 22:44 README.md drwxr-xr-x 3 vn1 staff 96 Aug 22 22:44 images . . Number 4 . Look for images in notebooks, print working directory, list files bash: cd: /_notebooks/images: No such file or directory /Users/vn1/vscode/APCSP/_notebooks total 232 -rw-r--r-- 1 vn1 staff 14243 Aug 22 22:44 2022-06-01-TT150-webapi_tutorial.ipynb -rw-r--r-- 1 vn1 staff 8653 Aug 22 22:44 2022-07-21-PBL-neo4j_intro.ipynb -rw-r--r-- 1 vn1 staff 13103 Aug 24 14:06 2022-08-22-TP110-python_hello.ipynb -rw-r--r-- 1 vn1 staff 20003 Aug 22 22:44 2022-08-22-TT110-anthony_and_sahil.ipynb -rw-r--r-- 1 vn1 staff 19020 Aug 26 13:24 2022-08-22-TT110-bash_tutorial.ipynb -rw-r--r-- 1 vn1 staff 10141 Aug 22 22:44 2022-08-29-TP120-python_lists.ipynb -rw-r--r-- 1 vn1 staff 12632 Aug 23 11:26 2022-09-05-TT130-js_tutorial.ipynb -rw-r--r-- 1 vn1 staff 771 Aug 22 22:44 README.md drwxr-xr-x 3 vn1 staff 96 Aug 22 22:44 images . Printing .md file contents . { . # My Blog _powered by [fastpages](https://github.com/fastai/fastpages)_ ## What To Do Next? Great! You have setup your repo. Now its time to start writing content. Some helpful links: - [Writing Blogs With Jupyter](https://github.com/fastai/fastpages#writing-blog-posts-with-jupyter) - [Writing Blogs With Markdown](https://github.com/fastai/fastpages#writing-blog-posts-with-markdown) - [Writing Blog Posts With Word](https://github.com/fastai/fastpages#writing-blog-posts-with-microsoft-word) - [(Optional) Preview Your Blog Locally](_fastpages_docs/DEVELOPMENT.md) Note: you may want to remove example blog posts from the `_posts`, `_notebooks` or `_word` folders (but leave them empty, don&#39;t delete these folders) if you don&#39;t want these blog posts to appear on your site. Please use the [nbdev &amp; blogging channel](https://forums.fast.ai/c/fastai-users/nbdev/48) in the fastai forums for any questions or feature requests. . } . Answers to Hacks . echo &quot;We can verify tools by using conditional commands to tell us about the versions&quot; echo &quot;We can use conda list to check all installed packages and their version&quot; echo &quot;use git add to add any relevant files, use git commit to commit to the relevant repository, and use git push to push changes to the master branch&quot; echo &quot;We can create a script to install automatically&quot; . We can verify tools by using conditional commands to tell us about the versions We can use conda list to check all installed packages and their version use git add to add any relevant files, use git commit to commit to the relevant repository, and use git push to push changes to the master branch We can create a script to install automatically . echo &quot;Using conditional statement to create a project directory and project&quot; echo &quot;Directory /Users/vn1/vscode exists.&quot; echo &quot;Directory /Users/vn1/vscode/APCSP exists.&quot; .",
            "url": "https://nvarap.github.io/blog/Hacks/BashOne",
            "relUrl": "/Hacks/BashOne",
            "date": " • Aug 20, 2022"
        }
        
    
  
    
        ,"post72": {
            "title": "Pillow Extra stuff",
            "content": "import PIL from PIL import Image data = [[1,0,1,0], [0, 1, 0 , 1]] # Right now this will print out an error image, meaning there is an error # in the array, using trial and error (and knowing you&#39;ll be using nested loops) # try to get the above design, def all_same(TwoDMatrix): try: constant = len(TwoDMatrix[0]) for array in TwoDMatrix: if len(array) != constant: return False except: return False return True def generate_from_array(TwoDMatrix, pixel=100): if all_same(TwoDMatrix): height = len(TwoDMatrix) length = len(TwoDMatrix[0]) paste_img = Image.new(&#39;RGB&#39;,(pixel, pixel),(255,0,0)) else: return Image.open(&quot;../images/err.png&quot;) contact_sheet=PIL.Image.new(&#39;RGB&#39;, (pixel*length, pixel*height)) box_Coord = [0, 0] for array in TwoDMatrix: for bin in array: if bin == 1: contact_sheet.paste(paste_img, (box_Coord[0], box_Coord[1]) ) else: pass if box_Coord[0] + pixel &gt; contact_sheet.width-pixel: box_Coord[0] = 0 box_Coord[1] += pixel else: box_Coord[0] += pixel return contact_sheet sheet = generate_from_array(data, pixel=25) display(sheet) .",
            "url": "https://nvarap.github.io/blog/Hacks/algHacks",
            "relUrl": "/Hacks/algHacks",
            "date": " • Apr 12, 2022"
        }
        
    
  
    
        ,"post73": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://nvarap.github.io/blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post74": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://nvarap.github.io/blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "About Me",
          "content": "This blog pertains to Varaprasad N, APCSP 1 Student. . Hobbies . I enjoy playing multiple games, mainly board games or TCGs 2 such as . The Pokémon TCG | The Yu-Gi-Oh TCG | Magic: The Gathering | . I also love to play Dungeons and Dragons, a TTRPG 3. I am also the President of the Tabletop Games club at my school . Clubs . I am a part of the Model United Nations Club, Dungeons and Dragons club, and Robotics . . Advanced Placement: Computer Science &#8617; . | Trading Card Games &#8617; . | Table Top RPG &#8617; . |",
          "url": "https://nvarap.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "Unit 3 Hacks List",
          "content": "&lt;li&gt; &lt;a href=&quot;/hacks/algorithm/2022/12/15/graaades.html&quot;&gt;Grade Reviews Week 16&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;/Hacks/undeci&quot;&gt;Sections 17-18&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;/Hacks/skimul&quot;&gt;Sections 16&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;/Hacks/madlibs&quot;&gt;Sections 14-15&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;/Hacks/procabs&quot;&gt;Sections 12-13&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;/hacks/algorithm/2022/12/07/Vocab.html&quot;&gt;Grade Reviews Week 16&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;/Hacks/bnsch&quot;&gt;Sections 9 and 11&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;/hacks/algorithm/2022/12/02/reflectionWeek13.html&quot;&gt;Grade Reviews Week 14&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;/hacks/algorithm/2022/12/01/dash-br.html&quot;&gt;Sections 5-7&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;/Hacks/please&quot;&gt;Sections 3-4&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;/hacks/algorithm/2022/11/28/All-The-Questions.html&quot;&gt;Section 1-2 hacks&lt;/a&gt; &lt;/li&gt; .",
          "url": "https://nvarap.github.io/blog/lsting/",
          "relUrl": "/lsting/",
          "date": ""
      }
      
  

  

  
      ,"page5": {
          "title": "",
          "content": "Table . Member Role .",
          "url": "https://nvarap.github.io/blog/omega/jstable",
          "relUrl": "/omega/jstable",
          "date": ""
      }
      
  

  

  

  
  

  

  
  

  
      ,"page11": {
          "title": "Backlog",
          "content": "Educational Tips Fun Zone (Create Task Ideas) Blogging and Review . Try doing practice tests | Simple quiz | Blog experience and errors | . Do corrections on practice assessments | Minesweeper | Pseudocode | . Use Khan Academy | Adventure Game (similarly to atari’s) | Review with friends, take videos | . Take notes | Weather App? | Record specific techniques, code used between teammates | .",
          "url": "https://nvarap.github.io/blog/sprintbacklog/",
          "relUrl": "/sprintbacklog/",
          "date": ""
      }
      
  

  

  

  

  
      ,"page15": {
          "title": "Vocab Unit 3",
          "content": "Unit 3 Vocab . Bits, Bytes, Hexadecimal / Nibbles : Various ways of representing data. Binary Numbers: Unsigned Integer, Signed Integer, Floating Point - Floating points are decimals, unsigned integers are integers without a sing (abs value), and signed integers have signs Binary Data Abstractions: Boolean, ASCII, Unicode, RGB - these are various representations of binary, ASCII is characters, unicode and RGB are colors, booleans are 1s and 0, on and off Data Compression: Lossy, Lossless (not discussed yet) - lossy is compressing, but you may lose data. Lossless is the opposite, as it does not lose data. . Unit 3… Algorithm/Programming Terms - . Variables, Data Types, Assignment Operators - Variables are variable holders of values, data types are the types of what they can be, and assignment operators assign values to variables . Managing Complexity with Variables: Lists, 2D Lists, Dictionaries, Class Algorithms, Sequence, Selection, Iteration - These are ways to manage complexity through abstraction of various data and procedures that influence . Expressions and Iteration, Truth Tables - ways of representing true and false operators, mainly between the 1s and 0s of binary. True trumps false in OR, but fails to in AND. . Characters, Strings, Length, Concatenation, Upper, Lower, Traversing Strings - Strings are plaintext, and these are various ways of manipulating strings. Making them upper and lower case, adding more string to the string, and iterating over them. . Python If, Elif, Else conditionals; Nested Selection Statements - Conditionals, if checks if something is true. Elif checks if the above if statement isn’t true, and else checks if nothing above ois true. . Python For, While loops with Range, with List - various loops to iterate over iterables. While loops have a conditional, loop over range loops over a range of numbers, and for loops over an iterable. . Combining loops with conditionals to Break, Continue - continue resets the loop, break breaks out of it . Procedural Abstraction, Python Def procedures, Parameters, Return Values - Ways of managing complexity in repeatable procedures (def in python). These return return values and contain parameters that influence the output. . Decidable problems: You can develop an algorithm for these problems, specifically yes or no . Undecidable problem: No algorithm can be used in order to provide a correct yes or no problems. . Problem: description of a task that may or may not be able to be solved through the use of an algorithm Decision problem: A problem with a binary answer Algorithm: A series of ways to solve a problem. Process or a set of rules . 1, 2, 3, and 4 step | 1: Linear | 2: Exponential | 3: Square | 4: Factorial Superpolynomial: Offers an incredibly small amount of data incredibly large amounts of time. | . Simulation: Simulates a real-world experiment (abstraction of a complicated phenomena) . Removes unnecessary details | Level of abstraction depends on who/why we’re creating it | Ex: A flying simulator | . Documentation: The what, how, or why of the code Libraries: Prewritten code or procedures that can be used to maximize efficiency API: Data stored in a database that can be accessed via code . Random: A library in python to assist in pseudo-randomness . Method/Function/Procedure - A set of code that can be run as a package, that takes in parameters and returns a return value . Example: add(1, 2), which adds two numbers | Catch all terms for a set of code | . Parameter - Input values for procedures . Procedure: is a named group of programming instructions that serves a purpose . Parameter: are input values of a procedure ^ There are two types of procedures, one that returns a value or some type of data and on that just executes a block of statements (void) . Modularity - the practice of breaking a complex program into smaller, independent parts or modules that can be used and reused in different parts of the program . Binary Search: An algorithm to search methodically for an item in a sorted list . Algorithms: Steps in order repeated or run through to accomplish a task . Problem: description of a task that may or may not be able to be solved through the use of an algorithm Decision problem: A problem with a binary answer Algorithm: A series of ways to solve a problem. Process or a set of rules . 1, 2, 3, and 4 step | 1: Linear | 2: Exponential | 3: Square | 4: Factorial Superpolynomial: Offers an incredibly small amount of data incredibly large amounts of time. | .",
          "url": "https://nvarap.github.io/blog/vocabunit2/",
          "relUrl": "/vocabunit2/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  

  

  

  

  
  

  
      ,"page24": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://nvarap.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}
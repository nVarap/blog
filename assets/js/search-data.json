{
  
    
        "post0": {
            "title": "Python List and Dictionaries",
            "content": "Hacks One: . Add records to InfoDB . from distutils.log import info InfoDb = [] InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;4Runner&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Varalu&quot;, &quot;LastName&quot;: &quot;N&quot;, &quot;DOB&quot;: &quot;April 15&quot;, &quot;Residence&quot;: &quot;San Jose&quot;, &quot;Email&quot;: &quot;lcopebozo2@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;Lemon&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Chinmay&quot;, &quot;LastName&quot;: &quot;R&quot;, &quot;DOB&quot;: &quot;April 20&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;chinmay@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;Bugatti Chiron&quot;] }) print(InfoDb) . [{&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortensen&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;jmortensen@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;4Runner&#39;]}, {&#39;FirstName&#39;: &#39;Varalu&#39;, &#39;LastName&#39;: &#39;N&#39;, &#39;DOB&#39;: &#39;April 15&#39;, &#39;Residence&#39;: &#39;San Jose&#39;, &#39;Email&#39;: &#39;lcopebozo2@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Lemon&#39;]}, {&#39;FirstName&#39;: &#39;Chinmay&#39;, &#39;LastName&#39;: &#39;R&#39;, &#39;DOB&#39;: &#39;April 20&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;chinmay@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Bugatti Chiron&#39;]}] . Hack 2: Iterate through a dictionary and list . Use a for loop to iterate through the list, and use another for loop in order to loop through the keys in the dictionary . for elem in InfoDb: # iterate through list print(elem) for key in elem: # iterate through dictionaries in list print(key) # print key print(elem[key]) # print value . {&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortensen&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;jmortensen@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]} FirstName John LastName Mortensen DOB October 21 Residence San Diego Email jmortensen@powayusd.com Owns_Cars [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;] {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;4Runner&#39;]} FirstName Sunny LastName Naidu DOB August 2 Residence Temecula Email snaidu@powayusd.com Owns_Cars [&#39;4Runner&#39;] {&#39;FirstName&#39;: &#39;Varalu&#39;, &#39;LastName&#39;: &#39;N&#39;, &#39;DOB&#39;: &#39;April 15&#39;, &#39;Residence&#39;: &#39;San Jose&#39;, &#39;Email&#39;: &#39;lcopebozo2@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Lemon&#39;]} FirstName Varalu LastName N DOB April 15 Residence San Jose Email lcopebozo2@gmail.com Owns_Cars [&#39;Lemon&#39;] {&#39;FirstName&#39;: &#39;Chinmay&#39;, &#39;LastName&#39;: &#39;R&#39;, &#39;DOB&#39;: &#39;April 20&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;chinmay@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Bugatti Chiron&#39;]} FirstName Chinmay LastName R DOB April 20 Residence San Diego Email chinmay@gmail.com Owns_Cars [&#39;Bugatti Chiron&#39;] . Hacks 3: Other Questions . Would it be possible to output data in a reverse order? | Are there other methods that can be performed on lists? | Could you create new or add to dictionary data set? Could you do it with input? | Make a quiz that stores in a List of Dictionaries. | . Hacks 3.1: . Yes, using reverse indexing [-1]. -1 Accesses the back of the list . for i in range(len(InfoDb)): print(InfoDb[-(i+1)]) # -0 is still the first index print() . {&#39;FirstName&#39;: &#39;Chinmay&#39;, &#39;LastName&#39;: &#39;R&#39;, &#39;DOB&#39;: &#39;April 20&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;chinmay@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Bugatti Chiron&#39;]} {&#39;FirstName&#39;: &#39;Varalu&#39;, &#39;LastName&#39;: &#39;N&#39;, &#39;DOB&#39;: &#39;April 15&#39;, &#39;Residence&#39;: &#39;San Jose&#39;, &#39;Email&#39;: &#39;lcopebozo2@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Lemon&#39;]} {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;4Runner&#39;]} {&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortensen&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;jmortensen@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]} . Hacks 3.2 . Yes, there are a myriad of different list methods, i.e . pop | remove | sorted | sort | count | extend | reverse, etc. | . lst = [1,2,3,4,5,6] lst.append(7) print(lst) lst.pop() print(lst) lst.remove(3) print(lst) lst.insert(3, 212) print(lst) lst.clear() print(lst) . [1, 2, 3, 4, 5, 6, 7] [1, 2, 3, 4, 5, 6] [1, 2, 4, 5, 6] [1, 2, 4, 212, 5, 6] [] . Hacks 3.3 . You can add and create new keys to a dictionary using input, by assigning keys using: . dictkey[keyname] = key | . dictionary = {} keyname = input(&quot;keyname&quot;) keyval = input(&quot;keyval&quot;) dictionary[keyname] = keyval print(dictionary) . {&#39;hello&#39;: &#39;world&#39;} .",
            "url": "https://nvarap.github.io/blog/Hacks/PythonLAD",
            "relUrl": "/Hacks/PythonLAD",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Title",
            "content": "",
            "url": "https://nvarap.github.io/blog/2022/08/30/HTMLHacks.html",
            "relUrl": "/2022/08/30/HTMLHacks.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Firstword",
            "content": "HIPA stands for . Historical Context . | Intended Audience . | Purpose . | Author’s point of view . | . Historical Context . What, when, where, or why was this document written. Was it an event, a circumstance, a area in turmoil (i.e declaration of independence) . Intended Audience . Who is the author aiming to find as a recipient of this document . Purpose . What is the agenda of the document, what does the author want them to do? . Author’s POV (not just their point of view) . What aspect of the author’s identity, what part of their life, is influencing them to write this document (i.e what may be causing them to write this, or their bias) . https://docs.google.com/document/d/1qkWp6yySOkD7ltoNbVYkjUTVBFl_uwN0hbAtsan_3xg/edit . H: . Coming off of a warring states period . | Age of turmoil . | Period of unrest, leading to a want for change . | . I: . Chinese citizens, for all involved . | . P: . Gain followers . | Have people support their ideology . | Use the lessons provided by the Analect . | People who follow should follow morally, those who rule should lead with morality . | . APOV: . Affiliated with Confucius and his teachings . | They believe in Confucianism and his teachings . | Educated, have a scholarly sense . | Aristocratic . Benefits them, harmony, status, etc. . | . | .",
            "url": "https://nvarap.github.io/blog/2022/08/29/FirstWord.html",
            "relUrl": "/2022/08/29/FirstWord.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Python Hacks",
            "content": "Hack 1 . Import quiz.py run the program steps: . download the quiz.py file | cd to the file either through vscode or terminal | use python quiz.py | input your answers! | . import PIL from PIL import Image im = Image.open(&quot;/Users/vn1/myblog/blog/images/pythonHacks.png&quot;) display(im) . Hacks Pseudocode . import sys, getpass PROCEDURE qandresp (question) . DISPLAY question | answer &lt;-- input | RETURN answer | . QandA &lt;-- Dictionary(Questions and answers) . correct &lt;-- 0 . DISPLAY welcome {user} . DISPLAY length QandA . REPEAT for each key in QandA:- rsp &lt;-- qandresp(key).toLowerCase()- IF (rsp == QandA(key)) . - DISPLAY correct - correct &lt;-- correct +1 - ELSE: - DISPLAY wrong! . percent &lt;-- str(round(correct/QandA), 2) 2 is two decimal points DISPLAY user, you scored str(correct) / str(len(QandA)) DISPLAY percent . import getpass, sys # import packages def qandresp(question): # enter question, return inputted answer print(question) answer = input() return answer QandA = { # dictionary contains Q &amp; A pairs &quot;What command is used to include other functions that were previously developed?&quot; : &quot;import&quot;, &quot;What command is used to evaluate correct or incorrect response in this example?&quot; : &quot;if&quot;, &quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot; : &quot;expression&quot;, &quot;What word means to assign a value to a variable&quot; : &quot;define&quot;, &quot;What keyword is used to output value from a function that is not print&quot; : &quot;return&quot;, &quot;What function is used to typecast to type string (do not include parenthesis)&quot; : &quot;str&quot; } correct = 0 # Setup print(&quot;Hello, &quot; + getpass.getuser() + &quot;. You are running on &quot; + sys.executable) print(&quot;Current number of questions &quot; + str(len(QandA))) # iterate over each key for key in QandA: rsp = qandresp(key) rsp = rsp.lower() if rsp == QandA[key]: # check if the response is equal to the answer print(f&quot;Corret! Your answer was {rsp}&quot;) correct += 1 else: print(f&quot;{rsp} is incorrect&quot;) percent = str(round(correct/len(QandA), 2)*100) # calculate percentage (use len for future changes) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(len(QandA))) print(f&quot;This is {percent}%&quot;) # print score and percentage . Hello, vn1. You are running on /usr/local/bin/python3 Current number of questions 6 What command is used to include other functions that were previously developed? Corret! Your answer was import What command is used to evaluate correct or incorrect response in this example? not if is incorrect Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? Corret! Your answer was expression What word means to assign a value to a variable Corret! Your answer was define What keyword is used to output value from a function that is not print not return is incorrect What function is used to typecast to type string (do not include parenthesis) Corret! Your answer was str vn1 you scored 4/6 This is 67.0% .",
            "url": "https://nvarap.github.io/blog/Hacks/PythonHacks",
            "relUrl": "/Hacks/PythonHacks",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Fastpages Hacks",
            "content": "{ toc: true layout: post description: A minimal example of using markdown with fastpages. categories: [markdown] title: An Example Markdown Post } . this is how to create a layout for a page (put this at the top of your .md or HTML file) .",
            "url": "https://nvarap.github.io/blog/hacks/2022/08/24/FastpageHacks.html",
            "relUrl": "/hacks/2022/08/24/FastpageHacks.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Markdown",
            "content": "First markdown text . include markdown text .",
            "url": "https://nvarap.github.io/blog/markdown/2022/08/21/Markdown.html",
            "relUrl": "/markdown/2022/08/21/Markdown.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "first python post",
            "content": "print(&quot;&quot;&quot;hello world this is the first python notebook I will be adding to my blog&quot;&quot;&quot;) # hello world . hello world this is the first python notebook I will be adding to my blog .",
            "url": "https://nvarap.github.io/blog/Notebooks/PythonOne",
            "relUrl": "/Notebooks/PythonOne",
            "date": " • Aug 20, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "First Bash Project",
            "content": "str=&quot;bash&quot; echo $str # displays first iteration of str, where it equals bash str=&quot;newbash&quot; # override variable echo $str # displays new iteration of str, as newbash . bash newbash . export project_dir=$HOME/vscode export project=project_dir/APCSP export repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; cd ~ if [ ! -d $project_dir ] then echo &quot;Creating project dir at $project_dir as it doesn&#39;t exist&quot; mkdir -p $project_dir fi echo &quot;$project_dir exists&quot; if [ ! -d $project ] then echo &quot;Directory exists but not subdir $project. Cloning into subdir&quot; cd $project_dir git clone $repo cd ~ fi echo &quot; project exists, all set! &quot; . /Users/vn1/vscode exists Directory exists but not subdir project_dir/APCSP. Cloning into subdir fatal: destination path &#39;APCSP&#39; already exists and is not an empty directory. project exists, all set! . Answers to hacks . We can verify tools by using conditional commands to tell us about the versions | We can use conda list to check all installed packages and their version | use git add to add any relevant files, use git commit to commit to the relevant repository, and use git push to push changes to the master branch | We can create a script. | . Hacks output 1 . Navigate to project, then navigate to area wwhere files were cloned /Users/vn1 . list top level or root of files with project pulled from github Applications Public macurmom.txt Desktop a.txt myblog Dev airptone.mtl opt Documents airptone.obj ptone.mtl Downloads chairptone.mtl ptone.obj FirstBash.ipynb chairptone.obj q Java-Training-Exercises hairptone.mtl rptone.mtl Library hairptone.obj rptone.obj Movies irptone.mtl ussy Music irptone.obj vscode Pictures lechairptone.mtl wpilib Projects lechairptone.obj . list again with hidden files pulled from github . .local Movies .. .mono Music .CFUserTextEncoding .npm Pictures .DS_Store .nuget Projects .IdentityService .oracle_jre_usage Public .Trash .plastic4 a.txt .anaconda .pub-cache airptone.mtl .android .random.swp airptone.obj .bash_history .ssh chairptone.mtl .bash_profile .swiftpm chairptone.obj .bash_sessions .tcshrc hairptone.mtl .cache .templateengine hairptone.obj .conda .thumbnails irptone.mtl .condarc .viminfo irptone.obj .config .vimrc lechairptone.mtl .continuum .vnc lechairptone.obj .cshrc .vscode macurmom.txt .cshrc.pysave .xonshrc myblog .cups .zsh_history opt .dart .zsh_sessions ptone.mtl .dartServer .zshrc ptone.obj .dotnet Applications q .flutter Desktop rptone.mtl .gitconfig Dev rptone.obj .gradle Documents ussy .idlerc Downloads vscode .ipynb_checkpoints FirstBash.ipynb wpilib .ipython Java-Training-Exercises .jupyter Library . list all files in long format total 111472 drwxr-x+ 85 vn1 staff 2720 Aug 26 13:15 . drwxr-xr-x 7 root admin 224 Aug 10 23:44 .. -r-- 1 vn1 staff 7 Nov 3 2021 .CFUserTextEncoding -rw-r--r--@ 1 vn1 staff 12292 Aug 25 14:03 .DS_Store drwxr-xr-x 7 vn1 staff 224 Aug 19 17:20 .IdentityService drwx+ 24 vn1 staff 768 Aug 25 18:05 .Trash drwxr-xr-x 3 vn1 staff 96 Aug 18 13:34 .anaconda drwxr-xr-x 7 vn1 staff 224 Jul 25 16:33 .android -rw- 1 vn1 staff 25628 Aug 25 21:47 .bash_history -rw-r--r-- 1 vn1 staff 487 Aug 19 17:16 .bash_profile drwx 23 vn1 staff 736 Aug 25 14:03 .bash_sessions drwxr-xr-x 3 vn1 staff 96 Jul 3 22:37 .cache drwxr-xr-x 4 vn1 staff 128 Aug 22 23:04 .conda -rw-r--r-- 1 vn1 staff 23 Aug 18 13:37 .condarc drwxr-xr-x 10 vn1 staff 320 Aug 19 18:00 .config drwxr-xr-x 3 vn1 staff 96 Aug 18 13:35 .continuum -rw-r--r--@ 1 vn1 staff 616 Nov 13 2021 .cshrc -rw-r--r--@ 1 vn1 staff 463 Nov 7 2021 .cshrc.pysave drwx 3 vn1 staff 96 Nov 18 2021 .cups drwxr-xr-x 5 vn1 staff 160 Jul 26 14:47 .dart drwxr-xr-x 5 vn1 staff 160 Jul 27 14:31 .dartServer drwxr-xr-x 3 vn1 staff 96 Jul 9 11:31 .dotnet -rw-r--r-- 1 vn1 staff 78 Jul 25 15:49 .flutter -rw-r--r-- 1 vn1 staff 48 Aug 19 17:43 .gitconfig drwxr-xr-x 11 vn1 staff 352 Jul 7 19:21 .gradle drwxr-xr-x 5 vn1 staff 160 Aug 5 14:21 .idlerc drwxr-xr-x 3 vn1 staff 96 Aug 22 22:00 .ipynb_checkpoints drwxr-xr-x 3 vn1 staff 96 Aug 19 13:46 .ipython drwxr-xr-x 3 vn1 staff 96 Aug 19 17:58 .jupyter drwxr-xr-x 4 vn1 staff 128 Jul 5 19:16 .local drwxr-xr-x 3 vn1 staff 96 Jan 30 2022 .mono drwxr-xr-x 7 vn1 staff 224 Aug 24 14:06 .npm drwxr-xr-x 3 vn1 staff 96 Jul 10 14:27 .nuget drwxr-xr-x 97 vn1 staff 3104 Aug 15 09:19 .oracle_jre_usage drwxr-xr-x 4 vn1 staff 128 Jun 28 21:32 .plastic4 drwxr-xr-x 4 vn1 staff 128 Aug 6 15:46 .pub-cache -rw- 1 vn1 staff 20480 Jul 4 18:06 .random.swp drwx 3 vn1 staff 96 Aug 19 18:35 .ssh drwxr-xr-x 4 vn1 staff 128 Jun 27 09:14 .swiftpm -rw-r--r-- 1 vn1 staff 311 Aug 19 17:16 .tcshrc drwxr-xr-x 4 vn1 staff 128 Jul 3 20:18 .templateengine drwxr-xr-x 4 vn1 staff 128 Nov 21 2021 .thumbnails -rw- 1 vn1 staff 15717 Aug 22 22:50 .viminfo -rw-r--r--@ 1 vn1 staff 80 Nov 7 2021 .vimrc drwx 6 vn1 staff 192 Dec 12 2021 .vnc drwxr-xr-x 4 vn1 staff 128 Jul 3 22:30 .vscode -rw-r--r-- 1 vn1 staff 594 Aug 19 17:16 .xonshrc -rw- 1 vn1 staff 5075 Aug 25 14:03 .zsh_history drwx 66 vn1 staff 2112 Aug 26 13:15 .zsh_sessions -rw-r--r--@ 1 vn1 staff 533 Aug 19 17:16 .zshrc drwx@ 4 vn1 staff 128 Aug 18 13:16 Applications drwx@ 66 vn1 staff 2112 Aug 25 23:17 Desktop drwxr-xr-x 3 vn1 staff 96 Jul 25 15:36 Dev drwx@ 94 vn1 staff 3008 Aug 22 19:11 Documents drwx@ 829 vn1 staff 26528 Aug 26 08:04 Downloads -rw-r--r-- 1 vn1 staff 2496 Aug 22 22:47 FirstBash.ipynb drwxr-xr-x 5 vn1 staff 160 Jul 6 21:08 Java-Training-Exercises drwx@ 89 vn1 staff 2848 Aug 19 17:16 Library drwx 7 vn1 staff 224 Nov 3 2021 Movies drwx+ 6 vn1 staff 192 Nov 3 2021 Music drwx+ 6 vn1 staff 192 Nov 3 2021 Pictures drwxr-xr-x 5 vn1 staff 160 Aug 4 10:48 Projects drwxr-xr-x+ 4 vn1 staff 128 Nov 3 2021 Public -rw-r--r-- 1 vn1 staff 45 May 14 11:47 a.txt -rw-r--r-- 1 vn1 staff 844 Mar 4 15:31 airptone.mtl -rw-r--r-- 1 vn1 staff 376099 Mar 4 15:31 airptone.obj -rw-r--r-- 1 vn1 staff 844 Mar 4 15:23 chairptone.mtl -rw-r--r-- 1 vn1 staff 24840951 Mar 4 15:23 chairptone.obj -rw-r--r-- 1 vn1 staff 844 Mar 4 15:27 hairptone.mtl -rw-r--r--@ 1 vn1 staff 371107 Mar 4 15:27 hairptone.obj -rw-r--r-- 1 vn1 staff 1030 Mar 4 15:42 irptone.mtl -rw-r--r-- 1 vn1 staff 1771484 Mar 4 15:42 irptone.obj -rw-r--r-- 1 vn1 staff 844 Mar 4 15:21 lechairptone.mtl -rw-r--r-- 1 vn1 staff 24845830 Mar 4 15:21 lechairptone.obj -rw-r--r--@ 1 vn1 staff 743 May 14 14:31 macurmom.txt drwxr-xr-x 5 vn1 staff 160 Aug 19 20:59 myblog drwxr-xr-x 3 vn1 staff 96 Aug 19 17:12 opt -rw-r--r-- 1 vn1 staff 716 Mar 4 16:26 ptone.mtl -rw-r--r-- 1 vn1 staff 37095 Mar 4 16:26 ptone.obj -rw-r--r-- 1 vn1 staff 46 May 14 11:46 q -rw-r--r-- 1 vn1 staff 716 Mar 4 16:25 rptone.mtl -rw-r--r-- 1 vn1 staff 4635360 Mar 4 16:25 rptone.obj -rw-r--r-- 1 vn1 staff 219 Jun 5 22:34 ussy drwxr-xr-x 3 vn1 staff 96 Aug 22 22:44 vscode drwxr-xr-x 3 vn1 staff 96 Jul 3 23:26 wpilib . Hacks output 2 . Look for posts bash: cd: /_posts: No such file or directory /Users/vn1/vscode/APCSP/_notebooks total 232 -rw-r--r-- 1 vn1 staff 14243 Aug 22 22:44 2022-06-01-TT150-webapi_tutorial.ipynb -rw-r--r-- 1 vn1 staff 8653 Aug 22 22:44 2022-07-21-PBL-neo4j_intro.ipynb -rw-r--r-- 1 vn1 staff 13103 Aug 24 14:06 2022-08-22-TP110-python_hello.ipynb -rw-r--r-- 1 vn1 staff 20003 Aug 22 22:44 2022-08-22-TT110-anthony_and_sahil.ipynb -rw-r--r-- 1 vn1 staff 18006 Aug 26 13:16 2022-08-22-TT110-bash_tutorial.ipynb -rw-r--r-- 1 vn1 staff 10141 Aug 22 22:44 2022-08-29-TP120-python_lists.ipynb -rw-r--r-- 1 vn1 staff 12632 Aug 23 11:26 2022-09-05-TT130-js_tutorial.ipynb -rw-r--r-- 1 vn1 staff 771 Aug 22 22:44 README.md drwxr-xr-x 3 vn1 staff 96 Aug 22 22:44 images . hacks output 3 . Look for notebooks bash: cd: /_notebooks: No such file or directory /Users/vn1/vscode/APCSP/_notebooks total 232 -rw-r--r-- 1 vn1 staff 14243 Aug 22 22:44 2022-06-01-TT150-webapi_tutorial.ipynb -rw-r--r-- 1 vn1 staff 8653 Aug 22 22:44 2022-07-21-PBL-neo4j_intro.ipynb -rw-r--r-- 1 vn1 staff 13103 Aug 24 14:06 2022-08-22-TP110-python_hello.ipynb -rw-r--r-- 1 vn1 staff 20003 Aug 22 22:44 2022-08-22-TT110-anthony_and_sahil.ipynb -rw-r--r-- 1 vn1 staff 19020 Aug 26 13:24 2022-08-22-TT110-bash_tutorial.ipynb -rw-r--r-- 1 vn1 staff 10141 Aug 22 22:44 2022-08-29-TP120-python_lists.ipynb -rw-r--r-- 1 vn1 staff 12632 Aug 23 11:26 2022-09-05-TT130-js_tutorial.ipynb -rw-r--r-- 1 vn1 staff 771 Aug 22 22:44 README.md drwxr-xr-x 3 vn1 staff 96 Aug 22 22:44 images . . Number 4 . Look for images in notebooks, print working directory, list files bash: cd: /_notebooks/images: No such file or directory /Users/vn1/vscode/APCSP/_notebooks total 232 -rw-r--r-- 1 vn1 staff 14243 Aug 22 22:44 2022-06-01-TT150-webapi_tutorial.ipynb -rw-r--r-- 1 vn1 staff 8653 Aug 22 22:44 2022-07-21-PBL-neo4j_intro.ipynb -rw-r--r-- 1 vn1 staff 13103 Aug 24 14:06 2022-08-22-TP110-python_hello.ipynb -rw-r--r-- 1 vn1 staff 20003 Aug 22 22:44 2022-08-22-TT110-anthony_and_sahil.ipynb -rw-r--r-- 1 vn1 staff 19020 Aug 26 13:24 2022-08-22-TT110-bash_tutorial.ipynb -rw-r--r-- 1 vn1 staff 10141 Aug 22 22:44 2022-08-29-TP120-python_lists.ipynb -rw-r--r-- 1 vn1 staff 12632 Aug 23 11:26 2022-09-05-TT130-js_tutorial.ipynb -rw-r--r-- 1 vn1 staff 771 Aug 22 22:44 README.md drwxr-xr-x 3 vn1 staff 96 Aug 22 22:44 images . Printing .md file contents . { . # My Blog _powered by [fastpages](https://github.com/fastai/fastpages)_ ## What To Do Next? Great! You have setup your repo. Now its time to start writing content. Some helpful links: - [Writing Blogs With Jupyter](https://github.com/fastai/fastpages#writing-blog-posts-with-jupyter) - [Writing Blogs With Markdown](https://github.com/fastai/fastpages#writing-blog-posts-with-markdown) - [Writing Blog Posts With Word](https://github.com/fastai/fastpages#writing-blog-posts-with-microsoft-word) - [(Optional) Preview Your Blog Locally](_fastpages_docs/DEVELOPMENT.md) Note: you may want to remove example blog posts from the `_posts`, `_notebooks` or `_word` folders (but leave them empty, don&#39;t delete these folders) if you don&#39;t want these blog posts to appear on your site. Please use the [nbdev &amp; blogging channel](https://forums.fast.ai/c/fastai-users/nbdev/48) in the fastai forums for any questions or feature requests. . } . Answers to Hacks . echo &quot;We can verify tools by using conditional commands to tell us about the versions&quot; echo &quot;We can use conda list to check all installed packages and their version&quot; echo &quot;use git add to add any relevant files, use git commit to commit to the relevant repository, and use git push to push changes to the master branch&quot; echo &quot;We can create a script to install automatically&quot; . We can verify tools by using conditional commands to tell us about the versions We can use conda list to check all installed packages and their version use git add to add any relevant files, use git commit to commit to the relevant repository, and use git push to push changes to the master branch We can create a script to install automatically . echo &quot;Using conditional statement to create a project directory and project&quot; echo &quot;Directory /Users/vn1/vscode exists.&quot; echo &quot;Directory /Users/vn1/vscode/APCSP exists.&quot; .",
            "url": "https://nvarap.github.io/blog/Hacks/BashOne",
            "relUrl": "/Hacks/BashOne",
            "date": " • Aug 20, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://nvarap.github.io/blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post9": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://nvarap.github.io/blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "MUN",
          "content": "This page is to demonstrate my repertoire in Model United Nations. . I have competed in 3 conferences . SCVMUN | DMUNC | GAUCHOMUN | . I have earned . 1 Honorable award | 2 Research awards | . I am currently the secretary of Del Norte’s Model United Nation Club .",
          "url": "https://nvarap.github.io/blog/MUN/",
          "relUrl": "/MUN/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "About Me",
          "content": "This blog pertains to Varaprasad N, APCSP 1 Student. . . Advanced Placement: Computer Science &#8617; . |",
          "url": "https://nvarap.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page4": {
          "title": "Notes",
          "content": "Week 0 . Discussed Fastpages creation Go to the setup link | Once you receive a pull request, use this utility Set settings to RSA and 4096 | Generate keys | Use utilities provided in the pull request to place keys in Note that the secret key must be SSH_DEPLOY_KEY exactly | . | | Once all these are done, check your URL to see if everything is workings if not: try checking the actions page. | . | Otherwise continue with configuring your website | . | Discussed Markdown files and syntax | . Week 1 . Started work on Fastpages Frontend Development Learned how to change tags configure when assigning tags in the TOC. Changing these tags add them | Create new pages, using TOC and making the .md file’s layout to page | . | Learn bash Use basic syntax, such as assigning variables without spaces str=&quot;string&quot; | Use echo to print | . | Learn basic python Use print and | return to output | Create a quiz | . | . Week 2 . Started learning about python dictionaries Create lists using [] and dictionaries using {} | use append to add to the end of a list | You can nest lists and dictionaries, which means to put multiple of a similar structure in one | You can print out a list and dictionary, or print out an index (an element or object in a list) | You can use a for i in range(x) loop, a for element in list, while i != x or a recursive loop (using a function that calls itself) | . | .",
          "url": "https://nvarap.github.io/blog/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://nvarap.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}